{"ast":null,"code":"'use client';\n\nimport React, { forwardRef } from 'react';\nconst Form = forwardRef(({\n  form,\n  onSubmit,\n  onReset,\n  ...others\n}, ref) => /* @__PURE__ */React.createElement(\"form\", {\n  ...others,\n  onSubmit: form.onSubmit(typeof onSubmit === \"function\" ? onSubmit : () => {}),\n  onReset: event => {\n    onReset?.(event);\n    form.onReset(event);\n  },\n  ref\n}));\nexport { Form };","map":{"version":3,"names":["Form","forwardRef","form","onSubmit","onReset","others","ref","React","createElement","event"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/form/src/Form/Form.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { TransformedValues, UseFormReturnType } from '../types';\n\nexport interface FormProps<Form extends UseFormReturnType<any>>\n  extends React.ComponentPropsWithRef<'form'> {\n  form: Form;\n  onSubmit?: (values: TransformedValues<Form>) => void;\n}\n\nexport type FormComponent = <Form extends UseFormReturnType<any>>(\n  props: FormProps<Form>\n) => JSX.Element | React.ReactNode;\n\nexport const Form: FormComponent = forwardRef(\n  <Form extends UseFormReturnType<any>>(\n    { form, onSubmit, onReset, ...others }: FormProps<Form>,\n    ref: React.ForwardedRef<HTMLFormElement>\n  ) => (\n    <form\n      {...others}\n      onSubmit={form.onSubmit(typeof onSubmit === 'function' ? onSubmit : () => {})}\n      onReset={(event) => {\n        onReset?.(event);\n        form.onReset(event);\n      }}\n      ref={ref}\n    />\n  )\n);\n"],"mappings":";;;AAEY,MAACA,IAAI,GAAGC,UAAU,CAC5B,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,OAAO;EAAE,GAAGC;AAAM,CAAE,EAAEC,GAAG,KAAqB,eAAAC,KAAK,CAACC,aAAa,CAClF,MAAM,EACN;EACE,GAAGH,MAAM;EACTF,QAAQ,EAAED,IAAI,CAACC,QAAQ,CAAC,OAAOA,QAAQ,KAAK,UAAU,GAAGA,QAAQ,GAAG,MAAM,CAChF,CAAO,CAAC;EACFC,OAAO,EAAGK,KAAK,IAAK;IAClBL,OAAO,GAAGK,KAAK,CAAC;IAChBP,IAAI,CAACE,OAAO,CAACK,KAAK,CAAC;EACpB;EACDH;AACD,CACF,CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}