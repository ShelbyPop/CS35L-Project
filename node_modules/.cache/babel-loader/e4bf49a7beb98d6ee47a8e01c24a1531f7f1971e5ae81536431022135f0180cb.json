{"ast":null,"code":"'use client';\n\nimport React, { forwardRef, cloneElement } from 'react';\nimport { isElement } from '../../../core/utils/is-element/is-element.mjs';\nimport { createEventHandler } from '../../../core/utils/create-event-handler/create-event-handler.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Popover } from '../../Popover/Popover.mjs';\nimport '../../Popover/PopoverDropdown/PopoverDropdown.mjs';\nimport '../../Popover/PopoverTarget/PopoverTarget.mjs';\nimport { useHoverCardContext } from '../HoverCard.context.mjs';\nconst defaultProps = {\n  refProp: \"ref\"\n};\nconst HoverCardTarget = forwardRef((props, ref) => {\n  const {\n    children,\n    refProp,\n    eventPropsWrapperName,\n    ...others\n  } = useProps(\"HoverCardTarget\", defaultProps, props);\n  if (!isElement(children)) {\n    throw new Error(\"HoverCard.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported\");\n  }\n  const ctx = useHoverCardContext();\n  const onMouseEnter = createEventHandler(children.props.onMouseEnter, ctx.openDropdown);\n  const onMouseLeave = createEventHandler(children.props.onMouseLeave, ctx.closeDropdown);\n  const eventListeners = {\n    onMouseEnter,\n    onMouseLeave\n  };\n  return /* @__PURE__ */React.createElement(Popover.Target, {\n    refProp,\n    ref,\n    ...others\n  }, cloneElement(children, eventPropsWrapperName ? {\n    [eventPropsWrapperName]: eventListeners\n  } : eventListeners));\n});\nHoverCardTarget.displayName = \"@mantine/core/HoverCardTarget\";\nexport { HoverCardTarget };","map":{"version":3,"names":["defaultProps","refProp","HoverCardTarget","forwardRef","props","ref","children","eventPropsWrapperName","others","useProps","isElement","Error","ctx","useHoverCardContext","onMouseEnter","createEventHandler","openDropdown","onMouseLeave","closeDropdown","eventListeners","React","createElement","Popover","Target","cloneElement","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/HoverCard/HoverCardTarget/HoverCardTarget.tsx"],"sourcesContent":["import React, { cloneElement, forwardRef } from 'react';\nimport { createEventHandler, isElement, useProps } from '../../../core';\nimport { Popover, PopoverTargetProps } from '../../Popover';\nimport { useHoverCardContext } from '../HoverCard.context';\n\nexport interface HoverCardTargetProps extends PopoverTargetProps {\n  /** Key of the prop that is used to pass event listeners, by default event listeners are passed directly to component */\n  eventPropsWrapperName?: string;\n}\n\nconst defaultProps: Partial<HoverCardTargetProps> = {\n  refProp: 'ref',\n};\n\nexport const HoverCardTarget = forwardRef<HTMLElement, HoverCardTargetProps>((props, ref) => {\n  const { children, refProp, eventPropsWrapperName, ...others } = useProps(\n    'HoverCardTarget',\n    defaultProps,\n    props\n  );\n\n  if (!isElement(children)) {\n    throw new Error(\n      'HoverCard.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  const ctx = useHoverCardContext();\n  const onMouseEnter = createEventHandler(children.props.onMouseEnter, ctx.openDropdown);\n  const onMouseLeave = createEventHandler(children.props.onMouseLeave, ctx.closeDropdown);\n\n  const eventListeners = { onMouseEnter, onMouseLeave };\n\n  return (\n    <Popover.Target refProp={refProp} ref={ref} {...others}>\n      {cloneElement(\n        children as React.ReactElement,\n        eventPropsWrapperName ? { [eventPropsWrapperName]: eventListeners } : eventListeners\n      )}\n    </Popover.Target>\n  );\n});\n\nHoverCardTarget.displayName = '@mantine/core/HoverCardTarget';\n"],"mappings":";;;;;;;;;;;;;;;;;;AAKA,MAAMA,YAAY,GAAG;EACnBC,OAAO,EAAE;AACX,CAAC;AACW,MAACC,eAAe,GAAGC,UAAU,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;EACxD,MAAM;IAAEC,QAAQ;IAAEL,OAAO;IAAEM,qBAAqB;IAAE,GAAGC;EAAQ,IAAGC,QAAQ,CACtE,iBAAiB,EACjBT,YAAY,EACZI,KACJ,CAAG;EACD,IAAI,CAACM,SAAS,CAACJ,QAAQ,CAAC,EAAE;IACxB,MAAM,IAAIK,KAAK,CACb,oKACN,CAAK;EACF;EACD,MAAMC,GAAG,GAAGC,mBAAmB,EAAE;EACjC,MAAMC,YAAY,GAAGC,kBAAkB,CAACT,QAAQ,CAACF,KAAK,CAACU,YAAY,EAAEF,GAAG,CAACI,YAAY,CAAC;EACtF,MAAMC,YAAY,GAAGF,kBAAkB,CAACT,QAAQ,CAACF,KAAK,CAACa,YAAY,EAAEL,GAAG,CAACM,aAAa,CAAC;EACvF,MAAMC,cAAc,GAAG;IAAEL,YAAY;IAAEG;EAAY,CAAE;EACrD,sBAAuBG,KAAK,CAACC,aAAa,CAACC,OAAO,CAACC,MAAM,EAAE;IAAEtB,OAAO;IAAEI,GAAG;IAAE,GAAGG;EAAM,CAAE,EAAEgB,YAAY,CAClGlB,QAAQ,EACRC,qBAAqB,GAAG;IAAE,CAACA,qBAAqB,GAAGY;EAAgB,IAAGA,cAC1E,CAAG,CAAC;AACJ,CAAC,CAAE;AACHjB,eAAe,CAACuB,WAAW,GAAG,+BAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}