{"ast":null,"code":"'use client';\n\nimport React, { forwardRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useScrollAreaContext } from '../ScrollArea.context.mjs';\nconst ScrollAreaViewport = forwardRef(({\n  children,\n  style,\n  ...others\n}, ref) => {\n  const ctx = useScrollAreaContext();\n  const rootRef = useMergedRef(ref, ctx.onViewportChange);\n  return /* @__PURE__ */React.createElement(Box, {\n    ...others,\n    ref: rootRef,\n    style: {\n      overflowX: ctx.scrollbarXEnabled ? \"scroll\" : \"hidden\",\n      overflowY: ctx.scrollbarYEnabled ? \"scroll\" : \"hidden\",\n      ...style\n    }\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    style: {\n      minWidth: \"100%\",\n      display: \"table\"\n    },\n    ref: ctx.onContentChange\n  }, children));\n});\nScrollAreaViewport.displayName = \"@mantine/core/ScrollAreaViewport\";\nexport { ScrollAreaViewport };","map":{"version":3,"names":["ScrollAreaViewport","forwardRef","children","style","others","ref","ctx","useScrollAreaContext","rootRef","useMergedRef","onViewportChange","React","createElement","Box","overflowX","scrollbarXEnabled","overflowY","scrollbarYEnabled","minWidth","display","onContentChange","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/ScrollArea/ScrollAreaViewport/ScrollAreaViewport.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { Box, BoxProps, ElementProps } from '../../../core';\nimport { useScrollAreaContext } from '../ScrollArea.context';\n\nexport interface ScrollAreaViewportProps extends BoxProps, ElementProps<'div'> {}\n\nexport const ScrollAreaViewport = forwardRef<HTMLDivElement, ScrollAreaViewportProps>(\n  ({ children, style, ...others }, ref) => {\n    const ctx = useScrollAreaContext();\n    const rootRef = useMergedRef(ref, ctx.onViewportChange);\n\n    return (\n      <Box\n        {...others}\n        ref={rootRef}\n        style={{\n          overflowX: ctx.scrollbarXEnabled ? 'scroll' : 'hidden',\n          overflowY: ctx.scrollbarYEnabled ? 'scroll' : 'hidden',\n          ...style,\n        }}\n      >\n        <div style={{ minWidth: '100%', display: 'table' }} ref={ctx.onContentChange}>\n          {children}\n        </div>\n      </Box>\n    );\n  }\n);\n\nScrollAreaViewport.displayName = '@mantine/core/ScrollAreaViewport';\n"],"mappings":";;;;;;;;;;;;AAKY,MAACA,kBAAkB,GAAGC,UAAU,CAC1C,CAAC;EAAEC,QAAQ;EAAEC,KAAK;EAAE,GAAGC;AAAM,CAAE,EAAEC,GAAG,KAAK;EACvC,MAAMC,GAAG,GAAGC,oBAAoB,EAAE;EAClC,MAAMC,OAAO,GAAGC,YAAY,CAACJ,GAAG,EAAEC,GAAG,CAACI,gBAAgB,CAAC;EACvD,sBAAuBC,KAAK,CAACC,aAAa,CACxCC,GAAG,EACH;IACE,GAAGT,MAAM;IACTC,GAAG,EAAEG,OAAO;IACZL,KAAK,EAAE;MACLW,SAAS,EAAER,GAAG,CAACS,iBAAiB,GAAG,QAAQ,GAAG,QAAQ;MACtDC,SAAS,EAAEV,GAAG,CAACW,iBAAiB,GAAG,QAAQ,GAAG,QAAQ;MACtD,GAAGd;IACJ;EACF,GACe,eAAAQ,KAAK,CAACC,aAAa,CAAC,KAAK,EAAE;IAAET,KAAK,EAAE;MAAEe,QAAQ,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAS;IAAEd,GAAG,EAAEC,GAAG,CAACc;EAAe,CAAE,EAAElB,QAAQ,CACtI,CAAK;AACF,CACH,CAAE;AACFF,kBAAkB,CAACqB,WAAW,GAAG,kCAAkC"},"metadata":{},"sourceType":"module","externalDependencies":[]}