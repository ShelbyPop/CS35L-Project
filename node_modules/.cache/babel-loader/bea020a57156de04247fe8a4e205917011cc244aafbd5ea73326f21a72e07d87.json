{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { useId } from '@mantine/hooks';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../CloseButton/CloseIcon.mjs';\nimport { CloseButton } from '../CloseButton/CloseButton.mjs';\nimport classes from './Alert.module.css.mjs';\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((theme, {\n  radius,\n  color,\n  variant,\n  autoContrast\n}) => {\n  const colors = theme.variantColorResolver({\n    color: color || theme.primaryColor,\n    theme,\n    variant: variant || \"light\",\n    autoContrast\n  });\n  return {\n    root: {\n      \"--alert-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--alert-bg\": color || variant ? colors.background : void 0,\n      \"--alert-color\": colors.color,\n      \"--alert-bd\": color || variant ? colors.border : void 0\n    }\n  };\n});\nconst Alert = factory((_props, ref) => {\n  const props = useProps(\"Alert\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    radius,\n    color,\n    title,\n    children,\n    id,\n    icon,\n    withCloseButton,\n    onClose,\n    closeButtonLabel,\n    variant,\n    autoContrast,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Alert\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const rootId = useId(id);\n  const titleId = title && `${rootId}-title` || void 0;\n  const bodyId = `${rootId}-body`;\n  return /* @__PURE__ */React.createElement(Box, {\n    id: rootId,\n    ...getStyles(\"root\", {\n      variant\n    }),\n    variant,\n    ref,\n    ...others,\n    role: \"alert\",\n    \"aria-describedby\": bodyId,\n    \"aria-labelledby\": titleId\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    ...getStyles(\"wrapper\")\n  }, icon && /* @__PURE__ */React.createElement(\"div\", {\n    ...getStyles(\"icon\")\n  }, icon), /* @__PURE__ */React.createElement(\"div\", {\n    ...getStyles(\"body\")\n  }, title && /* @__PURE__ */React.createElement(\"div\", {\n    ...getStyles(\"title\"),\n    \"data-with-close-button\": withCloseButton || void 0\n  }, /* @__PURE__ */React.createElement(\"span\", {\n    id: titleId,\n    ...getStyles(\"label\")\n  }, title)), children && /* @__PURE__ */React.createElement(\"div\", {\n    id: bodyId,\n    ...getStyles(\"message\"),\n    \"data-variant\": variant\n  }, children)), withCloseButton && /* @__PURE__ */React.createElement(CloseButton, {\n    ...getStyles(\"closeButton\"),\n    onClick: onClose,\n    variant: \"transparent\",\n    size: 16,\n    iconSize: 16,\n    \"aria-label\": closeButtonLabel,\n    unstyled\n  })));\n});\nAlert.classes = classes;\nAlert.displayName = \"@mantine/core/Alert\";\nexport { Alert };","map":{"version":3,"names":["defaultProps","varsResolver","createVarsResolver","theme","radius","color","variant","autoContrast","colors","variantColorResolver","primaryColor","root","getRadius","background","border","Alert","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","title","children","id","icon","withCloseButton","onClose","closeButtonLabel","others","getStyles","useStyles","name","classes","rootId","useId","titleId","bodyId","React","createElement","Box","role","CloseButton","onClick","size","iconSize","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Alert/Alert.tsx"],"sourcesContent":["import React from 'react';\nimport { useId } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  MantineColor,\n  MantineRadius,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { CloseButton } from '../CloseButton';\nimport classes from './Alert.module.css';\n\nexport type AlertStylesNames =\n  | 'root'\n  | 'body'\n  | 'label'\n  | 'title'\n  | 'icon'\n  | 'wrapper'\n  | 'message'\n  | 'closeButton';\nexport type AlertVariant = 'filled' | 'light' | 'outline' | 'default' | 'transparent' | 'white';\nexport type AlertCssVariables = {\n  root: '--alert-radius' | '--alert-bg' | '--alert-color' | '--alert-bd';\n};\n\nexport interface AlertProps\n  extends BoxProps,\n    StylesApiProps<AlertFactory>,\n    ElementProps<'div', 'title'> {\n  /** Key of `theme.radius` or any valid CSS value to set border-radius, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Key of `theme.colors` or any valid CSS color, default value is `theme.primaryColor`  */\n  color?: MantineColor;\n\n  /** Alert title */\n  title?: React.ReactNode;\n\n  /** Icon displayed next to the title */\n  icon?: React.ReactNode;\n\n  /** Determines whether close button should be displayed, `false` by default */\n  withCloseButton?: boolean;\n\n  /** Called when the close button is clicked */\n  onClose?: () => void;\n\n  /** Close button `aria-label` */\n  closeButtonLabel?: string;\n\n  /** Determines whether text color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type AlertFactory = Factory<{\n  props: AlertProps;\n  ref: HTMLDivElement;\n  stylesNames: AlertStylesNames;\n  vars: AlertCssVariables;\n  variant: AlertVariant;\n}>;\n\nconst defaultProps: Partial<AlertProps> = {};\n\nconst varsResolver = createVarsResolver<AlertFactory>(\n  (theme, { radius, color, variant, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      variant: variant || 'light',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--alert-radius': radius === undefined ? undefined : getRadius(radius),\n        '--alert-bg': color || variant ? colors.background : undefined,\n        '--alert-color': colors.color,\n        '--alert-bd': color || variant ? colors.border : undefined,\n      },\n    };\n  }\n);\n\nexport const Alert = factory<AlertFactory>((_props, ref) => {\n  const props = useProps('Alert', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    radius,\n    color,\n    title,\n    children,\n    id,\n    icon,\n    withCloseButton,\n    onClose,\n    closeButtonLabel,\n    variant,\n    autoContrast,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<AlertFactory>({\n    name: 'Alert',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const rootId = useId(id);\n  const titleId = (title && `${rootId}-title`) || undefined;\n  const bodyId = `${rootId}-body`;\n\n  return (\n    <Box\n      id={rootId}\n      {...getStyles('root', { variant })}\n      variant={variant}\n      ref={ref}\n      {...others}\n      role=\"alert\"\n      aria-describedby={bodyId}\n      aria-labelledby={titleId}\n    >\n      <div {...getStyles('wrapper')}>\n        {icon && <div {...getStyles('icon')}>{icon}</div>}\n\n        <div {...getStyles('body')}>\n          {title && (\n            <div {...getStyles('title')} data-with-close-button={withCloseButton || undefined}>\n              <span id={titleId} {...getStyles('label')}>\n                {title}\n              </span>\n            </div>\n          )}\n\n          {children && (\n            <div id={bodyId} {...getStyles('message')} data-variant={variant}>\n              {children}\n            </div>\n          )}\n        </div>\n\n        {withCloseButton && (\n          <CloseButton\n            {...getStyles('closeButton')}\n            onClick={onClose}\n            variant=\"transparent\"\n            size={16}\n            iconSize={16}\n            aria-label={closeButtonLabel}\n            unstyled={unstyled}\n          />\n        )}\n      </div>\n    </Box>\n  );\n});\n\nAlert.classes = classes;\nAlert.displayName = '@mantine/core/Alert';\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAaA,MAAMA,YAAY,GAAG,EAAE;AACvB,MAAMC,YAAY,GAAGC,kBAAkB,CACrC,CAACC,KAAK,EAAE;EAAEC,MAAM;EAAEC,KAAK;EAAEC,OAAO;EAAEC;AAAY,CAAE,KAAK;EACnD,MAAMC,MAAM,GAAGL,KAAK,CAACM,oBAAoB,CAAC;IACxCJ,KAAK,EAAEA,KAAK,IAAIF,KAAK,CAACO,YAAY;IAClCP,KAAK;IACLG,OAAO,EAAEA,OAAO,IAAI,OAAO;IAC3BC;EACN,CAAK,CAAC;EACF,OAAO;IACLI,IAAI,EAAE;MACJ,gBAAgB,EAAEP,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGQ,SAAS,CAACR,MAAM,CAAC;MAChE,YAAY,EAAEC,KAAK,IAAIC,OAAO,GAAGE,MAAM,CAACK,UAAU,GAAG,KAAK,CAAC;MAC3D,eAAe,EAAEL,MAAM,CAACH,KAAK;MAC7B,YAAY,EAAEA,KAAK,IAAIC,OAAO,GAAGE,MAAM,CAACM,MAAM,GAAG,KAAK;IACvD;EACP,CAAK;AACF,CACH,CAAC;AACW,MAACC,KAAK,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EAC5C,MAAMC,KAAK,GAAGC,QAAQ,CAAC,OAAO,EAAEpB,YAAY,EAAEiB,MAAM,CAAC;EACrD,MAAM;IACJI,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJtB,MAAM;IACNC,KAAK;IACLsB,KAAK;IACLC,QAAQ;IACRC,EAAE;IACFC,IAAI;IACJC,eAAe;IACfC,OAAO;IACPC,gBAAgB;IAChB3B,OAAO;IACPC,YAAY;IACZ,GAAG2B;EACJ,IAAGf,KAAK;EACT,MAAMgB,SAAS,GAAGC,SAAS,CAAC;IAC1BC,IAAI,EAAE,OAAO;IACbC,OAAO;IACPnB,KAAK;IACLG,SAAS;IACTC,KAAK;IACLF,UAAU;IACVG,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJzB;EACJ,CAAG,CAAC;EACF,MAAMsC,MAAM,GAAGC,KAAK,CAACX,EAAE,CAAC;EACxB,MAAMY,OAAO,GAAGd,KAAK,IAAK,GAAEY,MAAO,QAAO,IAAI,KAAK,CAAC;EACpD,MAAMG,MAAM,GAAI,GAAEH,MAAO,OAAM;EAC/B,sBAAuBI,KAAK,CAACC,aAAa,CACxCC,GAAG,EACH;IACEhB,EAAE,EAAEU,MAAM;IACV,GAAGJ,SAAS,CAAC,MAAM,EAAE;MAAE7B;IAAO,CAAE,CAAC;IACjCA,OAAO;IACPY,GAAG;IACH,GAAGgB,MAAM;IACTY,IAAI,EAAE,OAAO;IACb,kBAAkB,EAAEJ,MAAM;IAC1B,iBAAiB,EAAED;EACpB,GACL,eAAoBE,KAAK,CAACC,aAAa,CAAC,KAAK,EAAE;IAAE,GAAGT,SAAS,CAAC,SAAS;EAAG,GAAEL,IAAI,mBAAoBa,KAAK,CAACC,aAAa,CAAC,KAAK,EAAE;IAAE,GAAGT,SAAS,CAAC,MAAM;EAAG,GAAEL,IAAI,CAAC,EAAkB,eAAAa,KAAK,CAACC,aAAa,CAAC,KAAK,EAAE;IAAE,GAAGT,SAAS,CAAC,MAAM;EAAC,CAAE,EAAER,KAAK,IAAoB,eAAAgB,KAAK,CAACC,aAAa,CAAC,KAAK,EAAE;IAAE,GAAGT,SAAS,CAAC,OAAO,CAAC;IAAE,wBAAwB,EAAEJ,eAAe,IAAI,KAAK;EAAG,kBAAkBY,KAAK,CAACC,aAAa,CAAC,MAAM,EAAE;IAAEf,EAAE,EAAEY,OAAO;IAAE,GAAGN,SAAS,CAAC,OAAO;EAAG,GAAER,KAAK,CAAC,CAAC,EAAEC,QAAQ,mBAAoBe,KAAK,CAACC,aAAa,CAAC,KAAK,EAAE;IAAEf,EAAE,EAAEa,MAAM;IAAE,GAAGP,SAAS,CAAC,SAAS,CAAC;IAAE,cAAc,EAAE7B;EAAS,GAAEsB,QAAQ,CAAC,CAAC,EAAEG,eAAe,mBAAoBY,KAAK,CAACC,aAAa,CAC3nBG,WAAW,EACX;IACE,GAAGZ,SAAS,CAAC,aAAa,CAAC;IAC3Ba,OAAO,EAAEhB,OAAO;IAChB1B,OAAO,EAAE,aAAa;IACtB2C,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZ,YAAY,EAAEjB,gBAAgB;IAC9BR;EACD,CACP,CAAK,CACL,CAAG;AACH,CAAC,CAAE;AACHV,KAAK,CAACuB,OAAO,GAAGA,OAAO;AACvBvB,KAAK,CAACoC,WAAW,GAAG,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}