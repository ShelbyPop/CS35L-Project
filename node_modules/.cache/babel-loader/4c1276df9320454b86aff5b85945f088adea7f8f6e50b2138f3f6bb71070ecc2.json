{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useComboboxContext } from '../Combobox.context.mjs';\nimport classes from '../Combobox.module.css.mjs';\nconst defaultProps = {};\nconst ComboboxGroup = factory((props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    children,\n    label,\n    ...others\n  } = useProps(\"ComboboxGroup\", defaultProps, props);\n  const ctx = useComboboxContext();\n  return /* @__PURE__ */React.createElement(Box, {\n    ref,\n    ...ctx.getStyles(\"group\", {\n      className,\n      classNames,\n      style,\n      styles\n    }),\n    ...others\n  }, label && /* @__PURE__ */React.createElement(\"div\", {\n    ...ctx.getStyles(\"groupLabel\", {\n      classNames,\n      styles\n    })\n  }, label), children);\n});\nComboboxGroup.classes = classes;\nComboboxGroup.displayName = \"@mantine/core/ComboboxGroup\";\nexport { ComboboxGroup };","map":{"version":3,"names":["defaultProps","ComboboxGroup","factory","props","ref","classNames","className","style","styles","vars","children","label","others","useProps","ctx","useComboboxContext","React","createElement","Box","getStyles","classes","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Combobox/ComboboxGroup/ComboboxGroup.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxGroupStylesNames = 'group' | 'groupLabel';\n\nexport interface ComboboxGroupProps\n  extends BoxProps,\n    CompoundStylesApiProps<ComboboxGroupFactory>,\n    ElementProps<'div'> {\n  /** Group label */\n  label?: React.ReactNode;\n}\n\nexport type ComboboxGroupFactory = Factory<{\n  props: ComboboxGroupProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxGroupStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ComboboxGroupProps> = {};\n\nexport const ComboboxGroup = factory<ComboboxGroupFactory>((props, ref) => {\n  const { classNames, className, style, styles, vars, children, label, ...others } = useProps(\n    'ComboboxGroup',\n    defaultProps,\n    props\n  );\n\n  const ctx = useComboboxContext();\n\n  return (\n    <Box\n      ref={ref}\n      {...ctx.getStyles('group', { className, classNames, style, styles })}\n      {...others}\n    >\n      {label && <div {...ctx.getStyles('groupLabel', { classNames, styles })}>{label}</div>}\n      {children}\n    </Box>\n  );\n});\n\nComboboxGroup.classes = classes;\nComboboxGroup.displayName = '@mantine/core/ComboboxGroup';\n"],"mappings":";;;;;;;;;;;;;;;AASA,MAAMA,YAAY,GAAG,EAAE;AACX,MAACC,aAAa,GAAGC,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;EACnD,MAAM;IAAEC,UAAU;IAAEC,SAAS;IAAEC,KAAK;IAAEC,MAAM;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,KAAK;IAAE,GAAGC;EAAM,CAAE,GAAGC,QAAQ,CACzF,eAAe,EACfb,YAAY,EACZG,KACJ,CAAG;EACD,MAAMW,GAAG,GAAGC,kBAAkB,EAAE;EAChC,sBAAuBC,KAAK,CAACC,aAAa,CACxCC,GAAG,EACH;IACEd,GAAG;IACH,GAAGU,GAAG,CAACK,SAAS,CAAC,OAAO,EAAE;MAAEb,SAAS;MAAED,UAAU;MAAEE,KAAK;MAAEC;IAAM,CAAE,CAAC;IACnE,GAAGI;EACJ,GACDD,KAAK,IAAoB,eAAAK,KAAK,CAACC,aAAa,CAAC,KAAK,EAAE;IAAE,GAAGH,GAAG,CAACK,SAAS,CAAC,YAAY,EAAE;MAAEd,UAAU;MAAEG;IAAM,CAAE;EAAC,CAAE,EAAEG,KAAK,CAAC,EACtHD,QACJ,CAAG;AACH,CAAC,CAAE;AACHT,aAAa,CAACmB,OAAO,GAAGA,OAAO;AAC/BnB,aAAa,CAACoB,WAAW,GAAG,6BAA6B"},"metadata":{},"sourceType":"module","externalDependencies":[]}