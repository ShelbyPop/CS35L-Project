{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../../core/factory/polymorphic-factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useAppShellContext } from '../AppShell.context.mjs';\nimport classes from '../AppShell.module.css.mjs';\nconst defaultProps = {};\nconst AppShellSection = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"AppShellSection\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    grow,\n    mod,\n    ...others\n  } = props;\n  const ctx = useAppShellContext();\n  return /* @__PURE__ */React.createElement(Box, {\n    ref,\n    mod: [{\n      grow\n    }, mod],\n    ...ctx.getStyles(\"section\", {\n      className,\n      style,\n      classNames,\n      styles\n    }),\n    ...others\n  });\n});\nAppShellSection.classes = classes;\nAppShellSection.displayName = \"@mantine/core/AppShellSection\";\nexport { AppShellSection };","map":{"version":3,"names":["defaultProps","AppShellSection","polymorphicFactory","_props","ref","props","useProps","classNames","className","style","styles","vars","grow","mod","others","ctx","useAppShellContext","React","createElement","Box","getStyles","classes","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/AppShell/AppShellSection/AppShellSection.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  polymorphicFactory,\n  PolymorphicFactory,\n  useProps,\n} from '../../../core';\nimport { useAppShellContext } from '../AppShell.context';\nimport classes from '../AppShell.module.css';\n\nexport type AppShellSectionStylesNames = 'section';\n\nexport interface AppShellSectionProps\n  extends BoxProps,\n    CompoundStylesApiProps<AppShellSectionFactory> {\n  /** Determines whether the section should take all available space, `false` by default */\n  grow?: boolean;\n}\n\nexport type AppShellSectionFactory = PolymorphicFactory<{\n  props: AppShellSectionProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: AppShellSectionStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<AppShellSectionProps> = {};\n\nexport const AppShellSection = polymorphicFactory<AppShellSectionFactory>((_props, ref) => {\n  const props = useProps('AppShellSection', defaultProps, _props);\n  const { classNames, className, style, styles, vars, grow, mod, ...others } = props;\n  const ctx = useAppShellContext();\n\n  return (\n    <Box\n      ref={ref}\n      mod={[{ grow }, mod]}\n      {...ctx.getStyles('section', { className, style, classNames, styles })}\n      {...others}\n    />\n  );\n});\n\nAppShellSection.classes = classes;\nAppShellSection.displayName = '@mantine/core/AppShellSection';\n"],"mappings":";;;;;;;;;;;;;;;AASA,MAAMA,YAAY,GAAG,EAAE;AACX,MAACC,eAAe,GAAGC,kBAAkB,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EACjE,MAAMC,KAAK,GAAGC,QAAQ,CAAC,iBAAiB,EAAEN,YAAY,EAAEG,MAAM,CAAC;EAC/D,MAAM;IAAEI,UAAU;IAAEC,SAAS;IAAEC,KAAK;IAAEC,MAAM;IAAEC,IAAI;IAAEC,IAAI;IAAEC,GAAG;IAAE,GAAGC;EAAM,CAAE,GAAGT,KAAK;EAClF,MAAMU,GAAG,GAAGC,kBAAkB,EAAE;EAChC,sBAAuBC,KAAK,CAACC,aAAa,CACxCC,GAAG,EACH;IACEf,GAAG;IACHS,GAAG,EAAE,CAAC;MAAED;IAAM,GAAEC,GAAG,CAAC;IACpB,GAAGE,GAAG,CAACK,SAAS,CAAC,SAAS,EAAE;MAAEZ,SAAS;MAAEC,KAAK;MAAEF,UAAU;MAAEG;IAAM,CAAE,CAAC;IACrE,GAAGI;EACJ,CACL,CAAG;AACH,CAAC,CAAE;AACHb,eAAe,CAACoB,OAAO,GAAGA,OAAO;AACjCpB,eAAe,CAACqB,WAAW,GAAG,+BAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}