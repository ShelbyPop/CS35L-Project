{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { keys } from '../../../core/utils/keys/keys.mjs';\nimport { filterProps } from '../../../core/utils/filter-props/filter-props.mjs';\nimport { getSortedBreakpoints } from '../../../core/utils/get-sorted-breakpoints/get-sorted-breakpoints.mjs';\nimport { getBaseValue } from '../../../core/utils/get-base-value/get-base-value.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { InlineStyles } from '../../../core/InlineStyles/InlineStyles.mjs';\nimport '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useGridContext } from '../Grid.context.mjs';\nconst getColumnFlexBasis = (colSpan, columns) => {\n  if (colSpan === \"content\") {\n    return \"auto\";\n  }\n  if (colSpan === \"auto\") {\n    return \"0rem\";\n  }\n  return colSpan ? `${100 / (columns / colSpan)}%` : void 0;\n};\nconst getColumnMaxWidth = (colSpan, columns, grow) => {\n  if (grow || colSpan === \"auto\") {\n    return \"100%\";\n  }\n  if (colSpan === \"content\") {\n    return \"unset\";\n  }\n  return getColumnFlexBasis(colSpan, columns);\n};\nconst getColumnFlexGrow = (colSpan, grow) => {\n  if (!colSpan) {\n    return void 0;\n  }\n  return colSpan === \"auto\" || grow ? \"1\" : \"auto\";\n};\nconst getColumnOffset = (offset, columns) => offset === 0 ? \"0\" : offset ? `${100 / (columns / offset)}%` : void 0;\nfunction GridColVariables({\n  span,\n  order,\n  offset,\n  selector\n}) {\n  const theme = useMantineTheme();\n  const ctx = useGridContext();\n  const baseValue = getBaseValue(span);\n  const baseSpan = baseValue === void 0 ? 12 : getBaseValue(span);\n  const baseStyles = filterProps({\n    \"--col-order\": getBaseValue(order)?.toString(),\n    \"--col-flex-grow\": getColumnFlexGrow(baseSpan, ctx.grow),\n    \"--col-flex-basis\": getColumnFlexBasis(baseSpan, ctx.columns),\n    \"--col-width\": baseSpan === \"content\" ? \"auto\" : void 0,\n    \"--col-max-width\": getColumnMaxWidth(baseSpan, ctx.columns, ctx.grow),\n    \"--col-offset\": getColumnOffset(getBaseValue(offset), ctx.columns)\n  });\n  const queries = keys(theme.breakpoints).reduce((acc, breakpoint) => {\n    if (!acc[breakpoint]) {\n      acc[breakpoint] = {};\n    }\n    if (typeof order === \"object\" && order[breakpoint] !== void 0) {\n      acc[breakpoint][\"--col-order\"] = order[breakpoint]?.toString();\n    }\n    if (typeof span === \"object\" && span[breakpoint] !== void 0) {\n      acc[breakpoint][\"--col-flex-grow\"] = getColumnFlexGrow(span[breakpoint], ctx.grow);\n      acc[breakpoint][\"--col-flex-basis\"] = getColumnFlexBasis(span[breakpoint], ctx.columns);\n      acc[breakpoint][\"--col-width\"] = span[breakpoint] === \"content\" ? \"auto\" : void 0;\n      acc[breakpoint][\"--col-max-width\"] = getColumnMaxWidth(span[breakpoint], ctx.columns, ctx.grow);\n    }\n    if (typeof offset === \"object\" && offset[breakpoint] !== void 0) {\n      acc[breakpoint][\"--col-offset\"] = getColumnOffset(offset[breakpoint], ctx.columns);\n    }\n    return acc;\n  }, {});\n  const sortedBreakpoints = getSortedBreakpoints(keys(queries), theme).filter(breakpoint => keys(queries[breakpoint.value]).length > 0);\n  const media = sortedBreakpoints.map(breakpoint => ({\n    query: `(min-width: ${theme.breakpoints[breakpoint.value]})`,\n    styles: queries[breakpoint.value]\n  }));\n  return /* @__PURE__ */React.createElement(InlineStyles, {\n    styles: baseStyles,\n    media,\n    selector\n  });\n}\nexport { GridColVariables };","map":{"version":3,"names":["getColumnFlexBasis","colSpan","columns","getColumnMaxWidth","grow","getColumnFlexGrow","getColumnOffset","offset","GridColVariables","span","order","selector","theme","useMantineTheme","ctx","useGridContext","baseValue","getBaseValue","baseSpan","baseStyles","filterProps","toString","queries","keys","breakpoints","reduce","acc","breakpoint","sortedBreakpoints","getSortedBreakpoints","filter","value","length","media","map","query","styles","React","createElement","InlineStyles"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Grid/GridCol/GridColVariables.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  filterProps,\n  getBaseValue,\n  getSortedBreakpoints,\n  InlineStyles,\n  keys,\n  MantineBreakpoint,\n  useMantineTheme,\n} from '../../../core';\nimport { useGridContext } from '../Grid.context';\nimport type { ColSpan, GridColProps } from './GridCol';\n\ninterface GridColVariablesProps {\n  selector: string;\n  span: GridColProps['span'] | undefined;\n  order?: GridColProps['order'] | undefined;\n  offset?: GridColProps['offset'] | undefined;\n}\n\nconst getColumnFlexBasis = (colSpan: ColSpan | undefined, columns: number) => {\n  if (colSpan === 'content') {\n    return 'auto';\n  }\n\n  if (colSpan === 'auto') {\n    return '0rem';\n  }\n\n  return colSpan ? `${100 / (columns / colSpan)}%` : undefined;\n};\n\nconst getColumnMaxWidth = (\n  colSpan: ColSpan | undefined,\n  columns: number,\n  grow: boolean | undefined\n) => {\n  if (grow || colSpan === 'auto') {\n    return '100%';\n  }\n\n  if (colSpan === 'content') {\n    return 'unset';\n  }\n\n  return getColumnFlexBasis(colSpan, columns);\n};\n\nconst getColumnFlexGrow = (colSpan: ColSpan | undefined, grow: boolean | undefined) => {\n  if (!colSpan) {\n    return undefined;\n  }\n\n  return colSpan === 'auto' || grow ? '1' : 'auto';\n};\n\nconst getColumnOffset = (offset: number | undefined, columns: number) =>\n  offset === 0 ? '0' : offset ? `${100 / (columns / offset)}%` : undefined;\n\nexport function GridColVariables({ span, order, offset, selector }: GridColVariablesProps) {\n  const theme = useMantineTheme();\n  const ctx = useGridContext();\n\n  const baseValue = getBaseValue(span);\n  const baseSpan = baseValue === undefined ? 12 : getBaseValue(span);\n\n  const baseStyles: Record<string, string | undefined> = filterProps({\n    '--col-order': getBaseValue(order)?.toString(),\n    '--col-flex-grow': getColumnFlexGrow(baseSpan, ctx.grow),\n    '--col-flex-basis': getColumnFlexBasis(baseSpan, ctx.columns),\n    '--col-width': baseSpan === 'content' ? 'auto' : undefined,\n    '--col-max-width': getColumnMaxWidth(baseSpan, ctx.columns, ctx.grow),\n    '--col-offset': getColumnOffset(getBaseValue(offset), ctx.columns),\n  });\n\n  const queries = keys(theme.breakpoints).reduce<Record<string, Record<string, any>>>(\n    (acc, breakpoint) => {\n      if (!acc[breakpoint]) {\n        acc[breakpoint] = {};\n      }\n\n      if (typeof order === 'object' && order[breakpoint] !== undefined) {\n        acc[breakpoint]['--col-order'] = order[breakpoint]?.toString();\n      }\n\n      if (typeof span === 'object' && span[breakpoint] !== undefined) {\n        acc[breakpoint]['--col-flex-grow'] = getColumnFlexGrow(span[breakpoint], ctx.grow);\n        acc[breakpoint]['--col-flex-basis'] = getColumnFlexBasis(span[breakpoint], ctx.columns);\n        acc[breakpoint]['--col-width'] = span[breakpoint] === 'content' ? 'auto' : undefined;\n        acc[breakpoint]['--col-max-width'] = getColumnMaxWidth(\n          span[breakpoint],\n          ctx.columns,\n          ctx.grow\n        );\n      }\n\n      if (typeof offset === 'object' && offset[breakpoint] !== undefined) {\n        acc[breakpoint]['--col-offset'] = getColumnOffset(offset[breakpoint], ctx.columns);\n      }\n\n      return acc;\n    },\n    {}\n  );\n\n  const sortedBreakpoints = getSortedBreakpoints(keys(queries), theme).filter(\n    (breakpoint) => keys(queries[breakpoint.value]).length > 0\n  );\n\n  const media = sortedBreakpoints.map((breakpoint) => ({\n    query: `(min-width: ${theme.breakpoints[breakpoint.value as MantineBreakpoint]})`,\n    styles: queries[breakpoint.value],\n  }));\n\n  return <InlineStyles styles={baseStyles} media={media} selector={selector} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}