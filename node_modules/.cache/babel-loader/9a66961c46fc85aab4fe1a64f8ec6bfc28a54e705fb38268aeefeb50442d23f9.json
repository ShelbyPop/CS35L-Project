{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { localStorageColorSchemeManager } from './color-scheme-managers/local-storage-manager.mjs';\nimport { MantineContext } from './Mantine.context.mjs';\nimport { MantineClasses } from './MantineClasses/MantineClasses.mjs';\nimport { MantineCssVariables } from './MantineCssVariables/MantineCssVariables.mjs';\nimport { MantineThemeProvider } from './MantineThemeProvider/MantineThemeProvider.mjs';\nimport { suppressNextjsWarning } from './suppress-nextjs-warning.mjs';\nimport '@mantine/hooks';\nimport { useProviderColorScheme } from './use-mantine-color-scheme/use-provider-color-scheme.mjs';\nimport { useRespectReduceMotion } from './use-respect-reduce-motion/use-respect-reduce-motion.mjs';\nsuppressNextjsWarning();\nfunction MantineProvider({\n  theme,\n  children,\n  getStyleNonce,\n  withCssVariables = true,\n  cssVariablesSelector = \":root\",\n  classNamesPrefix = \"mantine\",\n  colorSchemeManager = localStorageColorSchemeManager(),\n  defaultColorScheme = \"light\",\n  getRootElement = () => document.documentElement,\n  cssVariablesResolver,\n  forceColorScheme\n}) {\n  const {\n    colorScheme,\n    setColorScheme,\n    clearColorScheme\n  } = useProviderColorScheme({\n    defaultColorScheme,\n    forceColorScheme,\n    manager: colorSchemeManager,\n    getRootElement\n  });\n  useRespectReduceMotion({\n    respectReducedMotion: theme?.respectReducedMotion || false,\n    getRootElement\n  });\n  return /* @__PURE__ */React.createElement(MantineContext.Provider, {\n    value: {\n      colorSchemeManager,\n      colorScheme,\n      setColorScheme,\n      clearColorScheme,\n      getRootElement,\n      classNamesPrefix,\n      getStyleNonce,\n      cssVariablesResolver,\n      cssVariablesSelector\n    }\n  }, /* @__PURE__ */React.createElement(MantineThemeProvider, {\n    theme\n  }, withCssVariables && /* @__PURE__ */React.createElement(MantineCssVariables, {\n    cssVariablesSelector\n  }), /* @__PURE__ */React.createElement(MantineClasses, null), children));\n}\nMantineProvider.displayName = \"@mantine/core/MantineProvider\";\nexport { MantineProvider };","map":{"version":3,"names":["suppressNextjsWarning","MantineProvider","theme","children","getStyleNonce","withCssVariables","cssVariablesSelector","classNamesPrefix","colorSchemeManager","localStorageColorSchemeManager","defaultColorScheme","getRootElement","document","documentElement","cssVariablesResolver","forceColorScheme","colorScheme","setColorScheme","clearColorScheme","useProviderColorScheme","manager","useRespectReduceMotion","respectReducedMotion","React","createElement","MantineContext","Provider","value","MantineThemeProvider","MantineCssVariables","MantineClasses","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/core/MantineProvider/MantineProvider.tsx"],"sourcesContent":["import './global.css';\n\nimport React from 'react';\nimport { localStorageColorSchemeManager, MantineColorSchemeManager } from './color-scheme-managers';\nimport { MantineContext } from './Mantine.context';\nimport { MantineClasses } from './MantineClasses';\nimport { CSSVariablesResolver, MantineCssVariables } from './MantineCssVariables';\nimport { MantineThemeProvider } from './MantineThemeProvider';\nimport { suppressNextjsWarning } from './suppress-nextjs-warning';\nimport type { MantineColorScheme, MantineThemeOverride } from './theme.types';\nimport { useProviderColorScheme } from './use-mantine-color-scheme';\nimport { useRespectReduceMotion } from './use-respect-reduce-motion';\n\nsuppressNextjsWarning();\n\nexport interface MantineProviderProps {\n  /** Theme override object */\n  theme?: MantineThemeOverride;\n\n  /** Used to retrieve/set color scheme value in external storage, by default uses `window.localStorage` */\n  colorSchemeManager?: MantineColorSchemeManager;\n\n  /** Default color scheme value used when `colorSchemeManager` cannot retrieve value from external storage, `light` by default */\n  defaultColorScheme?: MantineColorScheme;\n\n  /** Forces color scheme value, if set, MantineProvider ignores `colorSchemeManager` and `defaultColorScheme` */\n  forceColorScheme?: 'light' | 'dark';\n\n  /** CSS selector to which CSS variables should be added, `:root` by default */\n  cssVariablesSelector?: string;\n\n  /** Determines whether theme CSS variables should be added to given `cssVariablesSelector`, `true` by default */\n  withCssVariables?: boolean;\n\n  /** Function to resolve root element to set `data-mantine-color-scheme` attribute, must return undefined on server, `() => document.documentElement` by default */\n  getRootElement?: () => HTMLElement | undefined;\n\n  /** A prefix for components static classes (for example {selector}-Text-root), `mantine` by default */\n  classNamesPrefix?: string;\n\n  /** Function to generate nonce attribute added to all generated `<style />` tags */\n  getStyleNonce?: () => string;\n\n  /** Function to generate CSS variables based on theme object */\n  cssVariablesResolver?: CSSVariablesResolver;\n\n  /** Your application */\n  children?: React.ReactNode;\n}\n\nexport function MantineProvider({\n  theme,\n  children,\n  getStyleNonce,\n  withCssVariables = true,\n  cssVariablesSelector = ':root',\n  classNamesPrefix = 'mantine',\n  colorSchemeManager = localStorageColorSchemeManager(),\n  defaultColorScheme = 'light',\n  getRootElement = () => document.documentElement,\n  cssVariablesResolver,\n  forceColorScheme,\n}: MantineProviderProps) {\n  const { colorScheme, setColorScheme, clearColorScheme } = useProviderColorScheme({\n    defaultColorScheme,\n    forceColorScheme,\n    manager: colorSchemeManager,\n    getRootElement,\n  });\n\n  useRespectReduceMotion({\n    respectReducedMotion: theme?.respectReducedMotion || false,\n    getRootElement,\n  });\n\n  return (\n    <MantineContext.Provider\n      value={{\n        colorSchemeManager,\n        colorScheme,\n        setColorScheme,\n        clearColorScheme,\n        getRootElement,\n        classNamesPrefix,\n        getStyleNonce,\n        cssVariablesResolver,\n        cssVariablesSelector,\n      }}\n    >\n      <MantineThemeProvider theme={theme}>\n        {withCssVariables && <MantineCssVariables cssVariablesSelector={cssVariablesSelector} />}\n        <MantineClasses />\n        {children}\n      </MantineThemeProvider>\n    </MantineContext.Provider>\n  );\n}\n\nMantineProvider.displayName = '@mantine/core/MantineProvider';\n"],"mappings":";;;;;;;;;;;;AAWAA,qBAAqB,EAAE;AAChB,SAASC,eAAeA,CAAC;EAC9BC,KAAK;EACLC,QAAQ;EACRC,aAAa;EACbC,gBAAgB,GAAG,IAAI;EACvBC,oBAAoB,GAAG,OAAO;EAC9BC,gBAAgB,GAAG,SAAS;EAC5BC,kBAAkB,GAAGC,8BAA8B,CAAE;EACrDC,kBAAkB,GAAG,OAAO;EAC5BC,cAAc,GAAGA,CAAA,KAAMC,QAAQ,CAACC,eAAe;EAC/CC,oBAAoB;EACpBC;AACF,CAAC,EAAE;EACD,MAAM;IAAEC,WAAW;IAAEC,cAAc;IAAEC;EAAgB,CAAE,GAAGC,sBAAsB,CAAC;IAC/ET,kBAAkB;IAClBK,gBAAgB;IAChBK,OAAO,EAAEZ,kBAAkB;IAC3BG;EACJ,CAAG,CAAC;EACFU,sBAAsB,CAAC;IACrBC,oBAAoB,EAAEpB,KAAK,EAAEoB,oBAAoB,IAAI,KAAK;IAC1DX;EACJ,CAAG,CAAC;EACF,sBAAuBY,KAAK,CAACC,aAAa,CACxCC,cAAc,CAACC,QAAQ,EACvB;IACEC,KAAK,EAAE;MACLnB,kBAAkB;MAClBQ,WAAW;MACXC,cAAc;MACdC,gBAAgB;MAChBP,cAAc;MACdJ,gBAAgB;MAChBH,aAAa;MACbU,oBAAoB;MACpBR;IACD;EACF,GACL,eAAoBiB,KAAK,CAACC,aAAa,CAACI,oBAAoB,EAAE;IAAE1B;EAAK,CAAE,EAAEG,gBAAgB,IAAoB,eAAAkB,KAAK,CAACC,aAAa,CAACK,mBAAmB,EAAE;IAAEvB;EAAsB,EAAC,iBAAkBiB,KAAK,CAACC,aAAa,CAACM,cAAc,EAAE,IAAI,CAAC,EAAE3B,QAAQ,CACpP,CAAG;AACH;AACAF,eAAe,CAAC8B,WAAW,GAAG,+BAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}