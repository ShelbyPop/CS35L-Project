{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport { getContrastColor } from '../../core/MantineProvider/color-functions/get-contrast-color/get-contrast-color.mjs';\nimport { getAutoContrastValue } from '../../core/MantineProvider/color-functions/get-auto-contrast-value/get-auto-contrast-value.mjs';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { getPositionVariables } from './get-position-variables/get-position-variables.mjs';\nimport classes from './Indicator.module.css.mjs';\nconst defaultProps = {\n  position: \"top-end\",\n  offset: 0,\n  inline: false,\n  withBorder: false,\n  disabled: false,\n  processing: false\n};\nconst varsResolver = createVarsResolver((theme, {\n  color,\n  position,\n  offset,\n  size,\n  radius,\n  zIndex,\n  autoContrast\n}) => ({\n  root: {\n    \"--indicator-color\": color ? getThemeColor(color, theme) : void 0,\n    \"--indicator-text-color\": getAutoContrastValue(autoContrast, theme) ? getContrastColor({\n      color,\n      theme\n    }) : void 0,\n    \"--indicator-size\": rem(size),\n    \"--indicator-radius\": radius === void 0 ? void 0 : getRadius(radius),\n    \"--indicator-z-index\": zIndex?.toString(),\n    ...getPositionVariables(position, offset)\n  }\n}));\nconst Indicator = factory((_props, ref) => {\n  const props = useProps(\"Indicator\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    position,\n    offset,\n    inline,\n    label,\n    radius,\n    color,\n    withBorder,\n    disabled,\n    processing,\n    zIndex,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Indicator\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */React.createElement(Box, {\n    ref,\n    ...getStyles(\"root\"),\n    mod: [{\n      inline\n    }, mod],\n    ...others\n  }, !disabled && /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement(Box, {\n    mod: {\n      \"with-label\": !!label,\n      \"with-border\": withBorder,\n      processing\n    },\n    ...getStyles(\"indicator\")\n  }, label)), children);\n});\nIndicator.classes = classes;\nIndicator.displayName = \"@mantine/core/Indicator\";\nexport { Indicator };","map":{"version":3,"names":["defaultProps","position","offset","inline","withBorder","disabled","processing","varsResolver","createVarsResolver","theme","color","size","radius","zIndex","autoContrast","root","getThemeColor","getAutoContrastValue","getContrastColor","rem","getRadius","toString","getPositionVariables","Indicator","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","children","label","mod","others","getStyles","useStyles","name","classes","React","createElement","Box","Fragment","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Indicator/Indicator.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getAutoContrastValue,\n  getContrastColor,\n  getRadius,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { getPositionVariables } from './get-position-variables/get-position-variables';\nimport { IndicatorPosition } from './Indicator.types';\nimport classes from './Indicator.module.css';\n\nexport type IndicatorPositionVariables =\n  | '--indicator-top'\n  | '--indicator-bottom'\n  | '--indicator-left'\n  | '--indicator-right'\n  | '--indicator-translate-x'\n  | '--indicator-translate-y';\n\nexport type IndicatorStylesNames = 'root' | 'indicator';\nexport type IndicatorCssVariables = {\n  root:\n    | '--indicator-color'\n    | '--indicator-text-color'\n    | '--indicator-size'\n    | '--indicator-radius'\n    | '--indicator-z-index'\n    | IndicatorPositionVariables;\n};\n\nexport interface IndicatorProps\n  extends BoxProps,\n    StylesApiProps<IndicatorFactory>,\n    ElementProps<'div'> {\n  /** Indicator position relative to the target element, `'top-end'` by default */\n  position?: IndicatorPosition;\n\n  /** Indicator offset relative to the target element, usually used for elements with border-radius, equals to `size` by default */\n  offset?: number;\n\n  /** Determines whether the indicator container should be an inline element, `false` by default */\n  inline?: boolean;\n\n  /** Indicator width and height, `10` by default */\n  size?: number | string;\n\n  /** Label rendered inside the indicator, for example, notification count */\n  label?: React.ReactNode;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `100` by default */\n  radius?: MantineRadius;\n\n  /** Key of `theme.colors` or any valid CSS color value, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Determines whether the indicator should have a border (color of the border is the same as the body element), `false` by default */\n  withBorder?: boolean;\n\n  /** When Indicator is disabled it renders children only */\n  disabled?: boolean;\n\n  /** Determines whether the indicator should have processing animation, `false` by default */\n  processing?: boolean;\n\n  /** Indicator z-index, `200` by default */\n  zIndex?: string | number;\n\n  /** Determines whether text color should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type IndicatorFactory = Factory<{\n  props: IndicatorProps;\n  ref: HTMLDivElement;\n  stylesNames: IndicatorStylesNames;\n  vars: IndicatorCssVariables;\n}>;\n\nconst defaultProps: Partial<IndicatorProps> = {\n  position: 'top-end',\n  offset: 0,\n  inline: false,\n  withBorder: false,\n  disabled: false,\n  processing: false,\n};\n\nconst varsResolver = createVarsResolver<IndicatorFactory>(\n  (theme, { color, position, offset, size, radius, zIndex, autoContrast }) => ({\n    root: {\n      '--indicator-color': color ? getThemeColor(color, theme) : undefined,\n      '--indicator-text-color': getAutoContrastValue(autoContrast, theme)\n        ? getContrastColor({ color, theme })\n        : undefined,\n      '--indicator-size': rem(size),\n      '--indicator-radius': radius === undefined ? undefined : getRadius(radius),\n      '--indicator-z-index': zIndex?.toString(),\n      ...getPositionVariables(position, offset),\n    },\n  })\n);\n\nexport const Indicator = factory<IndicatorFactory>((_props, ref) => {\n  const props = useProps('Indicator', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    position,\n    offset,\n    inline,\n    label,\n    radius,\n    color,\n    withBorder,\n    disabled,\n    processing,\n    zIndex,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<IndicatorFactory>({\n    name: 'Indicator',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box ref={ref} {...getStyles('root')} mod={[{ inline }, mod]} {...others}>\n      {!disabled && (\n        <>\n          <Box\n            mod={{ 'with-label': !!label, 'with-border': withBorder, processing }}\n            {...getStyles('indicator')}\n          >\n            {label}\n          </Box>\n        </>\n      )}\n      {children}\n    </Box>\n  );\n});\n\nIndicator.classes = classes;\nIndicator.displayName = '@mantine/core/Indicator';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAgBA,MAAMA,YAAY,GAAG;EACnBC,QAAQ,EAAE,SAAS;EACnBC,MAAM,EAAE,CAAC;EACTC,MAAM,EAAE,KAAK;EACbC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAE,KAAK;EACfC,UAAU,EAAE;AACd,CAAC;AACD,MAAMC,YAAY,GAAGC,kBAAkB,CACrC,CAACC,KAAK,EAAE;EAAEC,KAAK;EAAET,QAAQ;EAAEC,MAAM;EAAES,IAAI;EAAEC,MAAM;EAAEC,MAAM;EAAEC;AAAY,CAAE,MAAM;EAC3EC,IAAI,EAAE;IACJ,mBAAmB,EAAEL,KAAK,GAAGM,aAAa,CAACN,KAAK,EAAED,KAAK,CAAC,GAAG,KAAK,CAAC;IACjE,wBAAwB,EAAEQ,oBAAoB,CAACH,YAAY,EAAEL,KAAK,CAAC,GAAGS,gBAAgB,CAAC;MAAER,KAAK;MAAED;IAAK,CAAE,CAAC,GAAG,KAAK,CAAC;IACjH,kBAAkB,EAAEU,GAAG,CAACR,IAAI,CAAC;IAC7B,oBAAoB,EAAEC,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGQ,SAAS,CAACR,MAAM,CAAC;IACpE,qBAAqB,EAAEC,MAAM,EAAEQ,QAAQ,CAAE;IACzC,GAAGC,oBAAoB,CAACrB,QAAQ,EAAEC,MAAM;EACzC;AACL,CAAG,CACH,CAAC;AACW,MAACqB,SAAS,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EAChD,MAAMC,KAAK,GAAGC,QAAQ,CAAC,WAAW,EAAE5B,YAAY,EAAEyB,MAAM,CAAC;EACzD,MAAM;IACJI,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJC,QAAQ;IACRlC,QAAQ;IACRC,MAAM;IACNC,MAAM;IACNiC,KAAK;IACLxB,MAAM;IACNF,KAAK;IACLN,UAAU;IACVC,QAAQ;IACRC,UAAU;IACVO,MAAM;IACNC,YAAY;IACZuB,GAAG;IACH,GAAGC;EACJ,IAAGX,KAAK;EACT,MAAMY,SAAS,GAAGC,SAAS,CAAC;IAC1BC,IAAI,EAAE,WAAW;IACjBC,OAAO;IACPf,KAAK;IACLG,SAAS;IACTC,KAAK;IACLF,UAAU;IACVG,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJ3B;EACJ,CAAG,CAAC;EACF,sBAAuBoC,KAAK,CAACC,aAAa,CAACC,GAAG,EAAE;IAAEnB,GAAG;IAAE,GAAGa,SAAS,CAAC,MAAM,CAAC;IAAEF,GAAG,EAAE,CAAC;MAAElC;IAAM,CAAE,EAAEkC,GAAG,CAAC;IAAE,GAAGC;EAAM,CAAE,EAAE,CAACjC,QAAQ,IAAoB,eAAAsC,KAAK,CAACC,aAAa,CAACD,KAAK,CAACG,QAAQ,EAAE,IAAI,iBAAkBH,KAAK,CAACC,aAAa,CAC1NC,GAAG,EACH;IACER,GAAG,EAAE;MAAE,YAAY,EAAE,CAAC,CAACD,KAAK;MAAE,aAAa,EAAEhC,UAAU;MAAEE;IAAY;IACrE,GAAGiC,SAAS,CAAC,WAAW;EACzB,GACDH,KACJ,CAAG,CAAC,EAAED,QAAQ,CAAC;AACf,CAAC,CAAE;AACHZ,SAAS,CAACmB,OAAO,GAAGA,OAAO;AAC3BnB,SAAS,CAACwB,WAAW,GAAG,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}