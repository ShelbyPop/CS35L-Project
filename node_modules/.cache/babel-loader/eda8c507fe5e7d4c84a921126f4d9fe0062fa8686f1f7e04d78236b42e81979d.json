{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './ColorSwatch.module.css.mjs';\nconst defaultProps = {\n  withShadow: true\n};\nconst varsResolver = createVarsResolver((_, {\n  radius,\n  size\n}) => ({\n  root: {\n    \"--cs-radius\": radius === void 0 ? void 0 : getRadius(radius),\n    \"--cs-size\": rem(size)\n  }\n}));\nconst ColorSwatch = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"ColorSwatch\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    size,\n    radius,\n    withShadow,\n    children,\n    variant,\n    ...others\n  } = useProps(\"ColorSwatch\", defaultProps, props);\n  const getStyles = useStyles({\n    name: \"ColorSwatch\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */React.createElement(Box, {\n    ref,\n    variant,\n    size,\n    ...getStyles(\"root\", {\n      focusable: true\n    }),\n    ...others\n  }, /* @__PURE__ */React.createElement(\"span\", {\n    ...getStyles(\"alphaOverlay\")\n  }), withShadow && /* @__PURE__ */React.createElement(\"span\", {\n    ...getStyles(\"shadowOverlay\")\n  }), /* @__PURE__ */React.createElement(\"span\", {\n    ...getStyles(\"colorOverlay\", {\n      style: {\n        backgroundColor: color\n      }\n    })\n  }), /* @__PURE__ */React.createElement(\"span\", {\n    ...getStyles(\"childrenOverlay\")\n  }, children));\n});\nColorSwatch.classes = classes;\nColorSwatch.displayName = \"@mantine/core/ColorSwatch\";\nexport { ColorSwatch };","map":{"version":3,"names":["defaultProps","withShadow","varsResolver","createVarsResolver","_","radius","size","root","getRadius","rem","ColorSwatch","polymorphicFactory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","color","children","variant","others","getStyles","useStyles","name","classes","React","createElement","Box","focusable","backgroundColor","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/ColorSwatch/ColorSwatch.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  MantineRadius,\n  polymorphicFactory,\n  PolymorphicFactory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './ColorSwatch.module.css';\n\nexport type ColorSwatchStylesNames =\n  | 'root'\n  | 'alphaOverlay'\n  | 'shadowOverlay'\n  | 'colorOverlay'\n  | 'childrenOverlay';\n\nexport type ColorSwatchCssVariables = {\n  root: '--cs-radius' | '--cs-size';\n};\n\nexport interface ColorSwatchProps extends BoxProps, StylesApiProps<ColorSwatchFactory> {\n  /** Color to display, not related to `theme.colors` â€“ supports only CSS color values */\n  color: string;\n\n  /** Controls `width` and `height` of the swatch, any valid CSS value, numbers are converted to rem */\n  size?: React.CSSProperties['width'];\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem */\n  radius?: MantineRadius;\n\n  /** Determines whether the swatch should have inner `box-shadow`, `true` by default */\n  withShadow?: boolean;\n\n  /** Content rendered inside the swatch */\n  children?: React.ReactNode;\n}\n\nexport type ColorSwatchFactory = PolymorphicFactory<{\n  props: ColorSwatchProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: ColorSwatchStylesNames;\n  vars: ColorSwatchCssVariables;\n}>;\n\nconst defaultProps: Partial<ColorSwatchProps> = {\n  withShadow: true,\n};\n\nconst varsResolver = createVarsResolver<ColorSwatchFactory>((_, { radius, size }) => ({\n  root: {\n    '--cs-radius': radius === undefined ? undefined : getRadius(radius),\n    '--cs-size': rem(size),\n  },\n}));\n\nexport const ColorSwatch = polymorphicFactory<ColorSwatchFactory>((_props, ref) => {\n  const props = useProps('ColorSwatch', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    size,\n    radius,\n    withShadow,\n    children,\n    variant,\n    ...others\n  } = useProps('ColorSwatch', defaultProps, props);\n\n  const getStyles = useStyles<ColorSwatchFactory>({\n    name: 'ColorSwatch',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      ref={ref}\n      variant={variant}\n      size={size}\n      {...getStyles('root', { focusable: true })}\n      {...others}\n    >\n      <span {...getStyles('alphaOverlay')} />\n      {withShadow && <span {...getStyles('shadowOverlay')} />}\n      <span {...getStyles('colorOverlay', { style: { backgroundColor: color } })} />\n      <span {...getStyles('childrenOverlay')}>{children}</span>\n    </Box>\n  );\n});\n\nColorSwatch.classes = classes;\nColorSwatch.displayName = '@mantine/core/ColorSwatch';\n"],"mappings":";;;;;;;;;;;;;;;;;;AAYA,MAAMA,YAAY,GAAG;EACnBC,UAAU,EAAE;AACd,CAAC;AACD,MAAMC,YAAY,GAAGC,kBAAkB,CAAC,CAACC,CAAC,EAAE;EAAEC,MAAM;EAAEC;AAAI,CAAE,MAAM;EAChEC,IAAI,EAAE;IACJ,aAAa,EAAEF,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGG,SAAS,CAACH,MAAM,CAAC;IAC7D,WAAW,EAAEI,GAAG,CAACH,IAAI;EACtB;AACH,CAAC,CAAC,CAAC;AACS,MAACI,WAAW,GAAGC,kBAAkB,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EAC7D,MAAMC,KAAK,GAAGC,QAAQ,CAAC,aAAa,EAAEf,YAAY,EAAEY,MAAM,CAAC;EAC3D,MAAM;IACJI,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJC,KAAK;IACLhB,IAAI;IACJD,MAAM;IACNJ,UAAU;IACVsB,QAAQ;IACRC,OAAO;IACP,GAAGC;EACJ,IAAGV,QAAQ,CAAC,aAAa,EAAEf,YAAY,EAAEc,KAAK,CAAC;EAChD,MAAMY,SAAS,GAAGC,SAAS,CAAC;IAC1BC,IAAI,EAAE,aAAa;IACnBd,KAAK;IACLe,OAAO;IACPZ,SAAS;IACTC,KAAK;IACLF,UAAU;IACVG,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJnB;EACJ,CAAG,CAAC;EACF,sBAAuB4B,KAAK,CAACC,aAAa,CACxCC,GAAG,EACH;IACEnB,GAAG;IACHW,OAAO;IACPlB,IAAI;IACJ,GAAGoB,SAAS,CAAC,MAAM,EAAE;MAAEO,SAAS,EAAE;IAAI,CAAE,CAAC;IACzC,GAAGR;EACJ,GACL,eAAoBK,KAAK,CAACC,aAAa,CAAC,MAAM,EAAE;IAAE,GAAGL,SAAS,CAAC,cAAc;EAAC,CAAE,CAAC,EAC7EzB,UAAU,mBAAoB6B,KAAK,CAACC,aAAa,CAAC,MAAM,EAAE;IAAE,GAAGL,SAAS,CAAC,eAAe;EAAC,CAAE,CAAC,EAC5E,eAAAI,KAAK,CAACC,aAAa,CAAC,MAAM,EAAE;IAAE,GAAGL,SAAS,CAAC,cAAc,EAAE;MAAER,KAAK,EAAE;QAAEgB,eAAe,EAAEZ;MAAO;IAAA,CAAE;EAAC,CAAE,CAAC,EACxH,eAAoBQ,KAAK,CAACC,aAAa,CAAC,MAAM,EAAE;IAAE,GAAGL,SAAS,CAAC,iBAAiB;EAAG,GAAEH,QAAQ,CAC7F,CAAG;AACH,CAAC,CAAE;AACHb,WAAW,CAACmB,OAAO,GAAGA,OAAO;AAC7BnB,WAAW,CAACyB,WAAW,GAAG,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}