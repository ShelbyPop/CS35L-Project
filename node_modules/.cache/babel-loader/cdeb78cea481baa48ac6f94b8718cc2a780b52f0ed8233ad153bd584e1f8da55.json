{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { getDefaultZIndex } from '../../core/utils/get-default-z-index/get-default-z-index.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { AppShellProvider } from './AppShell.context.mjs';\nimport { AppShellAside } from './AppShellAside/AppShellAside.mjs';\nimport { AppShellFooter } from './AppShellFooter/AppShellFooter.mjs';\nimport { AppShellHeader } from './AppShellHeader/AppShellHeader.mjs';\nimport { AppShellMain } from './AppShellMain/AppShellMain.mjs';\nimport { AppShellMediaStyles } from './AppShellMediaStyles/AppShellMediaStyles.mjs';\nimport { AppShellNavbar } from './AppShellNavbar/AppShellNavbar.mjs';\nimport { AppShellSection } from './AppShellSection/AppShellSection.mjs';\nimport { useResizing } from './use-resizing/use-resizing.mjs';\nimport classes from './AppShell.module.css.mjs';\nconst defaultProps = {\n  withBorder: true,\n  offsetScrollbars: true,\n  padding: 0,\n  transitionDuration: 200,\n  transitionTimingFunction: \"ease\",\n  zIndex: getDefaultZIndex(\"app\")\n};\nconst varsResolver = createVarsResolver((_, {\n  transitionDuration,\n  transitionTimingFunction\n}) => ({\n  root: {\n    \"--app-shell-transition-duration\": `${transitionDuration}ms`,\n    \"--app-shell-transition-timing-function\": transitionTimingFunction\n  }\n}));\nconst AppShell = factory((_props, ref) => {\n  const props = useProps(\"AppShell\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    navbar,\n    withBorder,\n    padding,\n    transitionDuration,\n    transitionTimingFunction,\n    header,\n    zIndex,\n    layout,\n    disabled,\n    aside,\n    footer,\n    offsetScrollbars,\n    mod,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"AppShell\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const resizing = useResizing({\n    disabled,\n    transitionDuration\n  });\n  return /* @__PURE__ */React.createElement(AppShellProvider, {\n    value: {\n      getStyles,\n      withBorder,\n      zIndex,\n      disabled,\n      offsetScrollbars\n    }\n  }, /* @__PURE__ */React.createElement(AppShellMediaStyles, {\n    navbar,\n    header,\n    aside,\n    footer,\n    padding\n  }), /* @__PURE__ */React.createElement(Box, {\n    ref,\n    ...getStyles(\"root\"),\n    mod: [{\n      resizing,\n      layout,\n      disabled\n    }, mod],\n    ...others\n  }));\n});\nAppShell.classes = classes;\nAppShell.displayName = \"@mantine/core/AppShell\";\nAppShell.Navbar = AppShellNavbar;\nAppShell.Header = AppShellHeader;\nAppShell.Main = AppShellMain;\nAppShell.Aside = AppShellAside;\nAppShell.Footer = AppShellFooter;\nAppShell.Section = AppShellSection;\nexport { AppShell };","map":{"version":3,"names":["defaultProps","withBorder","offsetScrollbars","padding","transitionDuration","transitionTimingFunction","zIndex","getDefaultZIndex","varsResolver","createVarsResolver","_","root","AppShell","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","navbar","header","layout","disabled","aside","footer","mod","others","getStyles","useStyles","name","classes","resizing","useResizing","React","createElement","AppShellProvider","value","AppShellMediaStyles","Box","displayName","Navbar","AppShellNavbar","Header","AppShellHeader","Main","AppShellMain","Aside","AppShellAside","Footer","AppShellFooter","Section","AppShellSection"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/AppShell/AppShell.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getDefaultZIndex,\n  MantineSpacing,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { AppShellProvider } from './AppShell.context';\nimport {\n  AppShellAsideConfiguration,\n  AppShellFooterConfiguration,\n  AppShellHeaderConfiguration,\n  AppShellNavbarConfiguration,\n  AppShellResponsiveSize,\n} from './AppShell.types';\nimport { AppShellAside } from './AppShellAside/AppShellAside';\nimport { AppShellFooter } from './AppShellFooter/AppShellFooter';\nimport { AppShellHeader } from './AppShellHeader/AppShellHeader';\nimport { AppShellMain } from './AppShellMain/AppShellMain';\nimport { AppShellMediaStyles } from './AppShellMediaStyles/AppShellMediaStyles';\nimport { AppShellNavbar } from './AppShellNavbar/AppShellNavbar';\nimport { AppShellSection } from './AppShellSection/AppShellSection';\nimport { useResizing } from './use-resizing/use-resizing';\nimport classes from './AppShell.module.css';\n\nexport type AppShellStylesNames =\n  | 'root'\n  | 'navbar'\n  | 'main'\n  | 'header'\n  | 'footer'\n  | 'aside'\n  | 'section';\n\nexport type AppShellCssVariables = {\n  root: '--app-shell-transition-duration' | '--app-shell-transition-timing-function';\n};\n\nexport interface AppShellProps\n  extends BoxProps,\n    StylesApiProps<AppShellFactory>,\n    ElementProps<'div'> {\n  /** Determines whether associated components should have a border, `true` by default */\n  withBorder?: boolean;\n\n  /** Controls padding of the main section, `0` by default. !important!: use `padding` prop instead of `p`. */\n  padding?: MantineSpacing | AppShellResponsiveSize;\n\n  /** AppShell.Navbar configuration, controls width, breakpoints and collapsed state. Required if you use AppShell.Navbar component. */\n  navbar?: AppShellNavbarConfiguration;\n\n  /** AppShell.Aside configuration, controls width, breakpoints and collapsed state. Required if you use AppShell.Aside component. */\n  aside?: AppShellAsideConfiguration;\n\n  /** AppShell.Header configuration, controls height, offset and collapsed state. Required if you use AppShell.Header component. */\n  header?: AppShellHeaderConfiguration;\n\n  /** AppShell.Footer configuration, controls height, offset and collapsed state. Required if you use AppShell.Footer component. */\n  footer?: AppShellFooterConfiguration;\n\n  /** Duration of all transitions in ms, `200` by default */\n  transitionDuration?: number;\n\n  /** Timing function of all transitions, `ease` by default */\n  transitionTimingFunction?: React.CSSProperties['transitionTimingFunction'];\n\n  /** `z-index` of all associated elements, `200` by default */\n  zIndex?: string | number;\n\n  /** Determines how Navbar/Aside are arranged relative to Header/Footer, `default` by default */\n  layout?: 'default' | 'alt';\n\n  /** If set, Navbar, Aside, Header and Footer components be hidden */\n  disabled?: boolean;\n\n  /** Determines whether Header and Footer components should include styles to offset scrollbars. Based on `react-remove-scroll`. `true` by default */\n  offsetScrollbars?: boolean;\n}\n\nexport type AppShellFactory = Factory<{\n  props: AppShellProps;\n  ref: HTMLDivElement;\n  stylesNames: AppShellStylesNames;\n  vars: AppShellCssVariables;\n  staticComponents: {\n    Navbar: typeof AppShellNavbar;\n    Header: typeof AppShellHeader;\n    Main: typeof AppShellMain;\n    Aside: typeof AppShellAside;\n    Footer: typeof AppShellFooter;\n    Section: typeof AppShellSection;\n  };\n}>;\n\nconst defaultProps: Partial<AppShellProps> = {\n  withBorder: true,\n  offsetScrollbars: true,\n  padding: 0,\n  transitionDuration: 200,\n  transitionTimingFunction: 'ease',\n  zIndex: getDefaultZIndex('app'),\n};\n\nconst varsResolver = createVarsResolver<AppShellFactory>(\n  (_, { transitionDuration, transitionTimingFunction }) => ({\n    root: {\n      '--app-shell-transition-duration': `${transitionDuration}ms`,\n      '--app-shell-transition-timing-function': transitionTimingFunction,\n    },\n  })\n);\n\nexport const AppShell = factory<AppShellFactory>((_props, ref) => {\n  const props = useProps('AppShell', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    navbar,\n    withBorder,\n    padding,\n    transitionDuration,\n    transitionTimingFunction,\n    header,\n    zIndex,\n    layout,\n    disabled,\n    aside,\n    footer,\n    offsetScrollbars,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<AppShellFactory>({\n    name: 'AppShell',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const resizing = useResizing({ disabled, transitionDuration });\n\n  return (\n    <AppShellProvider value={{ getStyles, withBorder, zIndex, disabled, offsetScrollbars }}>\n      <AppShellMediaStyles\n        navbar={navbar}\n        header={header}\n        aside={aside}\n        footer={footer}\n        padding={padding}\n      />\n      <Box\n        ref={ref}\n        {...getStyles('root')}\n        mod={[{ resizing, layout, disabled }, mod]}\n        {...others}\n      />\n    </AppShellProvider>\n  );\n});\n\nAppShell.classes = classes;\nAppShell.displayName = '@mantine/core/AppShell';\nAppShell.Navbar = AppShellNavbar;\nAppShell.Header = AppShellHeader;\nAppShell.Main = AppShellMain;\nAppShell.Aside = AppShellAside;\nAppShell.Footer = AppShellFooter;\nAppShell.Section = AppShellSection;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,MAAMA,YAAY,GAAG;EACnBC,UAAU,EAAE,IAAI;EAChBC,gBAAgB,EAAE,IAAI;EACtBC,OAAO,EAAE,CAAC;EACVC,kBAAkB,EAAE,GAAG;EACvBC,wBAAwB,EAAE,MAAM;EAChCC,MAAM,EAAEC,gBAAgB,CAAC,KAAK;AAChC,CAAC;AACD,MAAMC,YAAY,GAAGC,kBAAkB,CACrC,CAACC,CAAC,EAAE;EAAEN,kBAAkB;EAAEC;AAAwB,CAAE,MAAM;EACxDM,IAAI,EAAE;IACJ,iCAAiC,EAAG,GAAEP,kBAAmB,IAAG;IAC5D,wCAAwC,EAAEC;EAC3C;AACL,CAAG,CACH,CAAC;AACW,MAACO,QAAQ,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EAC/C,MAAMC,KAAK,GAAGC,QAAQ,CAAC,UAAU,EAAEjB,YAAY,EAAEc,MAAM,CAAC;EACxD,MAAM;IACJI,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJC,MAAM;IACNvB,UAAU;IACVE,OAAO;IACPC,kBAAkB;IAClBC,wBAAwB;IACxBoB,MAAM;IACNnB,MAAM;IACNoB,MAAM;IACNC,QAAQ;IACRC,KAAK;IACLC,MAAM;IACN3B,gBAAgB;IAChB4B,GAAG;IACH,GAAGC;EACJ,IAAGf,KAAK;EACT,MAAMgB,SAAS,GAAGC,SAAS,CAAC;IAC1BC,IAAI,EAAE,UAAU;IAChBC,OAAO;IACPnB,KAAK;IACLG,SAAS;IACTC,KAAK;IACLF,UAAU;IACVG,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJf;EACJ,CAAG,CAAC;EACF,MAAM4B,QAAQ,GAAGC,WAAW,CAAC;IAAEV,QAAQ;IAAEvB;EAAoB,EAAC;EAC9D,sBAAuBkC,KAAK,CAACC,aAAa,CAACC,gBAAgB,EAAE;IAAEC,KAAK,EAAE;MAAET,SAAS;MAAE/B,UAAU;MAAEK,MAAM;MAAEqB,QAAQ;MAAEzB;IAAgB;EAAI,kBAAkBoC,KAAK,CAACC,aAAa,CACxKG,mBAAmB,EACnB;IACElB,MAAM;IACNC,MAAM;IACNG,KAAK;IACLC,MAAM;IACN1B;EACD,CACF,kBAAkBmC,KAAK,CAACC,aAAa,CACpCI,GAAG,EACH;IACE5B,GAAG;IACH,GAAGiB,SAAS,CAAC,MAAM,CAAC;IACpBF,GAAG,EAAE,CAAC;MAAEM,QAAQ;MAAEV,MAAM;MAAEC;IAAQ,CAAE,EAAEG,GAAG,CAAC;IAC1C,GAAGC;EACJ,CACL,CAAG,CAAC;AACJ,CAAC,CAAE;AACHnB,QAAQ,CAACuB,OAAO,GAAGA,OAAO;AAC1BvB,QAAQ,CAACgC,WAAW,GAAG,wBAAwB;AAC/ChC,QAAQ,CAACiC,MAAM,GAAGC,cAAc;AAChClC,QAAQ,CAACmC,MAAM,GAAGC,cAAc;AAChCpC,QAAQ,CAACqC,IAAI,GAAGC,YAAY;AAC5BtC,QAAQ,CAACuC,KAAK,GAAGC,aAAa;AAC9BxC,QAAQ,CAACyC,MAAM,GAAGC,cAAc;AAChC1C,QAAQ,CAAC2C,OAAO,GAAGC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}