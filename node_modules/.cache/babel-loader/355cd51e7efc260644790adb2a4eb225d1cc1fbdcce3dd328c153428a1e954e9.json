{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { rem } from '../../../core/utils/units-converters/rem.mjs';\nimport { createVarsResolver } from '../../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from '../Button.module.css.mjs';\nconst defaultProps = {\n  orientation: \"horizontal\"\n};\nconst varsResolver = createVarsResolver((_, {\n  borderWidth\n}) => ({\n  group: {\n    \"--button-border-width\": rem(borderWidth)\n  }\n}));\nconst ButtonGroup = factory((_props, ref) => {\n  const props = useProps(\"ButtonGroup\", defaultProps, _props);\n  const {\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    orientation,\n    vars,\n    borderWidth,\n    variant,\n    mod,\n    ...others\n  } = useProps(\"ButtonGroup\", defaultProps, _props);\n  const getStyles = useStyles({\n    name: \"ButtonGroup\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: \"group\"\n  });\n  return /* @__PURE__ */React.createElement(Box, {\n    ...getStyles(\"group\"),\n    ref,\n    variant,\n    mod: [{\n      \"data-orientation\": orientation\n    }, mod],\n    role: \"group\",\n    ...others\n  });\n});\nButtonGroup.classes = classes;\nButtonGroup.displayName = \"@mantine/core/ButtonGroup\";\nexport { ButtonGroup };","map":{"version":3,"names":["defaultProps","orientation","varsResolver","createVarsResolver","_","borderWidth","group","rem","ButtonGroup","factory","_props","ref","props","useProps","className","style","classNames","styles","unstyled","vars","variant","mod","others","getStyles","useStyles","name","classes","rootSelector","React","createElement","Box","role","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Button/ButtonGroup/ButtonGroup.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  factory,\n  Factory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport classes from '../Button.module.css';\n\nexport type ButtonGroupStylesNames = 'group';\nexport type ButtonGroupCssVariables = {\n  group: '--button-border-width';\n};\n\nexport interface ButtonGroupProps extends BoxProps, StylesApiProps<ButtonGroupFactory> {\n  /** `Button` components */\n  children?: React.ReactNode;\n\n  /** Orientation of the group, `horizontal` by default */\n  orientation?: 'horizontal' | 'vertical';\n\n  /** `border-width` of the child `Button` components. Numbers are converted to rem. Default value in `1`. */\n  borderWidth?: number | string;\n}\n\nexport type ButtonGroupFactory = Factory<{\n  props: ButtonGroupProps;\n  ref: HTMLDivElement;\n  stylesNames: ButtonGroupStylesNames;\n  vars: ButtonGroupCssVariables;\n}>;\n\nconst defaultProps: Partial<ButtonGroupProps> = {\n  orientation: 'horizontal',\n};\n\nconst varsResolver = createVarsResolver<ButtonGroupFactory>((_, { borderWidth }) => ({\n  group: { '--button-border-width': rem(borderWidth) },\n}));\n\nexport const ButtonGroup = factory<ButtonGroupFactory>((_props, ref) => {\n  const props = useProps('ButtonGroup', defaultProps, _props);\n  const {\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    orientation,\n    vars,\n    borderWidth,\n    variant,\n    mod,\n    ...others\n  } = useProps('ButtonGroup', defaultProps, _props);\n\n  const getStyles = useStyles<ButtonGroupFactory>({\n    name: 'ButtonGroup',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: 'group',\n  });\n\n  return (\n    <Box\n      {...getStyles('group')}\n      ref={ref}\n      variant={variant}\n      mod={[{ 'data-orientation': orientation }, mod]}\n      role=\"group\"\n      {...others}\n    />\n  );\n});\n\nButtonGroup.classes = classes;\nButtonGroup.displayName = '@mantine/core/ButtonGroup';\n"],"mappings":";;;;;;;;;;;;;;;;;AAWA,MAAMA,YAAY,GAAG;EACnBC,WAAW,EAAE;AACf,CAAC;AACD,MAAMC,YAAY,GAAGC,kBAAkB,CAAC,CAACC,CAAC,EAAE;EAAEC;AAAW,CAAE,MAAM;EAC/DC,KAAK,EAAE;IAAE,uBAAuB,EAAEC,GAAG,CAACF,WAAW;EAAG;AACtD,CAAC,CAAC,CAAC;AACS,MAACG,WAAW,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EAClD,MAAMC,KAAK,GAAGC,QAAQ,CAAC,aAAa,EAAEb,YAAY,EAAEU,MAAM,CAAC;EAC3D,MAAM;IACJI,SAAS;IACTC,KAAK;IACLC,UAAU;IACVC,MAAM;IACNC,QAAQ;IACRjB,WAAW;IACXkB,IAAI;IACJd,WAAW;IACXe,OAAO;IACPC,GAAG;IACH,GAAGC;EACJ,IAAGT,QAAQ,CAAC,aAAa,EAAEb,YAAY,EAAEU,MAAM,CAAC;EACjD,MAAMa,SAAS,GAAGC,SAAS,CAAC;IAC1BC,IAAI,EAAE,aAAa;IACnBb,KAAK;IACLc,OAAO;IACPZ,SAAS;IACTC,KAAK;IACLC,UAAU;IACVC,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJjB,YAAY;IACZyB,YAAY,EAAE;EAClB,CAAG,CAAC;EACF,sBAAuBC,KAAK,CAACC,aAAa,CACxCC,GAAG,EACH;IACE,GAAGP,SAAS,CAAC,OAAO,CAAC;IACrBZ,GAAG;IACHS,OAAO;IACPC,GAAG,EAAE,CAAC;MAAE,kBAAkB,EAAEpB;IAAW,CAAE,EAAEoB,GAAG,CAAC;IAC/CU,IAAI,EAAE,OAAO;IACb,GAAGT;EACJ,CACL,CAAG;AACH,CAAC,CAAE;AACHd,WAAW,CAACkB,OAAO,GAAGA,OAAO;AAC7BlB,WAAW,CAACwB,WAAW,GAAG,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}