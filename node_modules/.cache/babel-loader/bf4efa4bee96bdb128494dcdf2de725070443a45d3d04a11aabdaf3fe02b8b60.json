{"ast":null,"code":"'use client';\n\nfunction escapeRegex(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, \"\\\\$&\");\n}\nfunction highlighter(value, _highlight) {\n  if (_highlight == null) {\n    return [{\n      chunk: value,\n      highlighted: false\n    }];\n  }\n  const highlight = Array.isArray(_highlight) ? _highlight.map(escapeRegex) : escapeRegex(_highlight);\n  const shouldHighlight = Array.isArray(highlight) ? highlight.filter(part => part.trim().length > 0).length > 0 : highlight.trim() !== \"\";\n  if (!shouldHighlight) {\n    return [{\n      chunk: value,\n      highlighted: false\n    }];\n  }\n  const matcher = typeof highlight === \"string\" ? highlight.trim() : highlight.filter(part => part.trim().length !== 0).map(part => part.trim()).sort((a, b) => b.length - a.length).join(\"|\");\n  const re = new RegExp(`(${matcher})`, \"gi\");\n  const chunks = value.split(re).map(part => ({\n    chunk: part,\n    highlighted: re.test(part)\n  })).filter(({\n    chunk\n  }) => chunk);\n  return chunks;\n}\nexport { highlighter };","map":{"version":3,"names":["escapeRegex","value","replace","highlighter","_highlight","chunk","highlighted","highlight","Array","isArray","map","shouldHighlight","filter","part","trim","length","matcher","sort","a","b","join","re","RegExp","chunks","split","test"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Highlight/highlighter/highlighter.ts"],"sourcesContent":["function escapeRegex(value: string) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, '\\\\$&');\n}\n\nexport function highlighter(value: string, _highlight: string | string[]) {\n  if (_highlight == null) {\n    return [{ chunk: value, highlighted: false }];\n  }\n\n  const highlight = Array.isArray(_highlight)\n    ? _highlight.map(escapeRegex)\n    : escapeRegex(_highlight);\n\n  const shouldHighlight = Array.isArray(highlight)\n    ? highlight.filter((part) => part.trim().length > 0).length > 0\n    : highlight.trim() !== '';\n\n  if (!shouldHighlight) {\n    return [{ chunk: value, highlighted: false }];\n  }\n\n  const matcher =\n    typeof highlight === 'string'\n      ? highlight.trim()\n      : highlight\n          .filter((part) => part.trim().length !== 0)\n          .map((part) => part.trim())\n          .sort((a, b) => b.length - a.length)\n          .join('|');\n\n  const re = new RegExp(`(${matcher})`, 'gi');\n  const chunks = value\n    .split(re)\n    .map((part) => ({ chunk: part, highlighted: re.test(part) }))\n    .filter(({ chunk }) => chunk);\n\n  return chunks;\n}\n"],"mappings":";;AACA,SAASA,WAAWA,CAACC,KAAK,EAAE;EAC1B,OAAOA,KAAK,CAACC,OAAO,CAAC,wBAAwB,EAAE,MAAM,CAAC;AACxD;AACO,SAASC,WAAWA,CAACF,KAAK,EAAEG,UAAU,EAAE;EAC7C,IAAIA,UAAU,IAAI,IAAI,EAAE;IACtB,OAAO,CAAC;MAAEC,KAAK,EAAEJ,KAAK;MAAEK,WAAW,EAAE;IAAO,EAAC;EAC9C;EACD,MAAMC,SAAS,GAAGC,KAAK,CAACC,OAAO,CAACL,UAAU,CAAC,GAAGA,UAAU,CAACM,GAAG,CAACV,WAAW,CAAC,GAAGA,WAAW,CAACI,UAAU,CAAC;EACnG,MAAMO,eAAe,GAAGH,KAAK,CAACC,OAAO,CAACF,SAAS,CAAC,GAAGA,SAAS,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,EAAE,CAACC,MAAM,GAAG,CAAC,CAAC,CAACA,MAAM,GAAG,CAAC,GAAGR,SAAS,CAACO,IAAI,CAAE,MAAK,EAAE;EAC1I,IAAI,CAACH,eAAe,EAAE;IACpB,OAAO,CAAC;MAAEN,KAAK,EAAEJ,KAAK;MAAEK,WAAW,EAAE;IAAO,EAAC;EAC9C;EACD,MAAMU,OAAO,GAAG,OAAOT,SAAS,KAAK,QAAQ,GAAGA,SAAS,CAACO,IAAI,EAAE,GAAGP,SAAS,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,CAAC,CAACL,GAAG,CAAEG,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAE,EAAC,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACJ,MAAM,GAAGG,CAAC,CAACH,MAAM,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC;EAChM,MAAMC,EAAE,GAAG,IAAIC,MAAM,CAAE,IAAGN,OAAQ,GAAE,EAAE,IAAI,CAAC;EAC3C,MAAMO,MAAM,GAAGtB,KAAK,CAACuB,KAAK,CAACH,EAAE,CAAC,CAACX,GAAG,CAAEG,IAAI,KAAM;IAAER,KAAK,EAAEQ,IAAI;IAAEP,WAAW,EAAEe,EAAE,CAACI,IAAI,CAACZ,IAAI;EAAC,CAAE,CAAC,CAAC,CAACD,MAAM,CAAC,CAAC;IAAEP;EAAK,CAAE,KAAKA,KAAK,CAAC;EACxH,OAAOkB,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}