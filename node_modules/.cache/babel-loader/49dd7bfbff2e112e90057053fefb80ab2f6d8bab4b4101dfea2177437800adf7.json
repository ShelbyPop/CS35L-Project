{"ast":null,"code":"'use client';\n\nimport React, { forwardRef, useState } from 'react';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../../Transition/transitions.mjs';\nimport { Transition } from '../../Transition/Transition.mjs';\nimport { useSliderContext } from '../Slider.context.mjs';\nconst Thumb = forwardRef(({\n  max,\n  min,\n  value,\n  position,\n  label,\n  dragging,\n  onMouseDown,\n  onKeyDownCapture,\n  labelTransitionProps,\n  labelAlwaysOn,\n  thumbLabel,\n  onFocus,\n  onBlur,\n  showLabelOnHover,\n  isHovered,\n  children = null,\n  disabled\n}, ref) => {\n  const {\n    getStyles\n  } = useSliderContext();\n  const [focused, setFocused] = useState(false);\n  const isVisible = labelAlwaysOn || dragging || focused || showLabelOnHover && isHovered;\n  return /* @__PURE__ */React.createElement(Box, {\n    tabIndex: 0,\n    role: \"slider\",\n    \"aria-label\": thumbLabel,\n    \"aria-valuemax\": max,\n    \"aria-valuemin\": min,\n    \"aria-valuenow\": value,\n    ref,\n    __vars: {\n      \"--slider-thumb-offset\": `${position}%`\n    },\n    ...getStyles(\"thumb\", {\n      focusable: true\n    }),\n    mod: {\n      dragging,\n      disabled\n    },\n    onFocus: () => {\n      setFocused(true);\n      typeof onFocus === \"function\" && onFocus();\n    },\n    onBlur: () => {\n      setFocused(false);\n      typeof onBlur === \"function\" && onBlur();\n    },\n    onTouchStart: onMouseDown,\n    onMouseDown,\n    onKeyDownCapture,\n    onClick: event => event.stopPropagation()\n  }, children, /* @__PURE__ */React.createElement(Transition, {\n    mounted: label != null && !!isVisible,\n    transition: \"fade\",\n    duration: 0,\n    ...labelTransitionProps\n  }, transitionStyles => /* @__PURE__ */React.createElement(\"div\", {\n    ...getStyles(\"label\", {\n      style: transitionStyles\n    })\n  }, label)));\n});\nThumb.displayName = \"@mantine/core/SliderThumb\";\nexport { Thumb };","map":{"version":3,"names":["Thumb","forwardRef","max","min","value","position","label","dragging","onMouseDown","onKeyDownCapture","labelTransitionProps","labelAlwaysOn","thumbLabel","onFocus","onBlur","showLabelOnHover","isHovered","children","disabled","ref","getStyles","useSliderContext","focused","setFocused","useState","isVisible","React","createElement","Box","tabIndex","role","__vars","focusable","mod","onTouchStart","onClick","event","stopPropagation","Transition","mounted","transition","duration","transitionStyles","style","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Slider/Thumb/Thumb.tsx"],"sourcesContent":["import React, { forwardRef, useState } from 'react';\nimport { Box } from '../../../core';\nimport { Transition, TransitionOverride } from '../../Transition';\nimport { useSliderContext } from '../Slider.context';\n\nexport interface ThumbProps {\n  max: number;\n  min: number;\n  value: number;\n  position: number;\n  dragging: boolean;\n  label: React.ReactNode;\n  onKeyDownCapture?: (event: React.KeyboardEvent<HTMLDivElement>) => void;\n  onMouseDown?: (\n    event: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>\n  ) => void;\n  labelTransitionProps: TransitionOverride | undefined;\n  labelAlwaysOn: boolean | undefined;\n  thumbLabel: string | undefined;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  showLabelOnHover: boolean | undefined;\n  isHovered?: boolean;\n  children?: React.ReactNode;\n  disabled: boolean | undefined;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport const Thumb = forwardRef<HTMLDivElement, ThumbProps>(\n  (\n    {\n      max,\n      min,\n      value,\n      position,\n      label,\n      dragging,\n      onMouseDown,\n      onKeyDownCapture,\n      labelTransitionProps,\n      labelAlwaysOn,\n      thumbLabel,\n      onFocus,\n      onBlur,\n      showLabelOnHover,\n      isHovered,\n      children = null,\n      disabled,\n    }: ThumbProps,\n    ref\n  ) => {\n    const { getStyles } = useSliderContext();\n\n    const [focused, setFocused] = useState(false);\n\n    const isVisible = labelAlwaysOn || dragging || focused || (showLabelOnHover && isHovered);\n\n    return (\n      <Box<'div'>\n        tabIndex={0}\n        role=\"slider\"\n        aria-label={thumbLabel}\n        aria-valuemax={max}\n        aria-valuemin={min}\n        aria-valuenow={value}\n        ref={ref}\n        __vars={{ '--slider-thumb-offset': `${position}%` }}\n        {...getStyles('thumb', { focusable: true })}\n        mod={{ dragging, disabled }}\n        onFocus={() => {\n          setFocused(true);\n          typeof onFocus === 'function' && onFocus();\n        }}\n        onBlur={() => {\n          setFocused(false);\n          typeof onBlur === 'function' && onBlur();\n        }}\n        onTouchStart={onMouseDown}\n        onMouseDown={onMouseDown}\n        onKeyDownCapture={onKeyDownCapture}\n        onClick={(event) => event.stopPropagation()}\n      >\n        {children}\n        <Transition\n          mounted={label != null && !!isVisible}\n          transition=\"fade\"\n          duration={0}\n          {...labelTransitionProps}\n        >\n          {(transitionStyles) => (\n            <div {...getStyles('label', { style: transitionStyles })}>{label}</div>\n          )}\n        </Transition>\n      </Box>\n    );\n  }\n);\n\nThumb.displayName = '@mantine/core/SliderThumb';\n"],"mappings":";;;;;;;;;;;;;;AAKY,MAACA,KAAK,GAAGC,UAAU,CAC7B,CAAC;EACCC,GAAG;EACHC,GAAG;EACHC,KAAK;EACLC,QAAQ;EACRC,KAAK;EACLC,QAAQ;EACRC,WAAW;EACXC,gBAAgB;EAChBC,oBAAoB;EACpBC,aAAa;EACbC,UAAU;EACVC,OAAO;EACPC,MAAM;EACNC,gBAAgB;EAChBC,SAAS;EACTC,QAAQ,GAAG,IAAI;EACfC;AACD,GAAEC,GAAG,KAAK;EACT,MAAM;IAAEC;EAAS,CAAE,GAAGC,gBAAgB,EAAE;EACxC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMC,SAAS,GAAGd,aAAa,IAAIJ,QAAQ,IAAIe,OAAO,IAAIP,gBAAgB,IAAIC,SAAS;EACvF,sBAAuBU,KAAK,CAACC,aAAa,CACxCC,GAAG,EACH;IACEC,QAAQ,EAAE,CAAC;IACXC,IAAI,EAAE,QAAQ;IACd,YAAY,EAAElB,UAAU;IACxB,eAAe,EAAEV,GAAG;IACpB,eAAe,EAAEC,GAAG;IACpB,eAAe,EAAEC,KAAK;IACtBe,GAAG;IACHY,MAAM,EAAE;MAAE,uBAAuB,EAAG,GAAE1B,QAAS;IAAI;IACnD,GAAGe,SAAS,CAAC,OAAO,EAAE;MAAEY,SAAS,EAAE;IAAI,CAAE,CAAC;IAC1CC,GAAG,EAAE;MAAE1B,QAAQ;MAAEW;IAAU;IAC3BL,OAAO,EAAEA,CAAA,KAAM;MACbU,UAAU,CAAC,IAAI,CAAC;MAChB,OAAOV,OAAO,KAAK,UAAU,IAAIA,OAAO,EAAE;IAC3C;IACDC,MAAM,EAAEA,CAAA,KAAM;MACZS,UAAU,CAAC,KAAK,CAAC;MACjB,OAAOT,MAAM,KAAK,UAAU,IAAIA,MAAM,EAAE;IACzC;IACDoB,YAAY,EAAE1B,WAAW;IACzBA,WAAW;IACXC,gBAAgB;IAChB0B,OAAO,EAAGC,KAAK,IAAKA,KAAK,CAACC,eAAe,CAAE;EAC5C,GACDpB,QAAQ,EACQ,eAAAS,KAAK,CAACC,aAAa,CACjCW,UAAU,EACV;IACEC,OAAO,EAAEjC,KAAK,IAAI,IAAI,IAAI,CAAC,CAACmB,SAAS;IACrCe,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE,CAAC;IACX,GAAG/B;EACJ,GACAgC,gBAAgB,mBAAqBhB,KAAK,CAACC,aAAa,CAAC,KAAK,EAAE;IAAE,GAAGP,SAAS,CAAC,OAAO,EAAE;MAAEuB,KAAK,EAAED;IAAgB,CAAE;EAAC,CAAE,EAAEpC,KAAK,CAC/H,CACP,CAAK;AACF,CACH,CAAE;AACFN,KAAK,CAAC4C,WAAW,GAAG,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}