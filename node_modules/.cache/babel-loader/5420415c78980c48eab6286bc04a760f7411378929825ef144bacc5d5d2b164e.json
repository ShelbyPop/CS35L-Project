{"ast":null,"code":"'use client';\n\nimport { useRef, useCallback, useEffect } from 'react';\nimport { createAriaHider } from './create-aria-hider.mjs';\nimport { scopeTab } from './scope-tab.mjs';\nimport { FOCUS_SELECTOR, tabbable, focusable } from './tabbable.mjs';\nfunction useFocusTrap(active = true) {\n  const ref = useRef();\n  const restoreAria = useRef(null);\n  const focusNode = node => {\n    let focusElement = node.querySelector(\"[data-autofocus]\");\n    if (!focusElement) {\n      const children = Array.from(node.querySelectorAll(FOCUS_SELECTOR));\n      focusElement = children.find(tabbable) || children.find(focusable) || null;\n      if (!focusElement && focusable(node)) focusElement = node;\n    }\n    if (focusElement) {\n      focusElement.focus({\n        preventScroll: true\n      });\n    } else if (process.env.NODE_ENV === \"development\") {\n      console.warn(\"[@mantine/hooks/use-focus-trap] Failed to find focusable element within provided node\", node);\n    }\n  };\n  const setRef = useCallback(node => {\n    if (!active) {\n      return;\n    }\n    if (node === null) {\n      if (restoreAria.current) {\n        restoreAria.current();\n        restoreAria.current = null;\n      }\n      return;\n    }\n    restoreAria.current = createAriaHider(node);\n    if (ref.current === node) {\n      return;\n    }\n    if (node) {\n      setTimeout(() => {\n        if (node.getRootNode()) {\n          focusNode(node);\n        } else if (process.env.NODE_ENV === \"development\") {\n          console.warn(\"[@mantine/hooks/use-focus-trap] Ref node is not part of the dom\", node);\n        }\n      });\n      ref.current = node;\n    } else {\n      ref.current = null;\n    }\n  }, [active]);\n  useEffect(() => {\n    if (!active) {\n      return void 0;\n    }\n    ref.current && setTimeout(() => focusNode(ref.current));\n    const handleKeyDown = event => {\n      if (event.key === \"Tab\" && ref.current) {\n        scopeTab(ref.current, event);\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n      if (restoreAria.current) {\n        restoreAria.current();\n      }\n    };\n  }, [active]);\n  return setRef;\n}\nexport { useFocusTrap };","map":{"version":3,"names":["useFocusTrap","active","ref","useRef","restoreAria","focusNode","node","focusElement","querySelector","children","Array","from","querySelectorAll","FOCUS_SELECTOR","find","tabbable","focusable","focus","preventScroll","process","env","NODE_ENV","console","warn","setRef","useCallback","current","createAriaHider","setTimeout","getRootNode","useEffect","handleKeyDown","event","key","scopeTab","document","addEventListener","removeEventListener"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/hooks/src/use-focus-trap/use-focus-trap.ts"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\nimport { createAriaHider } from './create-aria-hider';\nimport { scopeTab } from './scope-tab';\nimport { FOCUS_SELECTOR, focusable, tabbable } from './tabbable';\n\nexport function useFocusTrap(active = true): (instance: HTMLElement | null) => void {\n  const ref = useRef<HTMLElement | null>();\n  const restoreAria = useRef<Function | null>(null);\n\n  const focusNode = (node: HTMLElement) => {\n    let focusElement: HTMLElement | null = node.querySelector('[data-autofocus]');\n\n    if (!focusElement) {\n      const children = Array.from<HTMLElement>(node.querySelectorAll(FOCUS_SELECTOR));\n      focusElement = children.find(tabbable) || children.find(focusable) || null;\n      if (!focusElement && focusable(node)) focusElement = node;\n    }\n\n    if (focusElement) {\n      focusElement.focus({ preventScroll: true });\n    } else if (process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@mantine/hooks/use-focus-trap] Failed to find focusable element within provided node',\n        node\n      );\n    }\n  };\n\n  const setRef = useCallback(\n    (node: HTMLElement | null) => {\n      if (!active) {\n        return;\n      }\n\n      if (node === null) {\n        if (restoreAria.current) {\n          restoreAria.current();\n          restoreAria.current = null;\n        }\n        return;\n      }\n\n      restoreAria.current = createAriaHider(node);\n      if (ref.current === node) {\n        return;\n      }\n\n      if (node) {\n        // Delay processing the HTML node by a frame. This ensures focus is assigned correctly.\n        setTimeout(() => {\n          if (node.getRootNode()) {\n            focusNode(node);\n          } else if (process.env.NODE_ENV === 'development') {\n            // eslint-disable-next-line no-console\n            console.warn('[@mantine/hooks/use-focus-trap] Ref node is not part of the dom', node);\n          }\n        });\n\n        ref.current = node;\n      } else {\n        ref.current = null;\n      }\n    },\n    [active]\n  );\n\n  useEffect(() => {\n    if (!active) {\n      return undefined;\n    }\n\n    ref.current && setTimeout(() => focusNode(ref.current!));\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Tab' && ref.current) {\n        scopeTab(ref.current, event);\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n\n      if (restoreAria.current) {\n        restoreAria.current();\n      }\n    };\n  }, [active]);\n\n  return setRef;\n}\n"],"mappings":";;;;;;AAKO,SAASA,YAAYA,CAACC,MAAM,GAAG,IAAI,EAAE;EAC1C,MAAMC,GAAG,GAAGC,MAAM,EAAE;EACpB,MAAMC,WAAW,GAAGD,MAAM,CAAC,IAAI,CAAC;EAChC,MAAME,SAAS,GAAIC,IAAI,IAAK;IAC1B,IAAIC,YAAY,GAAGD,IAAI,CAACE,aAAa,CAAC,kBAAkB,CAAC;IACzD,IAAI,CAACD,YAAY,EAAE;MACjB,MAAME,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACL,IAAI,CAACM,gBAAgB,CAACC,cAAc,CAAC,CAAC;MAClEN,YAAY,GAAGE,QAAQ,CAACK,IAAI,CAACC,QAAQ,CAAC,IAAIN,QAAQ,CAACK,IAAI,CAACE,SAAS,CAAC,IAAI,IAAI;MAC1E,IAAI,CAACT,YAAY,IAAIS,SAAS,CAACV,IAAI,CAAC,EAClCC,YAAY,GAAGD,IAAI;IACtB;IACD,IAAIC,YAAY,EAAE;MAChBA,YAAY,CAACU,KAAK,CAAC;QAAEC,aAAa,EAAE;MAAM,EAAC;IAC5C,OAAM,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;MACjDC,OAAO,CAACC,IAAI,CACV,uFAAuF,EACvFjB,IACR,CAAO;IACF;EACL,CAAG;EACD,MAAMkB,MAAM,GAAGC,WAAW,CACvBnB,IAAI,IAAK;IACR,IAAI,CAACL,MAAM,EAAE;MACX;IACD;IACD,IAAIK,IAAI,KAAK,IAAI,EAAE;MACjB,IAAIF,WAAW,CAACsB,OAAO,EAAE;QACvBtB,WAAW,CAACsB,OAAO,EAAE;QACrBtB,WAAW,CAACsB,OAAO,GAAG,IAAI;MAC3B;MACD;IACD;IACDtB,WAAW,CAACsB,OAAO,GAAGC,eAAe,CAACrB,IAAI,CAAC;IAC3C,IAAIJ,GAAG,CAACwB,OAAO,KAAKpB,IAAI,EAAE;MACxB;IACD;IACD,IAAIA,IAAI,EAAE;MACRsB,UAAU,CAAC,MAAM;QACf,IAAItB,IAAI,CAACuB,WAAW,EAAE,EAAE;UACtBxB,SAAS,CAACC,IAAI,CAAC;QAChB,OAAM,IAAIa,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;UACjDC,OAAO,CAACC,IAAI,CAAC,iEAAiE,EAAEjB,IAAI,CAAC;QACtF;MACX,CAAS,CAAC;MACFJ,GAAG,CAACwB,OAAO,GAAGpB,IAAI;IAC1B,CAAO,MAAM;MACLJ,GAAG,CAACwB,OAAO,GAAG,IAAI;IACnB;EACF,GACD,CAACzB,MAAM,CACX,CAAG;EACD6B,SAAS,CAAC,MAAM;IACd,IAAI,CAAC7B,MAAM,EAAE;MACX,OAAO,KAAK,CAAC;IACd;IACDC,GAAG,CAACwB,OAAO,IAAIE,UAAU,CAAC,MAAMvB,SAAS,CAACH,GAAG,CAACwB,OAAO,CAAC,CAAC;IACvD,MAAMK,aAAa,GAAIC,KAAK,IAAK;MAC/B,IAAIA,KAAK,CAACC,GAAG,KAAK,KAAK,IAAI/B,GAAG,CAACwB,OAAO,EAAE;QACtCQ,QAAQ,CAAChC,GAAG,CAACwB,OAAO,EAAEM,KAAK,CAAC;MAC7B;IACP,CAAK;IACDG,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEL,aAAa,CAAC;IACnD,OAAO,MAAM;MACXI,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEN,aAAa,CAAC;MACtD,IAAI3B,WAAW,CAACsB,OAAO,EAAE;QACvBtB,WAAW,CAACsB,OAAO,EAAE;MACtB;IACP,CAAK;EACL,CAAG,EAAE,CAACzB,MAAM,CAAC,CAAC;EACZ,OAAOuB,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}