{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { getDefaultZIndex } from '../../core/utils/get-default-z-index/get-default-z-index.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { ModalBody } from './ModalBody.mjs';\nimport { ModalCloseButton } from './ModalCloseButton.mjs';\nimport { ModalContent } from './ModalContent.mjs';\nimport { ModalHeader } from './ModalHeader.mjs';\nimport { ModalOverlay } from './ModalOverlay.mjs';\nimport { ModalRoot } from './ModalRoot.mjs';\nimport { ModalTitle } from './ModalTitle.mjs';\nimport classes from './Modal.module.css.mjs';\nconst defaultProps = {\n  closeOnClickOutside: true,\n  withinPortal: true,\n  lockScroll: true,\n  trapFocus: true,\n  returnFocus: true,\n  closeOnEscape: true,\n  keepMounted: false,\n  zIndex: getDefaultZIndex(\"modal\"),\n  transitionProps: {\n    duration: 200,\n    transition: \"pop\"\n  },\n  withOverlay: true,\n  withCloseButton: true\n};\nconst Modal = factory((_props, ref) => {\n  const {\n    title,\n    withOverlay,\n    overlayProps,\n    withCloseButton,\n    closeButtonProps,\n    children,\n    radius,\n    ...others\n  } = useProps(\"Modal\", defaultProps, _props);\n  const hasHeader = !!title || withCloseButton;\n  return /* @__PURE__ */React.createElement(ModalRoot, {\n    ref,\n    radius,\n    ...others\n  }, withOverlay && /* @__PURE__ */React.createElement(ModalOverlay, {\n    ...overlayProps\n  }), /* @__PURE__ */React.createElement(ModalContent, {\n    radius\n  }, hasHeader && /* @__PURE__ */React.createElement(ModalHeader, null, title && /* @__PURE__ */React.createElement(ModalTitle, null, title), withCloseButton && /* @__PURE__ */React.createElement(ModalCloseButton, {\n    ...closeButtonProps\n  })), /* @__PURE__ */React.createElement(ModalBody, null, children)));\n});\nModal.classes = classes;\nModal.displayName = \"@mantine/core/Modal\";\nModal.Root = ModalRoot;\nModal.Overlay = ModalOverlay;\nModal.Content = ModalContent;\nModal.Body = ModalBody;\nModal.Header = ModalHeader;\nModal.Title = ModalTitle;\nModal.CloseButton = ModalCloseButton;\nexport { Modal };","map":{"version":3,"names":["defaultProps","closeOnClickOutside","withinPortal","lockScroll","trapFocus","returnFocus","closeOnEscape","keepMounted","zIndex","getDefaultZIndex","transitionProps","duration","transition","withOverlay","withCloseButton","Modal","factory","_props","ref","title","overlayProps","closeButtonProps","children","radius","others","useProps","hasHeader","React","createElement","ModalRoot","ModalOverlay","ModalContent","ModalHeader","ModalTitle","ModalCloseButton","ModalBody","classes","displayName","Root","Overlay","Content","Body","Header","Title","CloseButton"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Modal/Modal.tsx"],"sourcesContent":["import React from 'react';\nimport { factory, Factory, getDefaultZIndex, useProps } from '../../core';\nimport { ModalBaseCloseButtonProps, ModalBaseOverlayProps } from '../ModalBase';\nimport { ModalBody } from './ModalBody';\nimport { ModalCloseButton } from './ModalCloseButton';\nimport { ModalContent } from './ModalContent';\nimport { ModalHeader } from './ModalHeader';\nimport { ModalOverlay } from './ModalOverlay';\nimport {\n  ModalRoot,\n  ModalRootCssVariables,\n  ModalRootProps,\n  ModalRootStylesNames,\n} from './ModalRoot';\nimport { ModalTitle } from './ModalTitle';\nimport classes from './Modal.module.css';\n\nexport type ModalStylesNames = ModalRootStylesNames;\nexport type ModalCssVariables = ModalRootCssVariables;\n\nexport interface ModalProps extends ModalRootProps {\n  __staticSelector?: string;\n\n  /** Modal title */\n  title?: React.ReactNode;\n\n  /** Determines whether the overlay should be rendered, `true` by default */\n  withOverlay?: boolean;\n\n  /** Props passed down to the `Overlay` component, use to configure opacity, `background-color`, styles and other properties */\n  overlayProps?: ModalBaseOverlayProps;\n\n  /** Modal content */\n  children?: React.ReactNode;\n\n  /** Determines whether the close button should be rendered, `true` by default */\n  withCloseButton?: boolean;\n\n  /** Props passed down to the close button */\n  closeButtonProps?: ModalBaseCloseButtonProps;\n}\n\nexport type ModalFactory = Factory<{\n  props: ModalProps;\n  ref: HTMLDivElement;\n  stylesNames: ModalStylesNames;\n  vars: ModalCssVariables;\n  staticComponents: {\n    Root: typeof ModalRoot;\n    Overlay: typeof ModalOverlay;\n    Content: typeof ModalContent;\n    Body: typeof ModalBody;\n    Header: typeof ModalHeader;\n    Title: typeof ModalTitle;\n    CloseButton: typeof ModalCloseButton;\n  };\n}>;\n\nconst defaultProps: Partial<ModalProps> = {\n  closeOnClickOutside: true,\n  withinPortal: true,\n  lockScroll: true,\n  trapFocus: true,\n  returnFocus: true,\n  closeOnEscape: true,\n  keepMounted: false,\n  zIndex: getDefaultZIndex('modal'),\n  transitionProps: { duration: 200, transition: 'pop' },\n  withOverlay: true,\n  withCloseButton: true,\n};\n\nexport const Modal = factory<ModalFactory>((_props, ref) => {\n  const {\n    title,\n    withOverlay,\n    overlayProps,\n    withCloseButton,\n    closeButtonProps,\n    children,\n    radius,\n    ...others\n  } = useProps('Modal', defaultProps, _props);\n\n  const hasHeader = !!title || withCloseButton;\n\n  return (\n    <ModalRoot ref={ref} radius={radius} {...others}>\n      {withOverlay && <ModalOverlay {...overlayProps} />}\n      <ModalContent radius={radius}>\n        {hasHeader && (\n          <ModalHeader>\n            {title && <ModalTitle>{title}</ModalTitle>}\n            {withCloseButton && <ModalCloseButton {...closeButtonProps} />}\n          </ModalHeader>\n        )}\n\n        <ModalBody>{children}</ModalBody>\n      </ModalContent>\n    </ModalRoot>\n  );\n});\n\nModal.classes = classes;\nModal.displayName = '@mantine/core/Modal';\nModal.Root = ModalRoot;\nModal.Overlay = ModalOverlay;\nModal.Content = ModalContent;\nModal.Body = ModalBody;\nModal.Header = ModalHeader;\nModal.Title = ModalTitle;\nModal.CloseButton = ModalCloseButton;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAaA,MAAMA,YAAY,GAAG;EACnBC,mBAAmB,EAAE,IAAI;EACzBC,YAAY,EAAE,IAAI;EAClBC,UAAU,EAAE,IAAI;EAChBC,SAAS,EAAE,IAAI;EACfC,WAAW,EAAE,IAAI;EACjBC,aAAa,EAAE,IAAI;EACnBC,WAAW,EAAE,KAAK;EAClBC,MAAM,EAAEC,gBAAgB,CAAC,OAAO,CAAC;EACjCC,eAAe,EAAE;IAAEC,QAAQ,EAAE,GAAG;IAAEC,UAAU,EAAE;EAAO;EACrDC,WAAW,EAAE,IAAI;EACjBC,eAAe,EAAE;AACnB,CAAC;AACW,MAACC,KAAK,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EAC5C,MAAM;IACJC,KAAK;IACLN,WAAW;IACXO,YAAY;IACZN,eAAe;IACfO,gBAAgB;IAChBC,QAAQ;IACRC,MAAM;IACN,GAAGC;EACJ,IAAGC,QAAQ,CAAC,OAAO,EAAEzB,YAAY,EAAEiB,MAAM,CAAC;EAC3C,MAAMS,SAAS,GAAG,CAAC,CAACP,KAAK,IAAIL,eAAe;EAC5C,sBAAuBa,KAAK,CAACC,aAAa,CAACC,SAAS,EAAE;IAAEX,GAAG;IAAEK,MAAM;IAAE,GAAGC;EAAM,CAAE,EAAEX,WAAW,mBAAoBc,KAAK,CAACC,aAAa,CAACE,YAAY,EAAE;IAAE,GAAGV;EAAY,CAAE,CAAC,iBAAkBO,KAAK,CAACC,aAAa,CAACG,YAAY,EAAE;IAAER;EAAM,CAAE,EAAEG,SAAS,mBAAoBC,KAAK,CAACC,aAAa,CAACI,WAAW,EAAE,IAAI,EAAEb,KAAK,IAAoB,eAAAQ,KAAK,CAACC,aAAa,CAACK,UAAU,EAAE,IAAI,EAAEd,KAAK,CAAC,EAAEL,eAAe,mBAAoBa,KAAK,CAACC,aAAa,CAACM,gBAAgB,EAAE;IAAE,GAAGb;EAAgB,CAAE,CAAC,CAAC,iBAAkBM,KAAK,CAACC,aAAa,CAACO,SAAS,EAAE,IAAI,EAAEb,QAAQ,CAAC,CAAC,CAAC;AACxhB,CAAC,CAAE;AACHP,KAAK,CAACqB,OAAO,GAAGA,OAAO;AACvBrB,KAAK,CAACsB,WAAW,GAAG,qBAAqB;AACzCtB,KAAK,CAACuB,IAAI,GAAGT,SAAS;AACtBd,KAAK,CAACwB,OAAO,GAAGT,YAAY;AAC5Bf,KAAK,CAACyB,OAAO,GAAGT,YAAY;AAC5BhB,KAAK,CAAC0B,IAAI,GAAGN,SAAS;AACtBpB,KAAK,CAAC2B,MAAM,GAAGV,WAAW;AAC1BjB,KAAK,CAAC4B,KAAK,GAAGV,UAAU;AACxBlB,KAAK,CAAC6B,WAAW,GAAGV,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}