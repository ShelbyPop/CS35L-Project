{"ast":null,"code":"'use client';\n\nimport React, { forwardRef, useRef } from 'react';\nimport { assignRef, useMergedRef } from '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nconst defaultProps = {\n  multiple: false\n};\nconst FileButton = forwardRef((props, ref) => {\n  const {\n    onChange,\n    children,\n    multiple,\n    accept,\n    name,\n    form,\n    resetRef,\n    disabled,\n    capture,\n    inputProps,\n    ...others\n  } = useProps(\"FileButton\", defaultProps, props);\n  const inputRef = useRef();\n  const onClick = () => {\n    !disabled && inputRef.current?.click();\n  };\n  const handleChange = event => {\n    if (multiple) {\n      onChange(Array.from(event.currentTarget.files));\n    } else {\n      onChange(event.currentTarget.files[0] || null);\n    }\n  };\n  const reset = () => {\n    inputRef.current.value = \"\";\n  };\n  assignRef(resetRef, reset);\n  return /* @__PURE__ */React.createElement(React.Fragment, null, children({\n    onClick,\n    ...others\n  }), /* @__PURE__ */React.createElement(\"input\", {\n    style: {\n      display: \"none\"\n    },\n    type: \"file\",\n    accept,\n    multiple,\n    onChange: handleChange,\n    ref: useMergedRef(ref, inputRef),\n    name,\n    form,\n    capture,\n    ...inputProps\n  }));\n});\nFileButton.displayName = \"@mantine/core/FileButton\";\nexport { FileButton };","map":{"version":3,"names":["defaultProps","multiple","FileButton","forwardRef","props","ref","onChange","children","accept","name","form","resetRef","disabled","capture","inputProps","others","useProps","inputRef","useRef","onClick","current","click","handleChange","event","Array","from","currentTarget","files","reset","value","assignRef","React","createElement","Fragment","style","display","type","useMergedRef","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/FileButton/FileButton.tsx"],"sourcesContent":["import React, { forwardRef, useRef } from 'react';\nimport { assignRef, useMergedRef } from '@mantine/hooks';\nimport { useProps } from '../../core';\n\nexport interface FileButtonProps<Multiple extends boolean = false> {\n  /** Called when files are picked */\n  onChange: (payload: Multiple extends true ? File[] : File | null) => void;\n\n  /** Function that receives button props and returns react node that should be rendered */\n  children: (props: { onClick: () => void }) => React.ReactNode;\n\n  /** Determines whether user can pick more than one file */\n  multiple?: Multiple;\n\n  /** File input accept attribute, for example, `\"image/png,image/jpeg\"` */\n  accept?: string;\n\n  /** Input name attribute */\n  name?: string;\n\n  /** Input form attribute */\n  form?: string;\n\n  /** Reference of the function that should be called when value changes to null or empty array */\n  resetRef?: React.ForwardedRef<() => void>;\n\n  /** Disables file picker */\n  disabled?: boolean;\n\n  /** Specifies that, optionally, a new file should be captured, and which device should be used to capture that new media of a type defined by the accept attribute. */\n  capture?: boolean | 'user' | 'environment';\n\n  /** Passes down props to the input element used to capture files */\n  inputProps?: React.ComponentPropsWithoutRef<'input'>;\n}\n\nconst defaultProps: Partial<FileButtonProps> = {\n  multiple: false,\n};\n\ntype FileButtonComponent = (<Multiple extends boolean = false>(\n  props: FileButtonProps<Multiple>\n) => React.ReactElement) & { displayName?: string };\n\nexport const FileButton: FileButtonComponent = forwardRef<HTMLInputElement, FileButtonProps>(\n  (props, ref) => {\n    const {\n      onChange,\n      children,\n      multiple,\n      accept,\n      name,\n      form,\n      resetRef,\n      disabled,\n      capture,\n      inputProps,\n      ...others\n    } = useProps('FileButton', defaultProps, props);\n\n    const inputRef = useRef<HTMLInputElement>();\n\n    const onClick = () => {\n      !disabled && inputRef.current?.click();\n    };\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (multiple) {\n        onChange(Array.from(event.currentTarget!.files!) as any);\n      } else {\n        onChange(event.currentTarget!.files![0] || null);\n      }\n    };\n\n    const reset = () => {\n      inputRef.current!.value = '';\n    };\n\n    assignRef(resetRef!, reset);\n\n    return (\n      <>\n        {children({ onClick, ...others })}\n\n        <input\n          style={{ display: 'none' }}\n          type=\"file\"\n          accept={accept}\n          multiple={multiple}\n          onChange={handleChange}\n          ref={useMergedRef(ref, inputRef)}\n          name={name}\n          form={form}\n          capture={capture}\n          {...inputProps}\n        />\n      </>\n    );\n  }\n) as any;\n\nFileButton.displayName = '@mantine/core/FileButton';\n"],"mappings":";;;;;;;;;;;;AAIA,MAAMA,YAAY,GAAG;EACnBC,QAAQ,EAAE;AACZ,CAAC;AACW,MAACC,UAAU,GAAGC,UAAU,CAClC,CAACC,KAAK,EAAEC,GAAG,KAAK;EACd,MAAM;IACJC,QAAQ;IACRC,QAAQ;IACRN,QAAQ;IACRO,MAAM;IACNC,IAAI;IACJC,IAAI;IACJC,QAAQ;IACRC,QAAQ;IACRC,OAAO;IACPC,UAAU;IACV,GAAGC;EACJ,IAAGC,QAAQ,CAAC,YAAY,EAAEhB,YAAY,EAAEI,KAAK,CAAC;EAC/C,MAAMa,QAAQ,GAAGC,MAAM,EAAE;EACzB,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,CAACP,QAAQ,IAAIK,QAAQ,CAACG,OAAO,EAAEC,KAAK,EAAE;EAC5C,CAAK;EACD,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,IAAItB,QAAQ,EAAE;MACZK,QAAQ,CAACkB,KAAK,CAACC,IAAI,CAACF,KAAK,CAACG,aAAa,CAACC,KAAK,CAAC,CAAC;IACvD,CAAO,MAAM;MACLrB,QAAQ,CAACiB,KAAK,CAACG,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;IAC/C;EACP,CAAK;EACD,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAClBX,QAAQ,CAACG,OAAO,CAACS,KAAK,GAAG,EAAE;EACjC,CAAK;EACDC,SAAS,CAACnB,QAAQ,EAAEiB,KAAK,CAAC;EAC1B,sBAAuBG,KAAK,CAACC,aAAa,CAACD,KAAK,CAACE,QAAQ,EAAE,IAAI,EAAE1B,QAAQ,CAAC;IAAEY,OAAO;IAAE,GAAGJ;EAAM,CAAE,CAAC,iBAAkBgB,KAAK,CAACC,aAAa,CACpI,OAAO,EACP;IACEE,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAQ;IAC1BC,IAAI,EAAE,MAAM;IACZ5B,MAAM;IACNP,QAAQ;IACRK,QAAQ,EAAEgB,YAAY;IACtBjB,GAAG,EAAEgC,YAAY,CAAChC,GAAG,EAAEY,QAAQ,CAAC;IAChCR,IAAI;IACJC,IAAI;IACJG,OAAO;IACP,GAAGC;EACJ,CACP,CAAK,CAAC;AACH,CACH,CAAE;AACFZ,UAAU,CAACoC,WAAW,GAAG,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}