{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { getSize } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Container.module.css.mjs';\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((_, {\n  size,\n  fluid\n}) => ({\n  root: {\n    \"--container-size\": fluid ? void 0 : getSize(size, \"container-size\")\n  }\n}));\nconst Container = factory((_props, ref) => {\n  const props = useProps(\"Container\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    fluid,\n    mod,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Container\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */React.createElement(Box, {\n    ref,\n    mod: [{\n      fluid\n    }, mod],\n    ...getStyles(\"root\"),\n    ...others\n  });\n});\nContainer.classes = classes;\nContainer.displayName = \"@mantine/core/Container\";\nexport { Container };","map":{"version":3,"names":["defaultProps","varsResolver","createVarsResolver","_","size","fluid","root","getSize","Container","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","mod","others","getStyles","useStyles","name","classes","React","createElement","Box","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Container/Container.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSize,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Container.module.css';\n\nexport type ContainerStylesNames = 'root';\nexport type ContainerCssVariables = {\n  root: '--container-size';\n};\n\nexport interface ContainerProps\n  extends BoxProps,\n    StylesApiProps<ContainerFactory>,\n    ElementProps<'div'> {\n  /** Sets `max-width` of the container, value is not responsive â€“ it is the same for all screen sizes. Numbers are converted to rem. Ignored when `fluid` prop is set. `'md'` by default */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Determines whether the container should take 100% of its parent width. If set, `size` prop is ignored. `false` by default. */\n  fluid?: boolean;\n}\n\nexport type ContainerFactory = Factory<{\n  props: ContainerProps;\n  ref: HTMLDivElement;\n  stylesNames: ContainerStylesNames;\n  vars: ContainerCssVariables;\n}>;\n\nconst defaultProps: Partial<ContainerProps> = {};\n\nconst varsResolver = createVarsResolver<ContainerFactory>((_, { size, fluid }) => ({\n  root: {\n    '--container-size': fluid ? undefined : getSize(size, 'container-size'),\n  },\n}));\n\nexport const Container = factory<ContainerFactory>((_props, ref) => {\n  const props = useProps('Container', defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, fluid, mod, ...others } = props;\n\n  const getStyles = useStyles<ContainerFactory>({\n    name: 'Container',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return <Box ref={ref} mod={[{ fluid }, mod]} {...getStyles('root')} {...others} />;\n});\n\nContainer.classes = classes;\nContainer.displayName = '@mantine/core/Container';\n"],"mappings":";;;;;;;;;;;;;;;;;AAWA,MAAMA,YAAY,GAAG,EAAE;AACvB,MAAMC,YAAY,GAAGC,kBAAkB,CAAC,CAACC,CAAC,EAAE;EAAEC,IAAI;EAAEC;AAAK,CAAE,MAAM;EAC/DC,IAAI,EAAE;IACJ,kBAAkB,EAAED,KAAK,GAAG,KAAK,CAAC,GAAGE,OAAO,CAACH,IAAI,EAAE,gBAAgB;EACpE;AACH,CAAC,CAAC,CAAC;AACS,MAACI,SAAS,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EAChD,MAAMC,KAAK,GAAGC,QAAQ,CAAC,WAAW,EAAEb,YAAY,EAAEU,MAAM,CAAC;EACzD,MAAM;IAAEI,UAAU;IAAEC,SAAS;IAAEC,KAAK;IAAEC,MAAM;IAAEC,QAAQ;IAAEC,IAAI;IAAEd,KAAK;IAAEe,GAAG;IAAE,GAAGC;EAAM,CAAE,GAAGT,KAAK;EAC7F,MAAMU,SAAS,GAAGC,SAAS,CAAC;IAC1BC,IAAI,EAAE,WAAW;IACjBC,OAAO;IACPb,KAAK;IACLG,SAAS;IACTC,KAAK;IACLF,UAAU;IACVG,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJlB;EACJ,CAAG,CAAC;EACF,OAAuB,eAAAyB,KAAK,CAACC,aAAa,CAACC,GAAG,EAAE;IAAEjB,GAAG;IAAES,GAAG,EAAE,CAAC;MAAEf;IAAO,GAAEe,GAAG,CAAC;IAAE,GAAGE,SAAS,CAAC,MAAM,CAAC;IAAE,GAAGD;EAAM,CAAE,CAAC;AAClH,CAAC,CAAE;AACHb,SAAS,CAACiB,OAAO,GAAGA,OAAO;AAC3BjB,SAAS,CAACqB,WAAW,GAAG,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}