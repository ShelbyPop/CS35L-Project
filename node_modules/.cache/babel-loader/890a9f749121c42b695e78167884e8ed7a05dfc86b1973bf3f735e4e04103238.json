{"ast":null,"code":"'use client';\n\nimport { keys } from '../../../../core/utils/keys/keys.mjs';\nimport { rem } from '../../../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getBreakpointValue } from '../../../../core/utils/get-breakpoint-value/get-breakpoint-value.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../../core/MantineProvider/default-theme.mjs';\nimport '../../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../../core/Box/Box.mjs';\nimport '../../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { getBaseSize } from '../get-base-size/get-base-size.mjs';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size.mjs';\nimport { isResponsiveSize } from '../is-responsive-size/is-responsive-size.mjs';\nfunction assignAsideVariables({\n  baseStyles,\n  minMediaStyles,\n  maxMediaStyles,\n  aside,\n  theme\n}) {\n  const asideWidth = aside?.width;\n  const collapsedAsideTransform = \"translateX(var(--app-shell-aside-width))\";\n  const collapsedAsideTransformRtl = \"translateX(calc(var(--app-shell-aside-width) * -1))\";\n  if (aside?.breakpoint && !aside?.collapsed?.mobile) {\n    maxMediaStyles[aside?.breakpoint] = maxMediaStyles[aside?.breakpoint] || {};\n    maxMediaStyles[aside?.breakpoint][\"--app-shell-aside-width\"] = \"100%\";\n    maxMediaStyles[aside?.breakpoint][\"--app-shell-aside-offset\"] = \"0px\";\n  }\n  if (isPrimitiveSize(asideWidth)) {\n    const baseSize = rem(getBaseSize(asideWidth));\n    baseStyles[\"--app-shell-aside-width\"] = baseSize;\n    baseStyles[\"--app-shell-aside-offset\"] = baseSize;\n  }\n  if (isResponsiveSize(asideWidth)) {\n    if (typeof asideWidth.base !== \"undefined\") {\n      baseStyles[\"--app-shell-aside-width\"] = rem(asideWidth.base);\n      baseStyles[\"--app-shell-aside-offset\"] = rem(asideWidth.base);\n    }\n    keys(asideWidth).forEach(key => {\n      if (key !== \"base\") {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key][\"--app-shell-aside-width\"] = rem(asideWidth[key]);\n        minMediaStyles[key][\"--app-shell-aside-offset\"] = rem(asideWidth[key]);\n      }\n    });\n  }\n  if (aside?.collapsed?.desktop) {\n    const breakpointValue = aside.breakpoint;\n    minMediaStyles[breakpointValue] = minMediaStyles[breakpointValue] || {};\n    minMediaStyles[breakpointValue][\"--app-shell-aside-transform\"] = collapsedAsideTransform;\n    minMediaStyles[breakpointValue][\"--app-shell-aside-transform-rtl\"] = collapsedAsideTransformRtl;\n    minMediaStyles[breakpointValue][\"--app-shell-aside-offset\"] = \"0px !important\";\n  }\n  if (aside?.collapsed?.mobile) {\n    const breakpointValue = getBreakpointValue(aside.breakpoint, theme) - 0.1;\n    maxMediaStyles[breakpointValue] = maxMediaStyles[breakpointValue] || {};\n    maxMediaStyles[breakpointValue][\"--app-shell-aside-width\"] = \"100%\";\n    maxMediaStyles[breakpointValue][\"--app-shell-aside-offset\"] = \"0px\";\n    maxMediaStyles[breakpointValue][\"--app-shell-aside-transform\"] = collapsedAsideTransform;\n    maxMediaStyles[breakpointValue][\"--app-shell-aside-transform-rtl\"] = collapsedAsideTransformRtl;\n  }\n}\nexport { assignAsideVariables };","map":{"version":3,"names":["assignAsideVariables","baseStyles","minMediaStyles","maxMediaStyles","aside","theme","asideWidth","width","collapsedAsideTransform","collapsedAsideTransformRtl","breakpoint","collapsed","mobile","isPrimitiveSize","baseSize","rem","getBaseSize","isResponsiveSize","base","keys","forEach","key","desktop","breakpointValue","getBreakpointValue"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/AppShell/AppShellMediaStyles/assign-aside-variables/assign-aside-variables.ts"],"sourcesContent":["import { getBreakpointValue, keys, MantineTheme, rem } from '../../../../core';\nimport type { AppShellProps } from '../../AppShell';\nimport { getBaseSize } from '../get-base-size/get-base-size';\nimport type { CSSVariables, MediaQueryVariables } from '../get-variables/get-variables';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size';\nimport { isResponsiveSize } from '../is-responsive-size/is-responsive-size';\n\ninterface AssignAsideVariablesInput {\n  baseStyles: CSSVariables;\n  minMediaStyles: MediaQueryVariables;\n  maxMediaStyles: MediaQueryVariables;\n  aside: AppShellProps['aside'] | undefined;\n  theme: MantineTheme;\n}\n\nexport function assignAsideVariables({\n  baseStyles,\n  minMediaStyles,\n  maxMediaStyles,\n  aside,\n  theme,\n}: AssignAsideVariablesInput) {\n  const asideWidth = aside?.width;\n  const collapsedAsideTransform = 'translateX(var(--app-shell-aside-width))';\n  const collapsedAsideTransformRtl = 'translateX(calc(var(--app-shell-aside-width) * -1))';\n\n  if (aside?.breakpoint && !aside?.collapsed?.mobile) {\n    maxMediaStyles[aside?.breakpoint] = maxMediaStyles[aside?.breakpoint] || {};\n    maxMediaStyles[aside?.breakpoint]['--app-shell-aside-width'] = '100%';\n    maxMediaStyles[aside?.breakpoint]['--app-shell-aside-offset'] = '0px';\n  }\n\n  if (isPrimitiveSize(asideWidth)) {\n    const baseSize = rem(getBaseSize(asideWidth));\n    baseStyles['--app-shell-aside-width'] = baseSize;\n    baseStyles['--app-shell-aside-offset'] = baseSize;\n  }\n\n  if (isResponsiveSize(asideWidth)) {\n    if (typeof asideWidth.base !== 'undefined') {\n      baseStyles['--app-shell-aside-width'] = rem(asideWidth.base);\n      baseStyles['--app-shell-aside-offset'] = rem(asideWidth.base);\n    }\n\n    keys(asideWidth).forEach((key) => {\n      if (key !== 'base') {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key]['--app-shell-aside-width'] = rem(asideWidth![key]);\n        minMediaStyles[key]['--app-shell-aside-offset'] = rem(asideWidth![key]);\n      }\n    });\n  }\n\n  if (aside?.collapsed?.desktop) {\n    const breakpointValue = aside!.breakpoint;\n    minMediaStyles[breakpointValue] = minMediaStyles[breakpointValue] || {};\n    minMediaStyles[breakpointValue]['--app-shell-aside-transform'] = collapsedAsideTransform;\n    minMediaStyles[breakpointValue]['--app-shell-aside-transform-rtl'] = collapsedAsideTransformRtl;\n    minMediaStyles[breakpointValue]['--app-shell-aside-offset'] = '0px !important';\n  }\n\n  if (aside?.collapsed?.mobile) {\n    const breakpointValue = getBreakpointValue(aside!.breakpoint, theme) - 0.1;\n    maxMediaStyles[breakpointValue] = maxMediaStyles[breakpointValue] || {};\n    maxMediaStyles[breakpointValue]['--app-shell-aside-width'] = '100%';\n    maxMediaStyles[breakpointValue]['--app-shell-aside-offset'] = '0px';\n    maxMediaStyles[breakpointValue]['--app-shell-aside-transform'] = collapsedAsideTransform;\n    maxMediaStyles[breakpointValue]['--app-shell-aside-transform-rtl'] = collapsedAsideTransformRtl;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAKO,SAASA,oBAAoBA,CAAC;EACnCC,UAAU;EACVC,cAAc;EACdC,cAAc;EACdC,KAAK;EACLC;AACF,CAAC,EAAE;EACD,MAAMC,UAAU,GAAGF,KAAK,EAAEG,KAAK;EAC/B,MAAMC,uBAAuB,GAAG,0CAA0C;EAC1E,MAAMC,0BAA0B,GAAG,qDAAqD;EACxF,IAAIL,KAAK,EAAEM,UAAU,IAAI,CAACN,KAAK,EAAEO,SAAS,EAAEC,MAAM,EAAE;IAClDT,cAAc,CAACC,KAAK,EAAEM,UAAU,CAAC,GAAGP,cAAc,CAACC,KAAK,EAAEM,UAAU,CAAC,IAAI,EAAE;IAC3EP,cAAc,CAACC,KAAK,EAAEM,UAAU,CAAC,CAAC,yBAAyB,CAAC,GAAG,MAAM;IACrEP,cAAc,CAACC,KAAK,EAAEM,UAAU,CAAC,CAAC,0BAA0B,CAAC,GAAG,KAAK;EACtE;EACD,IAAIG,eAAe,CAACP,UAAU,CAAC,EAAE;IAC/B,MAAMQ,QAAQ,GAAGC,GAAG,CAACC,WAAW,CAACV,UAAU,CAAC,CAAC;IAC7CL,UAAU,CAAC,yBAAyB,CAAC,GAAGa,QAAQ;IAChDb,UAAU,CAAC,0BAA0B,CAAC,GAAGa,QAAQ;EAClD;EACD,IAAIG,gBAAgB,CAACX,UAAU,CAAC,EAAE;IAChC,IAAI,OAAOA,UAAU,CAACY,IAAI,KAAK,WAAW,EAAE;MAC1CjB,UAAU,CAAC,yBAAyB,CAAC,GAAGc,GAAG,CAACT,UAAU,CAACY,IAAI,CAAC;MAC5DjB,UAAU,CAAC,0BAA0B,CAAC,GAAGc,GAAG,CAACT,UAAU,CAACY,IAAI,CAAC;IAC9D;IACDC,IAAI,CAACb,UAAU,CAAC,CAACc,OAAO,CAAEC,GAAG,IAAK;MAChC,IAAIA,GAAG,KAAK,MAAM,EAAE;QAClBnB,cAAc,CAACmB,GAAG,CAAC,GAAGnB,cAAc,CAACmB,GAAG,CAAC,IAAI,EAAE;QAC/CnB,cAAc,CAACmB,GAAG,CAAC,CAAC,yBAAyB,CAAC,GAAGN,GAAG,CAACT,UAAU,CAACe,GAAG,CAAC,CAAC;QACrEnB,cAAc,CAACmB,GAAG,CAAC,CAAC,0BAA0B,CAAC,GAAGN,GAAG,CAACT,UAAU,CAACe,GAAG,CAAC,CAAC;MACvE;IACP,CAAK,CAAC;EACH;EACD,IAAIjB,KAAK,EAAEO,SAAS,EAAEW,OAAO,EAAE;IAC7B,MAAMC,eAAe,GAAGnB,KAAK,CAACM,UAAU;IACxCR,cAAc,CAACqB,eAAe,CAAC,GAAGrB,cAAc,CAACqB,eAAe,CAAC,IAAI,EAAE;IACvErB,cAAc,CAACqB,eAAe,CAAC,CAAC,6BAA6B,CAAC,GAAGf,uBAAuB;IACxFN,cAAc,CAACqB,eAAe,CAAC,CAAC,iCAAiC,CAAC,GAAGd,0BAA0B;IAC/FP,cAAc,CAACqB,eAAe,CAAC,CAAC,0BAA0B,CAAC,GAAG,gBAAgB;EAC/E;EACD,IAAInB,KAAK,EAAEO,SAAS,EAAEC,MAAM,EAAE;IAC5B,MAAMW,eAAe,GAAGC,kBAAkB,CAACpB,KAAK,CAACM,UAAU,EAAEL,KAAK,CAAC,GAAG,GAAG;IACzEF,cAAc,CAACoB,eAAe,CAAC,GAAGpB,cAAc,CAACoB,eAAe,CAAC,IAAI,EAAE;IACvEpB,cAAc,CAACoB,eAAe,CAAC,CAAC,yBAAyB,CAAC,GAAG,MAAM;IACnEpB,cAAc,CAACoB,eAAe,CAAC,CAAC,0BAA0B,CAAC,GAAG,KAAK;IACnEpB,cAAc,CAACoB,eAAe,CAAC,CAAC,6BAA6B,CAAC,GAAGf,uBAAuB;IACxFL,cAAc,CAACoB,eAAe,CAAC,CAAC,iCAAiC,CAAC,GAAGd,0BAA0B;EAChG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}