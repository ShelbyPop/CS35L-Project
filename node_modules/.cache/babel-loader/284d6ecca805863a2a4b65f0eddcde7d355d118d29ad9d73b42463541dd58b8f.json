{"ast":null,"code":"var _jsxFileName = \"/Users/virounikamina/pompom/src/LoginInput.js\",\n  _s = $RefreshSig$();\n// src/LoginInput.js\nimport { TextInput, Checkbox, Button, Group, Box } from '@mantine/core';\nimport { useForm } from '@mantine/form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginInput() {\n  _s();\n  const form = useForm({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    // Validate input fields using regex\n    validate: {\n      username: value => /^\\S+$/.test(value) ? null : 'Invalid username (has whitespace or is empty)',\n      password: value => /^\\S{6}\\S*$/.test(value) ? null : 'Invalid password (has whitespace or less than 6 characters)'\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    maw: 340,\n    mx: \"auto\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: form.onSubmit(values => console.log(values)),\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        label: \"Username\",\n        placeholder: \"your username\",\n        ...form.getInputProps('username')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        label: \"Password\",\n        placeholder: \"your password\",\n        ...form.getInputProps('password')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Group, {\n        justify: \"flex-end\",\n        mt: \"md\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginInput, \"woqMTX6igxsX6/9vX4dQZlxR7yY=\", false, function () {\n  return [useForm];\n});\n_c = LoginInput;\nvar _c;\n$RefreshReg$(_c, \"LoginInput\");","map":{"version":3,"names":["TextInput","Checkbox","Button","Group","Box","useForm","jsxDEV","_jsxDEV","LoginInput","_s","form","initialValues","username","password","validate","value","test","maw","mx","children","onSubmit","values","console","log","label","placeholder","getInputProps","fileName","_jsxFileName","lineNumber","columnNumber","justify","mt","type","_c","$RefreshReg$"],"sources":["/Users/virounikamina/pompom/src/LoginInput.js"],"sourcesContent":["// src/LoginInput.js\nimport { TextInput, Checkbox, Button, Group, Box } from '@mantine/core';\nimport { useForm } from '@mantine/form';\n\nexport default function LoginInput() {\n  const form = useForm({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n\n    // Validate input fields using regex\n    validate: {\n        username: (value) => (/^\\S+$/.test(value) ? null : 'Invalid username (has whitespace or is empty)'),\n        password: (value) => (/^\\S{6}\\S*$/.test(value) ? null : 'Invalid password (has whitespace or less than 6 characters)')\n    },\n  });\n\n  return (\n    <Box maw={340} mx=\"auto\">\n      <form onSubmit={form.onSubmit((values) => console.log(values))}>\n        <TextInput\n          label=\"Username\"\n          placeholder=\"your username\"\n          {...form.getInputProps('username')}\n        />\n\n        <TextInput\n          label=\"Password\"\n          placeholder=\"your password\"\n          {...form.getInputProps('password')}\n        />\n\n        <Group justify=\"flex-end\" mt=\"md\">\n          <Button type=\"submit\">Submit</Button>\n        </Group>\n      </form>\n    </Box>\n  );\n}"],"mappings":";;AAAA;AACA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,KAAK,EAAEC,GAAG,QAAQ,eAAe;AACvE,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,IAAI,GAAGL,OAAO,CAAC;IACnBM,aAAa,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;IAED;IACAC,QAAQ,EAAE;MACNF,QAAQ,EAAGG,KAAK,IAAM,OAAO,CAACC,IAAI,CAACD,KAAK,CAAC,GAAG,IAAI,GAAG,+CAAgD;MACnGF,QAAQ,EAAGE,KAAK,IAAM,YAAY,CAACC,IAAI,CAACD,KAAK,CAAC,GAAG,IAAI,GAAG;IAC5D;EACF,CAAC,CAAC;EAEF,oBACER,OAAA,CAACH,GAAG;IAACa,GAAG,EAAE,GAAI;IAACC,EAAE,EAAC,MAAM;IAAAC,QAAA,eACtBZ,OAAA;MAAMa,QAAQ,EAAEV,IAAI,CAACU,QAAQ,CAAEC,MAAM,IAAKC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAE;MAAAF,QAAA,gBAC7DZ,OAAA,CAACP,SAAS;QACRwB,KAAK,EAAC,UAAU;QAChBC,WAAW,EAAC,eAAe;QAAA,GACvBf,IAAI,CAACgB,aAAa,CAAC,UAAU;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eAEFvB,OAAA,CAACP,SAAS;QACRwB,KAAK,EAAC,UAAU;QAChBC,WAAW,EAAC,eAAe;QAAA,GACvBf,IAAI,CAACgB,aAAa,CAAC,UAAU;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eAEFvB,OAAA,CAACJ,KAAK;QAAC4B,OAAO,EAAC,UAAU;QAACC,EAAE,EAAC,IAAI;QAAAb,QAAA,eAC/BZ,OAAA,CAACL,MAAM;UAAC+B,IAAI,EAAC,QAAQ;UAAAd,QAAA,EAAC;QAAM;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACrB,EAAA,CAnCuBD,UAAU;EAAA,QACnBH,OAAO;AAAA;AAAA6B,EAAA,GADE1B,UAAU;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}