{"ast":null,"code":"'use client';\n\nimport 'react';\nimport { createSafeContext } from '../../core/utils/create-safe-context/create-safe-context.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nconst [ComboboxProvider, useComboboxContext] = createSafeContext(\"Combobox component was not found in tree\");\nexport { ComboboxProvider, useComboboxContext };","map":{"version":3,"names":["ComboboxProvider","useComboboxContext","createSafeContext"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Combobox/Combobox.context.ts"],"sourcesContent":["import { createSafeContext, GetStylesApi, MantineSize } from '../../core';\nimport type { ComboboxFactory } from './Combobox';\nimport type { ComboboxOptionProps } from './ComboboxOption/ComboboxOption';\nimport type { ComboboxStore } from './use-combobox/use-combobox';\n\nexport interface ComboboxContextValue {\n  getStyles: GetStylesApi<ComboboxFactory>;\n  store: ComboboxStore;\n  onOptionSubmit?: (value: string, optionProps: ComboboxOptionProps) => void;\n  size: MantineSize | (string & {});\n  resetSelectionOnOptionHover: boolean | undefined;\n  readOnly: boolean | undefined;\n}\n\nexport const [ComboboxProvider, useComboboxContext] = createSafeContext<ComboboxContextValue>(\n  'Combobox component was not found in tree'\n);\n"],"mappings":";;;;;;;;;;;;AAEY,MAAC,CAACA,gBAAgB,EAAEC,kBAAkB,CAAC,GAAGC,iBAAiB,CACrE,0CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}