{"ast":null,"code":"'use client';\n\nimport React, { Children, cloneElement } from 'react';\nimport { getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Paper } from '../Paper/Paper.mjs';\nimport { CardProvider } from './Card.context.mjs';\nimport { CardSection } from './CardSection/CardSection.mjs';\nimport classes from './Card.module.css.mjs';\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((_, {\n  padding\n}) => ({\n  root: {\n    \"--card-padding\": getSpacing(padding)\n  }\n}));\nconst Card = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Card\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    padding,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Card\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const _children = Children.toArray(children);\n  const content = _children.map((child, index) => {\n    if (typeof child === \"object\" && child && \"type\" in child && child.type === CardSection) {\n      return cloneElement(child, {\n        \"data-first-section\": index === 0 || void 0,\n        \"data-last-section\": index === _children.length - 1 || void 0\n      });\n    }\n    return child;\n  });\n  return /* @__PURE__ */React.createElement(CardProvider, {\n    value: {\n      getStyles\n    }\n  }, /* @__PURE__ */React.createElement(Paper, {\n    ref,\n    unstyled,\n    ...getStyles(\"root\"),\n    ...others\n  }, content));\n});\nCard.classes = classes;\nCard.displayName = \"@mantine/core/Card\";\nCard.Section = CardSection;\nexport { Card };","map":{"version":3,"names":["defaultProps","varsResolver","createVarsResolver","_","padding","root","getSpacing","Card","polymorphicFactory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","children","others","getStyles","useStyles","name","classes","_children","Children","toArray","content","map","child","index","type","CardSection","cloneElement","length","React","createElement","CardProvider","value","Paper","displayName","Section"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Card/Card.tsx"],"sourcesContent":["import React, { Children, cloneElement } from 'react';\nimport {\n  BoxProps,\n  createVarsResolver,\n  getSpacing,\n  MantineRadius,\n  MantineShadow,\n  MantineSpacing,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { Paper } from '../Paper';\nimport { CardProvider } from './Card.context';\nimport { CardSection } from './CardSection/CardSection';\nimport classes from './Card.module.css';\n\nexport type CardStylesNames = 'root' | 'section';\nexport type CardCssVariables = {\n  root: '--card-padding';\n};\n\nexport interface CardProps extends BoxProps, StylesApiProps<CardFactory> {\n  /** Key of `theme.shadows` or any valid CSS value to set `box-shadow`, `none` by default */\n  shadow?: MantineShadow;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Determines whether the card should have border, border color depends on color scheme, `false` by default */\n  withBorder?: boolean;\n\n  /** Controls `padding`, key of `theme.spacing` or any valid CSS value, `'md'` by default */\n  padding?: MantineSpacing;\n\n  /** Card content */\n  children?: React.ReactNode;\n}\n\nexport type CardFactory = PolymorphicFactory<{\n  props: CardProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: CardStylesNames;\n  vars: CardCssVariables;\n  staticComponents: {\n    Section: typeof CardSection;\n  };\n}>;\n\nconst defaultProps: Partial<CardProps> = {};\n\nconst varsResolver = createVarsResolver<CardFactory>((_, { padding }) => ({\n  root: {\n    '--card-padding': getSpacing(padding),\n  },\n}));\n\nexport const Card = polymorphicFactory<CardFactory>((_props, ref) => {\n  const props = useProps('Card', defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, children, padding, ...others } =\n    props;\n\n  const getStyles = useStyles<CardFactory>({\n    name: 'Card',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const _children = Children.toArray(children);\n  const content = _children.map((child, index) => {\n    if (typeof child === 'object' && child && 'type' in child && child.type === CardSection) {\n      return cloneElement(child, {\n        'data-first-section': index === 0 || undefined,\n        'data-last-section': index === _children.length - 1 || undefined,\n      });\n    }\n\n    return child;\n  });\n\n  return (\n    <CardProvider value={{ getStyles }}>\n      <Paper ref={ref} unstyled={unstyled} {...getStyles('root')} {...others}>\n        {content}\n      </Paper>\n    </CardProvider>\n  );\n});\n\nCard.classes = classes;\nCard.displayName = '@mantine/core/Card';\nCard.Section = CardSection;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAaA,MAAMA,YAAY,GAAG,EAAE;AACvB,MAAMC,YAAY,GAAGC,kBAAkB,CAAC,CAACC,CAAC,EAAE;EAAEC;AAAO,CAAE,MAAM;EAC3DC,IAAI,EAAE;IACJ,gBAAgB,EAAEC,UAAU,CAACF,OAAO;EACrC;AACH,CAAC,CAAC,CAAC;AACS,MAACG,IAAI,GAAGC,kBAAkB,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EACtD,MAAMC,KAAK,GAAGC,QAAQ,CAAC,MAAM,EAAEZ,YAAY,EAAES,MAAM,CAAC;EACpD,MAAM;IAAEI,UAAU;IAAEC,SAAS;IAAEC,KAAK;IAAEC,MAAM;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,QAAQ;IAAEf,OAAO;IAAE,GAAGgB;EAAM,CAAE,GAAGT,KAAK;EACpG,MAAMU,SAAS,GAAGC,SAAS,CAAC;IAC1BC,IAAI,EAAE,MAAM;IACZZ,KAAK;IACLa,OAAO;IACPV,SAAS;IACTC,KAAK;IACLF,UAAU;IACVG,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJjB;EACJ,CAAG,CAAC;EACF,MAAMwB,SAAS,GAAGC,QAAQ,CAACC,OAAO,CAACR,QAAQ,CAAC;EAC5C,MAAMS,OAAO,GAAGH,SAAS,CAACI,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC9C,IAAI,OAAOD,KAAK,KAAK,QAAQ,IAAIA,KAAK,IAAI,MAAM,IAAIA,KAAK,IAAIA,KAAK,CAACE,IAAI,KAAKC,WAAW,EAAE;MACvF,OAAOC,YAAY,CAACJ,KAAK,EAAE;QACzB,oBAAoB,EAAEC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC;QAC3C,mBAAmB,EAAEA,KAAK,KAAKN,SAAS,CAACU,MAAM,GAAG,CAAC,IAAI,KAAK;MACpE,CAAO,CAAC;IACH;IACD,OAAOL,KAAK;EAChB,CAAG,CAAC;EACF,sBAAuBM,KAAK,CAACC,aAAa,CAACC,YAAY,EAAE;IAAEC,KAAK,EAAE;MAAElB;IAAS;EAAE,CAAE,EAAkB,eAAAe,KAAK,CAACC,aAAa,CAACG,KAAK,EAAE;IAAE9B,GAAG;IAAEO,QAAQ;IAAE,GAAGI,SAAS,CAAC,MAAM,CAAC;IAAE,GAAGD;EAAM,CAAE,EAAEQ,OAAO,CAAC,CAAC;AAC7L,CAAC,CAAE;AACHrB,IAAI,CAACiB,OAAO,GAAGA,OAAO;AACtBjB,IAAI,CAACkC,WAAW,GAAG,oBAAoB;AACvClC,IAAI,CAACmC,OAAO,GAAGT,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}