{"ast":null,"code":"'use client';\n\nimport { createContext, useContext } from 'react';\nconst MantineContext = createContext(null);\nfunction useMantineContext() {\n  const ctx = useContext(MantineContext);\n  if (!ctx) {\n    throw new Error(\"[@mantine/core] MantineProvider was not found in tree\");\n  }\n  return ctx;\n}\nfunction useMantineCssVariablesResolver() {\n  return useMantineContext().cssVariablesResolver;\n}\nfunction useMantineClassNamesPrefix() {\n  return useMantineContext().classNamesPrefix;\n}\nfunction useMantineStyleNonce() {\n  return useMantineContext().getStyleNonce;\n}\nexport { MantineContext, useMantineClassNamesPrefix, useMantineContext, useMantineCssVariablesResolver, useMantineStyleNonce };","map":{"version":3,"names":["MantineContext","createContext","useMantineContext","ctx","useContext","Error","useMantineCssVariablesResolver","cssVariablesResolver","useMantineClassNamesPrefix","classNamesPrefix","useMantineStyleNonce","getStyleNonce"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/core/MantineProvider/Mantine.context.ts"],"sourcesContent":["import { createContext, useContext } from 'react';\nimport type { MantineColorSchemeManager } from './color-scheme-managers';\nimport { ConvertCSSVariablesInput } from './convert-css-variables';\nimport type { MantineColorScheme, MantineTheme } from './theme.types';\n\ninterface MantineContextValue {\n  colorScheme: MantineColorScheme;\n  setColorScheme: (colorScheme: MantineColorScheme) => void;\n  clearColorScheme: () => void;\n  colorSchemeManager: MantineColorSchemeManager;\n  getRootElement: () => HTMLElement | undefined;\n  classNamesPrefix: string;\n  getStyleNonce?: () => string | undefined;\n  cssVariablesResolver?: (theme: MantineTheme) => ConvertCSSVariablesInput;\n  cssVariablesSelector: string;\n}\n\nexport const MantineContext = createContext<MantineContextValue | null>(null);\n\nexport function useMantineContext() {\n  const ctx = useContext(MantineContext);\n\n  if (!ctx) {\n    throw new Error('[@mantine/core] MantineProvider was not found in tree');\n  }\n\n  return ctx;\n}\n\nexport function useMantineCssVariablesResolver() {\n  return useMantineContext().cssVariablesResolver;\n}\n\nexport function useMantineClassNamesPrefix() {\n  return useMantineContext().classNamesPrefix;\n}\n\nexport function useMantineStyleNonce() {\n  return useMantineContext().getStyleNonce;\n}\n"],"mappings":";;;AAEY,MAACA,cAAc,GAAGC,aAAa,CAAC,IAAI,CAAE;AAC3C,SAASC,iBAAiBA,CAAA,EAAG;EAClC,MAAMC,GAAG,GAAGC,UAAU,CAACJ,cAAc,CAAC;EACtC,IAAI,CAACG,GAAG,EAAE;IACR,MAAM,IAAIE,KAAK,CAAC,uDAAuD,CAAC;EACzE;EACD,OAAOF,GAAG;AACZ;AACO,SAASG,8BAA8BA,CAAA,EAAG;EAC/C,OAAOJ,iBAAiB,CAAE,EAACK,oBAAoB;AACjD;AACO,SAASC,0BAA0BA,CAAA,EAAG;EAC3C,OAAON,iBAAiB,CAAE,EAACO,gBAAgB;AAC7C;AACO,SAASC,oBAAoBA,CAAA,EAAG;EACrC,OAAOR,iBAAiB,CAAE,EAACS,aAAa;AAC1C"},"metadata":{},"sourceType":"module","externalDependencies":[]}