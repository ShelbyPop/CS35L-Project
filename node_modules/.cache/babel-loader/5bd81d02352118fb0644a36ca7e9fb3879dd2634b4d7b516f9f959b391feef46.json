{"ast":null,"code":"'use client';\n\nimport React, { forwardRef } from 'react';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport { getDefaultZIndex } from '../../core/utils/get-default-z-index/get-default-z-index.mjs';\nimport { getShadow, getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../Portal/Portal.mjs';\nimport { OptionalPortal } from '../Portal/OptionalPortal.mjs';\nimport { ModalBaseProvider } from './ModalBase.context.mjs';\nimport { useModal } from './use-modal.mjs';\nconst ModalBase = forwardRef(({\n  keepMounted,\n  opened,\n  onClose,\n  id,\n  transitionProps,\n  trapFocus,\n  closeOnEscape,\n  returnFocus,\n  closeOnClickOutside,\n  withinPortal,\n  portalProps,\n  lockScroll,\n  children,\n  zIndex,\n  shadow,\n  padding,\n  __vars,\n  unstyled,\n  removeScrollProps,\n  ...others\n}, ref) => {\n  const {\n    _id,\n    titleMounted,\n    bodyMounted,\n    shouldLockScroll,\n    setTitleMounted,\n    setBodyMounted\n  } = useModal({\n    id,\n    transitionProps,\n    opened,\n    trapFocus,\n    closeOnEscape,\n    onClose,\n    returnFocus\n  });\n  return /* @__PURE__ */React.createElement(OptionalPortal, {\n    ...portalProps,\n    withinPortal\n  }, /* @__PURE__ */React.createElement(ModalBaseProvider, {\n    value: {\n      opened,\n      onClose,\n      closeOnClickOutside,\n      transitionProps: {\n        ...transitionProps,\n        keepMounted\n      },\n      getTitleId: () => `${_id}-title`,\n      getBodyId: () => `${_id}-body`,\n      titleMounted,\n      bodyMounted,\n      setTitleMounted,\n      setBodyMounted,\n      trapFocus,\n      closeOnEscape,\n      zIndex,\n      unstyled\n    }\n  }, /* @__PURE__ */React.createElement(RemoveScroll, {\n    enabled: shouldLockScroll && lockScroll,\n    ...removeScrollProps\n  }, /* @__PURE__ */React.createElement(Box, {\n    ref,\n    ...others,\n    __vars: {\n      ...__vars,\n      \"--mb-z-index\": (zIndex || getDefaultZIndex(\"modal\")).toString(),\n      \"--mb-shadow\": getShadow(shadow),\n      \"--mb-padding\": getSpacing(padding)\n    }\n  }, children))));\n});\nexport { ModalBase };","map":{"version":3,"names":["ModalBase","forwardRef","keepMounted","opened","onClose","id","transitionProps","trapFocus","closeOnEscape","returnFocus","closeOnClickOutside","withinPortal","portalProps","lockScroll","children","zIndex","shadow","padding","__vars","unstyled","removeScrollProps","others","ref","_id","titleMounted","bodyMounted","shouldLockScroll","setTitleMounted","setBodyMounted","useModal","React","createElement","OptionalPortal","ModalBaseProvider","value","getTitleId","getBodyId","RemoveScroll","enabled","Box","getDefaultZIndex","toString","getShadow","getSpacing"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/ModalBase/ModalBase.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  getDefaultZIndex,\n  getShadow,\n  getSpacing,\n  MantineShadow,\n  MantineSize,\n  MantineSpacing,\n} from '../../core';\nimport { OptionalPortal, PortalProps } from '../Portal';\nimport { TransitionOverride } from '../Transition';\nimport { ModalBaseProvider } from './ModalBase.context';\nimport { useModal } from './use-modal';\n\ntype RemoveScrollProps = Omit<React.ComponentProps<typeof RemoveScroll>, 'children'>;\n\nexport interface ModalBaseProps extends BoxProps, ElementProps<'div', 'title'> {\n  unstyled?: boolean;\n\n  /** If set modal/drawer will not be unmounted from the DOM when it is hidden, `display: none` styles will be added instead, `false` by default */\n  keepMounted?: boolean;\n\n  /** Determines whether modal/drawer is opened */\n  opened: boolean;\n\n  /** Called when modal/drawer is closed */\n  onClose: () => void;\n\n  /** Id used to connect modal/drawer with body and title */\n  id?: string;\n\n  /** Determines whether scroll should be locked when `opened={true}`, `true` by default */\n  lockScroll?: boolean;\n\n  /** Determines whether focus should be trapped, `true` by default */\n  trapFocus?: boolean;\n\n  /** Determines whether the component should be rendered inside `Portal`, `true` by default */\n  withinPortal?: boolean;\n\n  /** Props passed down to the Portal component when `withinPortal` is set */\n  portalProps?: Omit<PortalProps, 'children'>;\n\n  /** Modal/drawer content */\n  children?: React.ReactNode;\n\n  /** Determines whether the modal/drawer should be closed when user clicks on the overlay, `true` by default */\n  closeOnClickOutside?: boolean;\n\n  /** Props added to the `Transition` component that used to animate overlay and body, use to configure duration and animation type, `{ duration: 200, transition: 'pop' }` by default */\n  transitionProps?: TransitionOverride;\n\n  /** Determines whether `onClose` should be called when user presses the escape key, `true` by default */\n  closeOnEscape?: boolean;\n\n  /** Determines whether focus should be returned to the last active element when `onClose` is called, `true` by default */\n  returnFocus?: boolean;\n\n  /** `z-index` CSS property of the root element, `200` by default */\n  zIndex?: string | number;\n\n  /** Key of `theme.shadows` or any valid CSS box-shadow value, 'xl' by default */\n  shadow?: MantineShadow;\n\n  /** Key of `theme.spacing` or any valid CSS value to set content, header and footer padding, `'md'` by default */\n  padding?: MantineSpacing;\n\n  /** Controls width of the content area, `'md'` by default */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Props passed down to react-remove-scroll, can be used to customize scroll lock behavior */\n  removeScrollProps?: RemoveScrollProps;\n}\n\nexport const ModalBase = forwardRef<HTMLDivElement, ModalBaseProps>(\n  (\n    {\n      keepMounted,\n      opened,\n      onClose,\n      id,\n      transitionProps,\n      trapFocus,\n      closeOnEscape,\n      returnFocus,\n      closeOnClickOutside,\n      withinPortal,\n      portalProps,\n      lockScroll,\n      children,\n      zIndex,\n      shadow,\n      padding,\n      __vars,\n      unstyled,\n      removeScrollProps,\n      ...others\n    },\n    ref\n  ) => {\n    const { _id, titleMounted, bodyMounted, shouldLockScroll, setTitleMounted, setBodyMounted } =\n      useModal({ id, transitionProps, opened, trapFocus, closeOnEscape, onClose, returnFocus });\n\n    return (\n      <OptionalPortal {...portalProps} withinPortal={withinPortal}>\n        <ModalBaseProvider\n          value={{\n            opened,\n            onClose,\n            closeOnClickOutside,\n            transitionProps: { ...transitionProps, keepMounted },\n            getTitleId: () => `${_id}-title`,\n            getBodyId: () => `${_id}-body`,\n            titleMounted,\n            bodyMounted,\n            setTitleMounted,\n            setBodyMounted,\n            trapFocus,\n            closeOnEscape,\n            zIndex,\n            unstyled,\n          }}\n        >\n          <RemoveScroll enabled={shouldLockScroll && lockScroll} {...removeScrollProps}>\n            <Box\n              ref={ref}\n              {...others}\n              __vars={{\n                ...__vars,\n                '--mb-z-index': (zIndex || getDefaultZIndex('modal')).toString(),\n                '--mb-shadow': getShadow(shadow),\n                '--mb-padding': getSpacing(padding),\n              }}\n            >\n              {children}\n            </Box>\n          </RemoveScroll>\n        </ModalBaseProvider>\n      </OptionalPortal>\n    );\n  }\n);\n"],"mappings":";;;;;;;;;;;;;;;;;;AAYY,MAACA,SAAS,GAAGC,UAAU,CACjC,CAAC;EACCC,WAAW;EACXC,MAAM;EACNC,OAAO;EACPC,EAAE;EACFC,eAAe;EACfC,SAAS;EACTC,aAAa;EACbC,WAAW;EACXC,mBAAmB;EACnBC,YAAY;EACZC,WAAW;EACXC,UAAU;EACVC,QAAQ;EACRC,MAAM;EACNC,MAAM;EACNC,OAAO;EACPC,MAAM;EACNC,QAAQ;EACRC,iBAAiB;EACjB,GAAGC;AACJ,GAAEC,GAAG,KAAK;EACT,MAAM;IAAEC,GAAG;IAAEC,YAAY;IAAEC,WAAW;IAAEC,gBAAgB;IAAEC,eAAe;IAAEC;EAAc,CAAE,GAAGC,QAAQ,CAAC;IAAExB,EAAE;IAAEC,eAAe;IAAEH,MAAM;IAAEI,SAAS;IAAEC,aAAa;IAAEJ,OAAO;IAAEK;EAAW,CAAE,CAAC;EACvL,sBAAuBqB,KAAK,CAACC,aAAa,CAACC,cAAc,EAAE;IAAE,GAAGpB,WAAW;IAAED;EAAY,CAAE,EAAkB,eAAAmB,KAAK,CAACC,aAAa,CAC9HE,iBAAiB,EACjB;IACEC,KAAK,EAAE;MACL/B,MAAM;MACNC,OAAO;MACPM,mBAAmB;MACnBJ,eAAe,EAAE;QAAE,GAAGA,eAAe;QAAEJ;MAAa;MACpDiC,UAAU,EAAEA,CAAA,KAAO,GAAEZ,GAAI,QAAO;MAChCa,SAAS,EAAEA,CAAA,KAAO,GAAEb,GAAI,OAAM;MAC9BC,YAAY;MACZC,WAAW;MACXE,eAAe;MACfC,cAAc;MACdrB,SAAS;MACTC,aAAa;MACbO,MAAM;MACNI;IACD;EACF,GACP,eAAsBW,KAAK,CAACC,aAAa,CAACM,YAAY,EAAE;IAAEC,OAAO,EAAEZ,gBAAgB,IAAIb,UAAU;IAAE,GAAGO;EAAiB,CAAE,EAAkB,eAAAU,KAAK,CAACC,aAAa,CACtJQ,GAAG,EACH;IACEjB,GAAG;IACH,GAAGD,MAAM;IACTH,MAAM,EAAE;MACN,GAAGA,MAAM;MACT,cAAc,EAAE,CAACH,MAAM,IAAIyB,gBAAgB,CAAC,OAAO,CAAC,EAAEC,QAAQ,CAAE;MAChE,aAAa,EAAEC,SAAS,CAAC1B,MAAM,CAAC;MAChC,cAAc,EAAE2B,UAAU,CAAC1B,OAAO;IACnC;EACF,GACDH,QACR,CAAO,CACP,CAAK,CAAC;AACH,CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}