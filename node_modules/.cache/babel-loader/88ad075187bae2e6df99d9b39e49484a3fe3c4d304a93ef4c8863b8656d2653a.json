{"ast":null,"code":"'use client';\n\nimport 'react';\nimport { createSafeContext } from '../../core/utils/create-safe-context/create-safe-context.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nconst [MenuContextProvider, useMenuContext] = createSafeContext(\"Menu component was not found in the tree\");\nexport { MenuContextProvider, useMenuContext };","map":{"version":3,"names":["MenuContextProvider","useMenuContext","createSafeContext"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Menu/Menu.context.ts"],"sourcesContent":["import { createSafeContext, GetStylesApi } from '../../core';\nimport type { MenuFactory } from './Menu';\n\ninterface MenuContext {\n  toggleDropdown: () => void;\n  closeDropdownImmediately: () => void;\n  closeDropdown: () => void;\n  openDropdown: () => void;\n  getItemIndex: (node: HTMLButtonElement) => number | null;\n  setHovered: (index: number | null) => void;\n  hovered: number | null;\n  closeOnItemClick: boolean | undefined;\n  loop: boolean | undefined;\n  trigger: 'click' | 'hover' | 'click-hover' | undefined;\n  opened: boolean;\n  unstyled: boolean | undefined;\n  getStyles: GetStylesApi<MenuFactory>;\n  menuItemTabIndex: -1 | 0 | undefined;\n  openedViaClick: boolean;\n  setOpenedViaClick: (value: boolean) => void;\n}\n\nexport const [MenuContextProvider, useMenuContext] = createSafeContext<MenuContext>(\n  'Menu component was not found in the tree'\n);\n"],"mappings":";;;;;;;;;;;;AAEY,MAAC,CAACA,mBAAmB,EAAEC,cAAc,CAAC,GAAGC,iBAAiB,CACpE,0CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}