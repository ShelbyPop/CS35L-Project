{"ast":null,"code":"'use client';\n\nimport React, { forwardRef } from 'react';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { useDirection } from '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { getArrowPositionStyles } from './get-arrow-position-styles.mjs';\nconst FloatingArrow = forwardRef(({\n  position,\n  arrowSize,\n  arrowOffset,\n  arrowRadius,\n  arrowPosition,\n  visible,\n  arrowX,\n  arrowY,\n  style,\n  ...others\n}, ref) => {\n  const {\n    dir\n  } = useDirection();\n  if (!visible) {\n    return null;\n  }\n  return /* @__PURE__ */React.createElement(\"div\", {\n    ...others,\n    ref,\n    style: {\n      ...style,\n      ...getArrowPositionStyles({\n        position,\n        arrowSize,\n        arrowOffset,\n        arrowRadius,\n        arrowPosition,\n        dir,\n        arrowX,\n        arrowY\n      })\n    }\n  });\n});\nFloatingArrow.displayName = \"@mantine/core/FloatingArrow\";\nexport { FloatingArrow };","map":{"version":3,"names":["FloatingArrow","forwardRef","position","arrowSize","arrowOffset","arrowRadius","arrowPosition","visible","arrowX","arrowY","style","others","ref","dir","useDirection","React","createElement","getArrowPositionStyles","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Floating/FloatingArrow/FloatingArrow.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { useDirection } from '../../../core';\nimport { ArrowPosition, FloatingPosition } from '../types';\nimport { getArrowPositionStyles } from './get-arrow-position-styles';\n\ninterface FloatingArrowProps extends React.ComponentPropsWithoutRef<'div'> {\n  position: FloatingPosition;\n  arrowSize: number;\n  arrowOffset: number;\n  arrowRadius: number;\n  arrowPosition: ArrowPosition;\n  arrowX: number | undefined;\n  arrowY: number | undefined;\n  visible: boolean | undefined;\n}\n\nexport const FloatingArrow = forwardRef<HTMLDivElement, FloatingArrowProps>(\n  (\n    {\n      position,\n      arrowSize,\n      arrowOffset,\n      arrowRadius,\n      arrowPosition,\n      visible,\n      arrowX,\n      arrowY,\n      style,\n      ...others\n    },\n    ref\n  ) => {\n    const { dir } = useDirection();\n    if (!visible) {\n      return null;\n    }\n\n    return (\n      <div\n        {...others}\n        ref={ref}\n        style={{\n          ...style,\n          ...getArrowPositionStyles({\n            position,\n            arrowSize,\n            arrowOffset,\n            arrowRadius,\n            arrowPosition,\n            dir,\n            arrowX,\n            arrowY,\n          }),\n        }}\n      />\n    );\n  }\n);\n\nFloatingArrow.displayName = '@mantine/core/FloatingArrow';\n"],"mappings":";;;;;;;;;;;;AAIY,MAACA,aAAa,GAAGC,UAAU,CACrC,CAAC;EACCC,QAAQ;EACRC,SAAS;EACTC,WAAW;EACXC,WAAW;EACXC,aAAa;EACbC,OAAO;EACPC,MAAM;EACNC,MAAM;EACNC,KAAK;EACL,GAAGC;AACJ,GAAEC,GAAG,KAAK;EACT,MAAM;IAAEC;EAAG,CAAE,GAAGC,YAAY,EAAE;EAC9B,IAAI,CAACP,OAAO,EAAE;IACZ,OAAO,IAAI;EACZ;EACD,sBAAuBQ,KAAK,CAACC,aAAa,CACxC,KAAK,EACL;IACE,GAAGL,MAAM;IACTC,GAAG;IACHF,KAAK,EAAE;MACL,GAAGA,KAAK;MACR,GAAGO,sBAAsB,CAAC;QACxBf,QAAQ;QACRC,SAAS;QACTC,WAAW;QACXC,WAAW;QACXC,aAAa;QACbO,GAAG;QACHL,MAAM;QACNC;MACZ,CAAW;IACF;EACF,CACP,CAAK;AACF,CACH,CAAE;AACFT,aAAa,CAACkB,WAAW,GAAG,6BAA6B"},"metadata":{},"sourceType":"module","externalDependencies":[]}