{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { filterProps } from '../../core/utils/filter-props/filter-props.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { InlineStyles } from '../../core/InlineStyles/InlineStyles.mjs';\nimport { parseStyleProps } from '../../core/Box/style-props/parse-style-props/parse-style-props.mjs';\nimport { useRandomClassName } from '../../core/Box/use-random-classname/use-random-classname.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { FLEX_STYLE_PROPS_DATA } from './flex-props.mjs';\nimport classes from './Flex.module.css.mjs';\nconst defaultProps = {};\nconst Flex = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Flex\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    gap,\n    rowGap,\n    columnGap,\n    align,\n    justify,\n    wrap,\n    direction,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Flex\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars\n  });\n  const theme = useMantineTheme();\n  const responsiveClassName = useRandomClassName();\n  const parsedStyleProps = parseStyleProps({\n    styleProps: {\n      gap,\n      rowGap,\n      columnGap,\n      align,\n      justify,\n      wrap,\n      direction\n    },\n    theme,\n    data: FLEX_STYLE_PROPS_DATA\n  });\n  return /* @__PURE__ */React.createElement(React.Fragment, null, parsedStyleProps.hasResponsiveStyles && /* @__PURE__ */React.createElement(InlineStyles, {\n    selector: `.${responsiveClassName}`,\n    styles: parsedStyleProps.styles,\n    media: parsedStyleProps.media\n  }), /* @__PURE__ */React.createElement(Box, {\n    ref,\n    ...getStyles(\"root\", {\n      className: responsiveClassName,\n      style: filterProps(parsedStyleProps.inlineStyles)\n    }),\n    ...others\n  }));\n});\nFlex.classes = classes;\nFlex.displayName = \"@mantine/core/Flex\";\nexport { Flex };","map":{"version":3,"names":["defaultProps","Flex","polymorphicFactory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","gap","rowGap","columnGap","align","justify","wrap","direction","others","getStyles","useStyles","name","classes","theme","useMantineTheme","responsiveClassName","useRandomClassName","parsedStyleProps","parseStyleProps","styleProps","data","FLEX_STYLE_PROPS_DATA","React","createElement","Fragment","hasResponsiveStyles","InlineStyles","selector","media","Box","filterProps","inlineStyles","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Flex/Flex.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  filterProps,\n  InlineStyles,\n  MantineSize,\n  parseStyleProps,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StyleProp,\n  StylesApiProps,\n  useMantineTheme,\n  useProps,\n  useRandomClassName,\n  useStyles,\n} from '../../core';\nimport { FLEX_STYLE_PROPS_DATA } from './flex-props';\nimport classes from './Flex.module.css';\n\nexport type FlexStylesNames = 'root';\n\nexport interface FlexProps extends BoxProps, StylesApiProps<FlexFactory>, ElementProps<'div'> {\n  /** `gap` CSS property */\n  gap?: StyleProp<MantineSize | (string & {}) | number>;\n\n  /** `row-gap` CSS property */\n  rowGap?: StyleProp<MantineSize | (string & {}) | number>;\n\n  /** `column-gap` CSS property */\n  columnGap?: StyleProp<MantineSize | (string & {}) | number>;\n\n  /** `align-items` CSS property */\n  align?: StyleProp<React.CSSProperties['alignItems']>;\n\n  /** `justify-content` CSS property */\n  justify?: StyleProp<React.CSSProperties['justifyContent']>;\n\n  /** `flex-wrap` CSS property */\n  wrap?: StyleProp<React.CSSProperties['flexWrap']>;\n\n  /** `flex-direction` CSS property */\n  direction?: StyleProp<React.CSSProperties['flexDirection']>;\n}\n\nexport type FlexFactory = PolymorphicFactory<{\n  props: FlexProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: FlexStylesNames;\n}>;\n\nconst defaultProps: Partial<FlexProps> = {};\n\nexport const Flex = polymorphicFactory<FlexFactory>((_props, ref) => {\n  const props = useProps('Flex', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    gap,\n    rowGap,\n    columnGap,\n    align,\n    justify,\n    wrap,\n    direction,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<FlexFactory>({\n    name: 'Flex',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n  });\n\n  const theme = useMantineTheme();\n  const responsiveClassName = useRandomClassName();\n  const parsedStyleProps = parseStyleProps({\n    styleProps: { gap, rowGap, columnGap, align, justify, wrap, direction },\n    theme,\n    data: FLEX_STYLE_PROPS_DATA,\n  });\n\n  return (\n    <>\n      {parsedStyleProps.hasResponsiveStyles && (\n        <InlineStyles\n          selector={`.${responsiveClassName}`}\n          styles={parsedStyleProps.styles}\n          media={parsedStyleProps.media}\n        />\n      )}\n      <Box\n        ref={ref}\n        {...getStyles('root', {\n          className: responsiveClassName,\n          style: filterProps(parsedStyleProps.inlineStyles),\n        })}\n        {...others}\n      />\n    </>\n  );\n});\n\nFlex.classes = classes;\nFlex.displayName = '@mantine/core/Flex';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAeA,MAAMA,YAAY,GAAG,EAAE;AACX,MAACC,IAAI,GAAGC,kBAAkB,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EACtD,MAAMC,KAAK,GAAGC,QAAQ,CAAC,MAAM,EAAEN,YAAY,EAAEG,MAAM,CAAC;EACpD,MAAM;IACJI,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJC,GAAG;IACHC,MAAM;IACNC,SAAS;IACTC,KAAK;IACLC,OAAO;IACPC,IAAI;IACJC,SAAS;IACT,GAAGC;EACJ,IAAGf,KAAK;EACT,MAAMgB,SAAS,GAAGC,SAAS,CAAC;IAC1BC,IAAI,EAAE,MAAM;IACZC,OAAO;IACPnB,KAAK;IACLG,SAAS;IACTC,KAAK;IACLF,UAAU;IACVG,MAAM;IACNC,QAAQ;IACRC;EACJ,CAAG,CAAC;EACF,MAAMa,KAAK,GAAGC,eAAe,EAAE;EAC/B,MAAMC,mBAAmB,GAAGC,kBAAkB,EAAE;EAChD,MAAMC,gBAAgB,GAAGC,eAAe,CAAC;IACvCC,UAAU,EAAE;MAAElB,GAAG;MAAEC,MAAM;MAAEC,SAAS;MAAEC,KAAK;MAAEC,OAAO;MAAEC,IAAI;MAAEC;IAAW;IACvEM,KAAK;IACLO,IAAI,EAAEC;EACV,CAAG,CAAC;EACF,sBAAuBC,KAAK,CAACC,aAAa,CAACD,KAAK,CAACE,QAAQ,EAAE,IAAI,EAAEP,gBAAgB,CAACQ,mBAAmB,IAAoB,eAAAH,KAAK,CAACC,aAAa,CAC1IG,YAAY,EACZ;IACEC,QAAQ,EAAG,IAAGZ,mBAAoB,EAAC;IACnCjB,MAAM,EAAEmB,gBAAgB,CAACnB,MAAM;IAC/B8B,KAAK,EAAEX,gBAAgB,CAACW;EACzB,CACF,kBAAkBN,KAAK,CAACC,aAAa,CACpCM,GAAG,EACH;IACErC,GAAG;IACH,GAAGiB,SAAS,CAAC,MAAM,EAAE;MACnBb,SAAS,EAAEmB,mBAAmB;MAC9BlB,KAAK,EAAEiC,WAAW,CAACb,gBAAgB,CAACc,YAAY;IACxD,CAAO,CAAC;IACF,GAAGvB;EACJ,CACL,CAAG,CAAC;AACJ,CAAC,CAAE;AACHnB,IAAI,CAACuB,OAAO,GAAGA,OAAO;AACtBvB,IAAI,CAAC2C,WAAW,GAAG,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}