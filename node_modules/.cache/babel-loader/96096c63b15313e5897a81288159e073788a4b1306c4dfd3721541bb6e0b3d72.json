{"ast":null,"code":"'use client';\n\nimport React, { forwardRef, useEffect } from 'react';\nimport { useMergedRef, useCallbackRef, useDebounceCallback } from '@mantine/hooks';\nimport { useScrollAreaContext } from '../ScrollArea.context.mjs';\nimport { useResizeObserver } from '../use-resize-observer.mjs';\nimport { composeEventHandlers } from '../utils/compose-event-handlers.mjs';\nimport { ScrollbarProvider } from './Scrollbar.context.mjs';\nconst Scrollbar = forwardRef((props, forwardedRef) => {\n  const {\n    sizes,\n    hasThumb,\n    onThumbChange,\n    onThumbPointerUp,\n    onThumbPointerDown,\n    onThumbPositionChange,\n    onDragScroll,\n    onWheelScroll,\n    onResize,\n    ...scrollbarProps\n  } = props;\n  const context = useScrollAreaContext();\n  const [scrollbar, setScrollbar] = React.useState(null);\n  const composeRefs = useMergedRef(forwardedRef, node => setScrollbar(node));\n  const rectRef = React.useRef(null);\n  const prevWebkitUserSelectRef = React.useRef(\"\");\n  const {\n    viewport\n  } = context;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const handleWheelScroll = useCallbackRef(onWheelScroll);\n  const handleThumbPositionChange = useCallbackRef(onThumbPositionChange);\n  const handleResize = useDebounceCallback(onResize, 10);\n  const handleDragScroll = event => {\n    if (rectRef.current) {\n      const x = event.clientX - rectRef.current.left;\n      const y = event.clientY - rectRef.current.top;\n      onDragScroll({\n        x,\n        y\n      });\n    }\n  };\n  useEffect(() => {\n    const handleWheel = event => {\n      const element = event.target;\n      const isScrollbarWheel = scrollbar?.contains(element);\n      if (isScrollbarWheel) handleWheelScroll(event, maxScrollPos);\n    };\n    document.addEventListener(\"wheel\", handleWheel, {\n      passive: false\n    });\n    return () => document.removeEventListener(\"wheel\", handleWheel, {\n      passive: false\n    });\n  }, [viewport, scrollbar, maxScrollPos, handleWheelScroll]);\n  useEffect(handleThumbPositionChange, [sizes, handleThumbPositionChange]);\n  useResizeObserver(scrollbar, handleResize);\n  useResizeObserver(context.content, handleResize);\n  return /* @__PURE__ */React.createElement(ScrollbarProvider, {\n    value: {\n      scrollbar,\n      hasThumb,\n      onThumbChange: useCallbackRef(onThumbChange),\n      onThumbPointerUp: useCallbackRef(onThumbPointerUp),\n      onThumbPositionChange: handleThumbPositionChange,\n      onThumbPointerDown: useCallbackRef(onThumbPointerDown)\n    }\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    ...scrollbarProps,\n    ref: composeRefs,\n    style: {\n      position: \"absolute\",\n      ...scrollbarProps.style\n    },\n    onPointerDown: composeEventHandlers(props.onPointerDown, event => {\n      const mainPointer = 0;\n      if (event.button === mainPointer) {\n        const element = event.target;\n        element.setPointerCapture(event.pointerId);\n        rectRef.current = scrollbar.getBoundingClientRect();\n        prevWebkitUserSelectRef.current = document.body.style.webkitUserSelect;\n        document.body.style.webkitUserSelect = \"none\";\n        handleDragScroll(event);\n      }\n    }),\n    onPointerMove: composeEventHandlers(props.onPointerMove, handleDragScroll),\n    onPointerUp: composeEventHandlers(props.onPointerUp, event => {\n      const element = event.target;\n      if (element.hasPointerCapture(event.pointerId)) {\n        element.releasePointerCapture(event.pointerId);\n      }\n      document.body.style.webkitUserSelect = prevWebkitUserSelectRef.current;\n      rectRef.current = null;\n    })\n  }));\n});\nexport { Scrollbar };","map":{"version":3,"names":["Scrollbar","forwardRef","props","forwardedRef","sizes","hasThumb","onThumbChange","onThumbPointerUp","onThumbPointerDown","onThumbPositionChange","onDragScroll","onWheelScroll","onResize","scrollbarProps","context","useScrollAreaContext","scrollbar","setScrollbar","React","useState","composeRefs","useMergedRef","node","rectRef","useRef","prevWebkitUserSelectRef","viewport","maxScrollPos","content","handleWheelScroll","useCallbackRef","handleThumbPositionChange","handleResize","useDebounceCallback","handleDragScroll","event","current","x","clientX","left","y","clientY","top","useEffect","handleWheel","element","target","isScrollbarWheel","contains","document","addEventListener","passive","removeEventListener","useResizeObserver","createElement","ScrollbarProvider","value","ref","style","position","onPointerDown","composeEventHandlers","mainPointer","button","setPointerCapture","pointerId","getBoundingClientRect","body","webkitUserSelect","onPointerMove","onPointerUp","hasPointerCapture","releasePointerCapture"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/ScrollArea/ScrollAreaScrollbar/Scrollbar.tsx"],"sourcesContent":["import React, { forwardRef, useEffect } from 'react';\nimport { useCallbackRef, useDebounceCallback, useMergedRef } from '@mantine/hooks';\nimport { useScrollAreaContext } from '../ScrollArea.context';\nimport { Sizes } from '../ScrollArea.types';\nimport { useResizeObserver } from '../use-resize-observer';\nimport { composeEventHandlers } from '../utils';\nimport { ScrollbarContextValue, ScrollbarProvider } from './Scrollbar.context';\n\nexport interface ScrollbarPrivateProps {\n  sizes: Sizes;\n  hasThumb: boolean;\n  onThumbChange: ScrollbarContextValue['onThumbChange'];\n  onThumbPointerUp: ScrollbarContextValue['onThumbPointerUp'];\n  onThumbPointerDown: ScrollbarContextValue['onThumbPointerDown'];\n  onThumbPositionChange: ScrollbarContextValue['onThumbPositionChange'];\n  onWheelScroll: (event: WheelEvent, maxScrollPos: number) => void;\n  onDragScroll: (pointerPos: { x: number; y: number }) => void;\n  onResize: () => void;\n}\n\ninterface ScrollbarProps\n  extends ScrollbarPrivateProps,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'onResize'> {}\n\nexport const Scrollbar = forwardRef<HTMLDivElement, ScrollbarProps>((props, forwardedRef) => {\n  const {\n    sizes,\n    hasThumb,\n    onThumbChange,\n    onThumbPointerUp,\n    onThumbPointerDown,\n    onThumbPositionChange,\n    onDragScroll,\n    onWheelScroll,\n    onResize,\n    ...scrollbarProps\n  } = props;\n  const context = useScrollAreaContext();\n  const [scrollbar, setScrollbar] = React.useState<HTMLDivElement | null>(null);\n  const composeRefs = useMergedRef(forwardedRef, (node) => setScrollbar(node));\n  const rectRef = React.useRef<ClientRect | null>(null);\n  const prevWebkitUserSelectRef = React.useRef<string>('');\n  const { viewport } = context;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const handleWheelScroll = useCallbackRef(onWheelScroll);\n  const handleThumbPositionChange = useCallbackRef(onThumbPositionChange);\n  const handleResize = useDebounceCallback(onResize, 10);\n\n  const handleDragScroll = (event: React.PointerEvent<HTMLElement>) => {\n    if (rectRef.current) {\n      const x = event.clientX - rectRef.current.left;\n      const y = event.clientY - rectRef.current.top;\n      onDragScroll({ x, y });\n    }\n  };\n\n  useEffect(() => {\n    const handleWheel = (event: WheelEvent) => {\n      const element = event.target as HTMLElement;\n      const isScrollbarWheel = scrollbar?.contains(element);\n      if (isScrollbarWheel) handleWheelScroll(event, maxScrollPos);\n    };\n    document.addEventListener('wheel', handleWheel, { passive: false });\n    return () => document.removeEventListener('wheel', handleWheel, { passive: false } as any);\n  }, [viewport, scrollbar, maxScrollPos, handleWheelScroll]);\n\n  useEffect(handleThumbPositionChange, [sizes, handleThumbPositionChange]);\n\n  useResizeObserver(scrollbar, handleResize);\n  useResizeObserver(context.content, handleResize);\n\n  return (\n    <ScrollbarProvider\n      value={{\n        scrollbar,\n        hasThumb,\n        onThumbChange: useCallbackRef(onThumbChange),\n        onThumbPointerUp: useCallbackRef(onThumbPointerUp),\n        onThumbPositionChange: handleThumbPositionChange,\n        onThumbPointerDown: useCallbackRef(onThumbPointerDown),\n      }}\n    >\n      <div\n        {...scrollbarProps}\n        ref={composeRefs}\n        style={{ position: 'absolute', ...scrollbarProps.style }}\n        onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n          const mainPointer = 0;\n          if (event.button === mainPointer) {\n            const element = event.target as HTMLElement;\n            element.setPointerCapture(event.pointerId);\n            rectRef.current = scrollbar!.getBoundingClientRect();\n            prevWebkitUserSelectRef.current = document.body.style.webkitUserSelect;\n            document.body.style.webkitUserSelect = 'none';\n            handleDragScroll(event);\n          }\n        })}\n        onPointerMove={composeEventHandlers(props.onPointerMove, handleDragScroll)}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          const element = event.target as HTMLElement;\n          if (element.hasPointerCapture(event.pointerId)) {\n            element.releasePointerCapture(event.pointerId);\n          }\n          document.body.style.webkitUserSelect = prevWebkitUserSelectRef.current;\n          rectRef.current = null;\n        })}\n      />\n    </ScrollbarProvider>\n  );\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}