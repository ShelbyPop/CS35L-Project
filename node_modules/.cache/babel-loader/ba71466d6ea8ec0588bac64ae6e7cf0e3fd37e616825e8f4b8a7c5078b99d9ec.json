{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport { getFontSize, getSize } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Popover } from '../Popover/Popover.mjs';\nimport '../Popover/PopoverDropdown/PopoverDropdown.mjs';\nimport '../Popover/PopoverTarget/PopoverTarget.mjs';\nimport { ComboboxProvider } from './Combobox.context.mjs';\nimport { ComboboxChevron } from './ComboboxChevron/ComboboxChevron.mjs';\nimport { ComboboxClearButton } from './ComboboxClearButton/ComboboxClearButton.mjs';\nimport { ComboboxDropdown } from './ComboboxDropdown/ComboboxDropdown.mjs';\nimport { ComboboxDropdownTarget } from './ComboboxDropdownTarget/ComboboxDropdownTarget.mjs';\nimport { ComboboxEmpty } from './ComboboxEmpty/ComboboxEmpty.mjs';\nimport { ComboboxEventsTarget } from './ComboboxEventsTarget/ComboboxEventsTarget.mjs';\nimport { ComboboxFooter } from './ComboboxFooter/ComboboxFooter.mjs';\nimport { ComboboxGroup } from './ComboboxGroup/ComboboxGroup.mjs';\nimport { ComboboxHeader } from './ComboboxHeader/ComboboxHeader.mjs';\nimport { ComboboxOption } from './ComboboxOption/ComboboxOption.mjs';\nimport { ComboboxOptions } from './ComboboxOptions/ComboboxOptions.mjs';\nimport { ComboboxSearch } from './ComboboxSearch/ComboboxSearch.mjs';\nimport { ComboboxTarget } from './ComboboxTarget/ComboboxTarget.mjs';\nimport { useCombobox } from './use-combobox/use-combobox.mjs';\nimport classes from './Combobox.module.css.mjs';\nconst defaultProps = {\n  keepMounted: true,\n  withinPortal: true,\n  resetSelectionOnOptionHover: false,\n  width: \"target\",\n  transitionProps: {\n    transition: \"fade\",\n    duration: 0\n  }\n};\nconst varsResolver = createVarsResolver((_, {\n  size,\n  dropdownPadding\n}) => ({\n  options: {\n    \"--combobox-option-fz\": getFontSize(size),\n    \"--combobox-option-padding\": getSize(size, \"combobox-option-padding\")\n  },\n  dropdown: {\n    \"--combobox-padding\": dropdownPadding === void 0 ? void 0 : rem(dropdownPadding),\n    \"--combobox-option-fz\": getFontSize(size),\n    \"--combobox-option-padding\": getSize(size, \"combobox-option-padding\")\n  }\n}));\nfunction Combobox(_props) {\n  const props = useProps(\"Combobox\", defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    children,\n    store: controlledStore,\n    vars,\n    onOptionSubmit,\n    onClose,\n    size,\n    dropdownPadding,\n    resetSelectionOnOptionHover,\n    __staticSelector,\n    readOnly,\n    ...others\n  } = props;\n  const uncontrolledStore = useCombobox();\n  const store = controlledStore || uncontrolledStore;\n  const getStyles = useStyles({\n    name: __staticSelector || \"Combobox\",\n    classes,\n    props,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const onDropdownClose = () => {\n    onClose?.();\n    store.closeDropdown();\n  };\n  return /* @__PURE__ */React.createElement(ComboboxProvider, {\n    value: {\n      getStyles,\n      store,\n      onOptionSubmit,\n      size,\n      resetSelectionOnOptionHover,\n      readOnly\n    }\n  }, /* @__PURE__ */React.createElement(Popover, {\n    opened: store.dropdownOpened,\n    ...others,\n    onClose: onDropdownClose,\n    withRoles: false,\n    unstyled\n  }, children));\n}\nconst extendCombobox = c => c;\nCombobox.extend = extendCombobox;\nCombobox.classes = classes;\nCombobox.displayName = \"@mantine/core/Combobox\";\nCombobox.Target = ComboboxTarget;\nCombobox.Dropdown = ComboboxDropdown;\nCombobox.Options = ComboboxOptions;\nCombobox.Option = ComboboxOption;\nCombobox.Search = ComboboxSearch;\nCombobox.Empty = ComboboxEmpty;\nCombobox.Chevron = ComboboxChevron;\nCombobox.Footer = ComboboxFooter;\nCombobox.Header = ComboboxHeader;\nCombobox.EventsTarget = ComboboxEventsTarget;\nCombobox.DropdownTarget = ComboboxDropdownTarget;\nCombobox.Group = ComboboxGroup;\nCombobox.ClearButton = ComboboxClearButton;\nexport { Combobox };","map":{"version":3,"names":["defaultProps","keepMounted","withinPortal","resetSelectionOnOptionHover","width","transitionProps","transition","duration","varsResolver","createVarsResolver","_","size","dropdownPadding","options","getFontSize","getSize","dropdown","rem","Combobox","_props","props","useProps","classNames","styles","unstyled","children","store","controlledStore","vars","onOptionSubmit","onClose","__staticSelector","readOnly","others","uncontrolledStore","useCombobox","getStyles","useStyles","name","classes","onDropdownClose","closeDropdown","React","createElement","ComboboxProvider","value","Popover","opened","dropdownOpened","withRoles","extendCombobox","c","extend","displayName","Target","ComboboxTarget","Dropdown","ComboboxDropdown","Options","ComboboxOptions","Option","ComboboxOption","Search","ComboboxSearch","Empty","ComboboxEmpty","Chevron","ComboboxChevron","Footer","ComboboxFooter","Header","ComboboxHeader","EventsTarget","ComboboxEventsTarget","DropdownTarget","ComboboxDropdownTarget","Group","ComboboxGroup","ClearButton","ComboboxClearButton"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Combobox/Combobox.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  createVarsResolver,\n  ExtendComponent,\n  Factory,\n  getFontSize,\n  getSize,\n  MantineSize,\n  MantineThemeComponent,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { __PopoverProps, Popover } from '../Popover';\nimport { ComboboxProvider } from './Combobox.context';\nimport { ComboboxChevron } from './ComboboxChevron/ComboboxChevron';\nimport { ComboboxClearButton } from './ComboboxClearButton/ComboboxClearButton';\nimport { ComboboxDropdown } from './ComboboxDropdown/ComboboxDropdown';\nimport { ComboboxDropdownTarget } from './ComboboxDropdownTarget/ComboboxDropdownTarget';\nimport { ComboboxEmpty } from './ComboboxEmpty/ComboboxEmpty';\nimport { ComboboxEventsTarget } from './ComboboxEventsTarget/ComboboxEventsTarget';\nimport { ComboboxFooter } from './ComboboxFooter/ComboboxFooter';\nimport { ComboboxGroup } from './ComboboxGroup/ComboboxGroup';\nimport { ComboboxHeader } from './ComboboxHeader/ComboboxHeader';\nimport { ComboboxOption, ComboboxOptionProps } from './ComboboxOption/ComboboxOption';\nimport { ComboboxOptions } from './ComboboxOptions/ComboboxOptions';\nimport { ComboboxSearch } from './ComboboxSearch/ComboboxSearch';\nimport { ComboboxTarget } from './ComboboxTarget/ComboboxTarget';\nimport { ComboboxStore, useCombobox } from './use-combobox/use-combobox';\nimport classes from './Combobox.module.css';\n\nexport type ComboboxStylesNames =\n  | 'options'\n  | 'dropdown'\n  | 'option'\n  | 'search'\n  | 'empty'\n  | 'footer'\n  | 'header'\n  | 'group'\n  | 'groupLabel';\n\nexport type ComboboxCSSVariables = {\n  options: '--combobox-option-fz' | '--combobox-option-padding';\n  dropdown: '--combobox-padding' | '--combobox-option-fz' | '--combobox-option-padding';\n};\n\nexport interface ComboboxProps extends __PopoverProps, StylesApiProps<ComboboxFactory> {\n  __staticSelector?: string;\n\n  /** Combobox content */\n  children?: React.ReactNode;\n\n  /** Combobox store, can be used to control combobox state */\n  store?: ComboboxStore;\n\n  /** Called when item is selected with `Enter` key or by clicking it */\n  onOptionSubmit?: (value: string, optionProps: ComboboxOptionProps) => void;\n\n  /** Controls items `font-size` and `padding`, `'sm'` by default */\n  size?: MantineSize | (string & {});\n\n  /** Controls `padding` of the dropdown, `4` by default */\n  dropdownPadding?: React.CSSProperties['padding'];\n\n  /** Determines whether selection should be reset when option is hovered, `false` by default */\n  resetSelectionOnOptionHover?: boolean;\n\n  /** Determines whether Combobox value can be changed */\n  readOnly?: boolean;\n}\n\nexport type ComboboxFactory = Factory<{\n  props: ComboboxProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxStylesNames;\n  vars: ComboboxCSSVariables;\n  staticComponents: {\n    Target: typeof ComboboxTarget;\n    Dropdown: typeof ComboboxDropdown;\n    Options: typeof ComboboxOptions;\n    Option: typeof ComboboxOption;\n    Search: typeof ComboboxSearch;\n    Empty: typeof ComboboxEmpty;\n    Chevron: typeof ComboboxChevron;\n    Footer: typeof ComboboxFooter;\n    Header: typeof ComboboxHeader;\n    EventsTarget: typeof ComboboxEventsTarget;\n    DropdownTarget: typeof ComboboxDropdownTarget;\n    Group: typeof ComboboxGroup;\n  };\n}>;\n\nconst defaultProps: Partial<ComboboxProps> = {\n  keepMounted: true,\n  withinPortal: true,\n  resetSelectionOnOptionHover: false,\n  width: 'target',\n  transitionProps: { transition: 'fade', duration: 0 },\n};\n\nconst varsResolver = createVarsResolver<ComboboxFactory>((_, { size, dropdownPadding }) => ({\n  options: {\n    '--combobox-option-fz': getFontSize(size),\n    '--combobox-option-padding': getSize(size, 'combobox-option-padding'),\n  },\n\n  dropdown: {\n    '--combobox-padding': dropdownPadding === undefined ? undefined : rem(dropdownPadding),\n    '--combobox-option-fz': getFontSize(size),\n    '--combobox-option-padding': getSize(size, 'combobox-option-padding'),\n  },\n}));\n\nexport function Combobox(_props: ComboboxProps) {\n  const props = useProps('Combobox', defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    children,\n    store: controlledStore,\n    vars,\n    onOptionSubmit,\n    onClose,\n    size,\n    dropdownPadding,\n    resetSelectionOnOptionHover,\n    __staticSelector,\n    readOnly,\n    ...others\n  } = props;\n\n  const uncontrolledStore = useCombobox();\n  const store = controlledStore || uncontrolledStore;\n\n  const getStyles = useStyles<ComboboxFactory>({\n    name: __staticSelector || 'Combobox',\n    classes,\n    props,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const onDropdownClose = () => {\n    onClose?.();\n    store.closeDropdown();\n  };\n\n  return (\n    <ComboboxProvider\n      value={{\n        getStyles,\n        store,\n        onOptionSubmit,\n        size: size!,\n        resetSelectionOnOptionHover,\n        readOnly,\n      }}\n    >\n      <Popover\n        opened={store.dropdownOpened}\n        {...others}\n        onClose={onDropdownClose}\n        withRoles={false}\n        unstyled={unstyled}\n      >\n        {children}\n      </Popover>\n    </ComboboxProvider>\n  );\n}\n\nconst extendCombobox = (c: ExtendComponent<ComboboxFactory>): MantineThemeComponent => c;\n\nCombobox.extend = extendCombobox;\nCombobox.classes = classes;\nCombobox.displayName = '@mantine/core/Combobox';\nCombobox.Target = ComboboxTarget;\nCombobox.Dropdown = ComboboxDropdown;\nCombobox.Options = ComboboxOptions;\nCombobox.Option = ComboboxOption;\nCombobox.Search = ComboboxSearch;\nCombobox.Empty = ComboboxEmpty;\nCombobox.Chevron = ComboboxChevron;\nCombobox.Footer = ComboboxFooter;\nCombobox.Header = ComboboxHeader;\nCombobox.EventsTarget = ComboboxEventsTarget;\nCombobox.DropdownTarget = ComboboxDropdownTarget;\nCombobox.Group = ComboboxGroup;\nCombobox.ClearButton = ComboboxClearButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}