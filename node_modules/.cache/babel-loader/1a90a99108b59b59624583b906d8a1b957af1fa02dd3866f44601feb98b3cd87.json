{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport * as React from 'react';\nimport useLatest from 'use-latest';\nimport useComposedRef from 'use-composed-ref';\nvar HIDDEN_TEXTAREA_STYLE = {\n  'min-height': '0',\n  'max-height': 'none',\n  height: '0',\n  visibility: 'hidden',\n  overflow: 'hidden',\n  position: 'absolute',\n  'z-index': '-1000',\n  top: '0',\n  right: '0'\n};\nvar forceHiddenStyles = function forceHiddenStyles(node) {\n  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function (key) {\n    node.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], 'important');\n  });\n};\nvar forceHiddenStyles$1 = forceHiddenStyles;\n\n// TODO: use labelled tuples once they are avaiable:\n//   export type CalculatedNodeHeights = [height: number, rowHeight: number];\n// https://github.com/microsoft/TypeScript/issues/28259\n\nvar hiddenTextarea = null;\nvar getHeight = function getHeight(node, sizingData) {\n  var height = node.scrollHeight;\n  if (sizingData.sizingStyle.boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    return height + sizingData.borderSize;\n  }\n\n  // remove padding, since height = content\n  return height - sizingData.paddingSize;\n};\nfunction calculateNodeHeight(sizingData, value, minRows, maxRows) {\n  if (minRows === void 0) {\n    minRows = 1;\n  }\n  if (maxRows === void 0) {\n    maxRows = Infinity;\n  }\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    hiddenTextarea.setAttribute('tabindex', '-1');\n    hiddenTextarea.setAttribute('aria-hidden', 'true');\n    forceHiddenStyles$1(hiddenTextarea);\n  }\n  if (hiddenTextarea.parentNode === null) {\n    document.body.appendChild(hiddenTextarea);\n  }\n  var paddingSize = sizingData.paddingSize,\n    borderSize = sizingData.borderSize,\n    sizingStyle = sizingData.sizingStyle;\n  var boxSizing = sizingStyle.boxSizing;\n  Object.keys(sizingStyle).forEach(function (_key) {\n    var key = _key;\n    hiddenTextarea.style[key] = sizingStyle[key];\n  });\n  forceHiddenStyles$1(hiddenTextarea);\n  hiddenTextarea.value = value;\n  var height = getHeight(hiddenTextarea, sizingData);\n  // Double set and calc due to Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1795904\n  hiddenTextarea.value = value;\n  height = getHeight(hiddenTextarea, sizingData);\n\n  // measure height of a textarea with a single row\n  hiddenTextarea.value = 'x';\n  var rowHeight = hiddenTextarea.scrollHeight - paddingSize;\n  var minHeight = rowHeight * minRows;\n  if (boxSizing === 'border-box') {\n    minHeight = minHeight + paddingSize + borderSize;\n  }\n  height = Math.max(minHeight, height);\n  var maxHeight = rowHeight * maxRows;\n  if (boxSizing === 'border-box') {\n    maxHeight = maxHeight + paddingSize + borderSize;\n  }\n  height = Math.min(maxHeight, height);\n  return [height, rowHeight];\n}\nvar noop = function noop() {};\nvar pick = function pick(props, obj) {\n  return props.reduce(function (acc, prop) {\n    acc[prop] = obj[prop];\n    return acc;\n  }, {});\n};\nvar SIZING_STYLE = ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'boxSizing', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'lineHeight', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop',\n// non-standard\n'tabSize', 'textIndent',\n// non-standard\n'textRendering', 'textTransform', 'width', 'wordBreak'];\nvar isIE = !!document.documentElement.currentStyle;\nvar getSizingData = function getSizingData(node) {\n  var style = window.getComputedStyle(node);\n  if (style === null) {\n    return null;\n  }\n  var sizingStyle = pick(SIZING_STYLE, style);\n  var boxSizing = sizingStyle.boxSizing;\n\n  // probably node is detached from DOM, can't read computed dimensions\n  if (boxSizing === '') {\n    return null;\n  }\n\n  // IE (Edge has already correct behaviour) returns content width as computed width\n  // so we need to add manually padding and border widths\n  if (isIE && boxSizing === 'border-box') {\n    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(sizingStyle.borderRightWidth) + parseFloat(sizingStyle.borderLeftWidth) + parseFloat(sizingStyle.paddingRight) + parseFloat(sizingStyle.paddingLeft) + 'px';\n  }\n  var paddingSize = parseFloat(sizingStyle.paddingBottom) + parseFloat(sizingStyle.paddingTop);\n  var borderSize = parseFloat(sizingStyle.borderBottomWidth) + parseFloat(sizingStyle.borderTopWidth);\n  return {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize\n  };\n};\nvar getSizingData$1 = getSizingData;\nfunction useListener(target, type, listener) {\n  var latestListener = useLatest(listener);\n  React.useLayoutEffect(function () {\n    var handler = function handler(ev) {\n      return latestListener.current(ev);\n    };\n\n    // might happen if document.fonts is not defined, for instance\n    if (!target) {\n      return;\n    }\n    target.addEventListener(type, handler);\n    return function () {\n      return target.removeEventListener(type, handler);\n    };\n  }, []);\n}\nvar useWindowResizeListener = function useWindowResizeListener(listener) {\n  useListener(window, 'resize', listener);\n};\nvar useFontsLoadedListener = function useFontsLoadedListener(listener) {\n  useListener(document.fonts, 'loadingdone', listener);\n};\nvar _excluded = [\"cacheMeasurements\", \"maxRows\", \"minRows\", \"onChange\", \"onHeightChange\"];\nvar TextareaAutosize = function TextareaAutosize(_ref, userRef) {\n  var cacheMeasurements = _ref.cacheMeasurements,\n    maxRows = _ref.maxRows,\n    minRows = _ref.minRows,\n    _ref$onChange = _ref.onChange,\n    onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n    _ref$onHeightChange = _ref.onHeightChange,\n    onHeightChange = _ref$onHeightChange === void 0 ? noop : _ref$onHeightChange,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (props.style) {\n    if ('maxHeight' in props.style) {\n      throw new Error('Using `style.maxHeight` for <TextareaAutosize/> is not supported. Please use `maxRows`.');\n    }\n    if ('minHeight' in props.style) {\n      throw new Error('Using `style.minHeight` for <TextareaAutosize/> is not supported. Please use `minRows`.');\n    }\n  }\n  var isControlled = props.value !== undefined;\n  var libRef = React.useRef(null);\n  var ref = useComposedRef(libRef, userRef);\n  var heightRef = React.useRef(0);\n  var measurementsCacheRef = React.useRef();\n  var resizeTextarea = function resizeTextarea() {\n    var node = libRef.current;\n    var nodeSizingData = cacheMeasurements && measurementsCacheRef.current ? measurementsCacheRef.current : getSizingData$1(node);\n    if (!nodeSizingData) {\n      return;\n    }\n    measurementsCacheRef.current = nodeSizingData;\n    var _calculateNodeHeight = calculateNodeHeight(nodeSizingData, node.value || node.placeholder || 'x', minRows, maxRows),\n      height = _calculateNodeHeight[0],\n      rowHeight = _calculateNodeHeight[1];\n    if (heightRef.current !== height) {\n      heightRef.current = height;\n      node.style.setProperty('height', height + \"px\", 'important');\n      onHeightChange(height, {\n        rowHeight: rowHeight\n      });\n    }\n  };\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      resizeTextarea();\n    }\n    onChange(event);\n  };\n  {\n    React.useLayoutEffect(resizeTextarea);\n    useWindowResizeListener(resizeTextarea);\n    useFontsLoadedListener(resizeTextarea);\n    return /*#__PURE__*/React.createElement(\"textarea\", _extends({}, props, {\n      onChange: handleChange,\n      ref: ref\n    }));\n  }\n};\nvar index = /* #__PURE__ */React.forwardRef(TextareaAutosize);\nexport { index as default };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","React","useLatest","useComposedRef","HIDDEN_TEXTAREA_STYLE","height","visibility","overflow","position","top","right","forceHiddenStyles","node","Object","keys","forEach","key","style","setProperty","forceHiddenStyles$1","hiddenTextarea","getHeight","sizingData","scrollHeight","sizingStyle","boxSizing","borderSize","paddingSize","calculateNodeHeight","value","minRows","maxRows","Infinity","document","createElement","setAttribute","parentNode","body","appendChild","_key","rowHeight","minHeight","Math","max","maxHeight","min","noop","pick","props","obj","reduce","acc","prop","SIZING_STYLE","isIE","documentElement","currentStyle","getSizingData","window","getComputedStyle","width","parseFloat","borderRightWidth","borderLeftWidth","paddingRight","paddingLeft","paddingBottom","paddingTop","borderBottomWidth","borderTopWidth","getSizingData$1","useListener","target","type","listener","latestListener","useLayoutEffect","handler","ev","current","addEventListener","removeEventListener","useWindowResizeListener","useFontsLoadedListener","fonts","_excluded","TextareaAutosize","_ref","userRef","cacheMeasurements","_ref$onChange","onChange","_ref$onHeightChange","onHeightChange","Error","isControlled","undefined","libRef","useRef","ref","heightRef","measurementsCacheRef","resizeTextarea","nodeSizingData","_calculateNodeHeight","placeholder","handleChange","event","index","forwardRef","default"],"sources":["/Users/virounikamina/pompom/node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.development.esm.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport * as React from 'react';\nimport useLatest from 'use-latest';\nimport useComposedRef from 'use-composed-ref';\n\nvar HIDDEN_TEXTAREA_STYLE = {\n  'min-height': '0',\n  'max-height': 'none',\n  height: '0',\n  visibility: 'hidden',\n  overflow: 'hidden',\n  position: 'absolute',\n  'z-index': '-1000',\n  top: '0',\n  right: '0'\n};\nvar forceHiddenStyles = function forceHiddenStyles(node) {\n  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function (key) {\n    node.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], 'important');\n  });\n};\nvar forceHiddenStyles$1 = forceHiddenStyles;\n\n// TODO: use labelled tuples once they are avaiable:\n//   export type CalculatedNodeHeights = [height: number, rowHeight: number];\n// https://github.com/microsoft/TypeScript/issues/28259\n\nvar hiddenTextarea = null;\nvar getHeight = function getHeight(node, sizingData) {\n  var height = node.scrollHeight;\n  if (sizingData.sizingStyle.boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    return height + sizingData.borderSize;\n  }\n\n  // remove padding, since height = content\n  return height - sizingData.paddingSize;\n};\nfunction calculateNodeHeight(sizingData, value, minRows, maxRows) {\n  if (minRows === void 0) {\n    minRows = 1;\n  }\n  if (maxRows === void 0) {\n    maxRows = Infinity;\n  }\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    hiddenTextarea.setAttribute('tabindex', '-1');\n    hiddenTextarea.setAttribute('aria-hidden', 'true');\n    forceHiddenStyles$1(hiddenTextarea);\n  }\n  if (hiddenTextarea.parentNode === null) {\n    document.body.appendChild(hiddenTextarea);\n  }\n  var paddingSize = sizingData.paddingSize,\n    borderSize = sizingData.borderSize,\n    sizingStyle = sizingData.sizingStyle;\n  var boxSizing = sizingStyle.boxSizing;\n  Object.keys(sizingStyle).forEach(function (_key) {\n    var key = _key;\n    hiddenTextarea.style[key] = sizingStyle[key];\n  });\n  forceHiddenStyles$1(hiddenTextarea);\n  hiddenTextarea.value = value;\n  var height = getHeight(hiddenTextarea, sizingData);\n  // Double set and calc due to Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1795904\n  hiddenTextarea.value = value;\n  height = getHeight(hiddenTextarea, sizingData);\n\n  // measure height of a textarea with a single row\n  hiddenTextarea.value = 'x';\n  var rowHeight = hiddenTextarea.scrollHeight - paddingSize;\n  var minHeight = rowHeight * minRows;\n  if (boxSizing === 'border-box') {\n    minHeight = minHeight + paddingSize + borderSize;\n  }\n  height = Math.max(minHeight, height);\n  var maxHeight = rowHeight * maxRows;\n  if (boxSizing === 'border-box') {\n    maxHeight = maxHeight + paddingSize + borderSize;\n  }\n  height = Math.min(maxHeight, height);\n  return [height, rowHeight];\n}\n\nvar noop = function noop() {};\nvar pick = function pick(props, obj) {\n  return props.reduce(function (acc, prop) {\n    acc[prop] = obj[prop];\n    return acc;\n  }, {});\n};\n\nvar SIZING_STYLE = ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'boxSizing', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'lineHeight', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop',\n// non-standard\n'tabSize', 'textIndent',\n// non-standard\n'textRendering', 'textTransform', 'width', 'wordBreak'];\nvar isIE = !!document.documentElement.currentStyle ;\nvar getSizingData = function getSizingData(node) {\n  var style = window.getComputedStyle(node);\n  if (style === null) {\n    return null;\n  }\n  var sizingStyle = pick(SIZING_STYLE, style);\n  var boxSizing = sizingStyle.boxSizing;\n\n  // probably node is detached from DOM, can't read computed dimensions\n  if (boxSizing === '') {\n    return null;\n  }\n\n  // IE (Edge has already correct behaviour) returns content width as computed width\n  // so we need to add manually padding and border widths\n  if (isIE && boxSizing === 'border-box') {\n    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(sizingStyle.borderRightWidth) + parseFloat(sizingStyle.borderLeftWidth) + parseFloat(sizingStyle.paddingRight) + parseFloat(sizingStyle.paddingLeft) + 'px';\n  }\n  var paddingSize = parseFloat(sizingStyle.paddingBottom) + parseFloat(sizingStyle.paddingTop);\n  var borderSize = parseFloat(sizingStyle.borderBottomWidth) + parseFloat(sizingStyle.borderTopWidth);\n  return {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize\n  };\n};\nvar getSizingData$1 = getSizingData;\n\nfunction useListener(target, type, listener) {\n  var latestListener = useLatest(listener);\n  React.useLayoutEffect(function () {\n    var handler = function handler(ev) {\n      return latestListener.current(ev);\n    };\n\n    // might happen if document.fonts is not defined, for instance\n    if (!target) {\n      return;\n    }\n    target.addEventListener(type, handler);\n    return function () {\n      return target.removeEventListener(type, handler);\n    };\n  }, []);\n}\nvar useWindowResizeListener = function useWindowResizeListener(listener) {\n  useListener(window, 'resize', listener);\n};\nvar useFontsLoadedListener = function useFontsLoadedListener(listener) {\n  useListener(document.fonts, 'loadingdone', listener);\n};\n\nvar _excluded = [\"cacheMeasurements\", \"maxRows\", \"minRows\", \"onChange\", \"onHeightChange\"];\nvar TextareaAutosize = function TextareaAutosize(_ref, userRef) {\n  var cacheMeasurements = _ref.cacheMeasurements,\n    maxRows = _ref.maxRows,\n    minRows = _ref.minRows,\n    _ref$onChange = _ref.onChange,\n    onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n    _ref$onHeightChange = _ref.onHeightChange,\n    onHeightChange = _ref$onHeightChange === void 0 ? noop : _ref$onHeightChange,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (props.style) {\n    if ('maxHeight' in props.style) {\n      throw new Error('Using `style.maxHeight` for <TextareaAutosize/> is not supported. Please use `maxRows`.');\n    }\n    if ('minHeight' in props.style) {\n      throw new Error('Using `style.minHeight` for <TextareaAutosize/> is not supported. Please use `minRows`.');\n    }\n  }\n  var isControlled = props.value !== undefined;\n  var libRef = React.useRef(null);\n  var ref = useComposedRef(libRef, userRef);\n  var heightRef = React.useRef(0);\n  var measurementsCacheRef = React.useRef();\n  var resizeTextarea = function resizeTextarea() {\n    var node = libRef.current;\n    var nodeSizingData = cacheMeasurements && measurementsCacheRef.current ? measurementsCacheRef.current : getSizingData$1(node);\n    if (!nodeSizingData) {\n      return;\n    }\n    measurementsCacheRef.current = nodeSizingData;\n    var _calculateNodeHeight = calculateNodeHeight(nodeSizingData, node.value || node.placeholder || 'x', minRows, maxRows),\n      height = _calculateNodeHeight[0],\n      rowHeight = _calculateNodeHeight[1];\n    if (heightRef.current !== height) {\n      heightRef.current = height;\n      node.style.setProperty('height', height + \"px\", 'important');\n      onHeightChange(height, {\n        rowHeight: rowHeight\n      });\n    }\n  };\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      resizeTextarea();\n    }\n    onChange(event);\n  };\n  {\n    React.useLayoutEffect(resizeTextarea);\n    useWindowResizeListener(resizeTextarea);\n    useFontsLoadedListener(resizeTextarea);\n    return /*#__PURE__*/React.createElement(\"textarea\", _extends({}, props, {\n      onChange: handleChange,\n      ref: ref\n    }));\n  }\n};\nvar index = /* #__PURE__ */React.forwardRef(TextareaAutosize);\n\nexport { index as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}