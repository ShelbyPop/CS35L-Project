{"ast":null,"code":"'use client';\n\nimport React, { useState } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { InputBase } from '../InputBase/InputBase.mjs';\nimport { Textarea } from '../Textarea/Textarea.mjs';\nimport { validateJson } from './validate-json/validate-json.mjs';\nconst defaultProps = {\n  serialize: JSON.stringify,\n  deserialize: JSON.parse\n};\nconst JsonInput = factory((props, ref) => {\n  const {\n    value,\n    defaultValue,\n    onChange,\n    formatOnBlur,\n    validationError,\n    serialize,\n    deserialize,\n    onFocus,\n    onBlur,\n    readOnly,\n    error,\n    ...others\n  } = useProps(\"JsonInput\", defaultProps, props);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: \"\",\n    onChange\n  });\n  const [valid, setValid] = useState(validateJson(_value, deserialize));\n  const handleFocus = event => {\n    onFocus?.(event);\n    setValid(true);\n  };\n  const handleBlur = event => {\n    typeof onBlur === \"function\" && onBlur(event);\n    const isValid = validateJson(event.currentTarget.value, deserialize);\n    formatOnBlur && !readOnly && isValid && event.currentTarget.value.trim() !== \"\" && setValue(serialize(deserialize(event.currentTarget.value), null, 2));\n    setValid(isValid);\n  };\n  return /* @__PURE__ */React.createElement(Textarea, {\n    value: _value,\n    onChange: event => setValue(event.currentTarget.value),\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref,\n    readOnly,\n    ...others,\n    autoComplete: \"off\",\n    __staticSelector: \"JsonInput\",\n    error: valid ? error : validationError || true,\n    \"data-monospace\": true\n  });\n});\nJsonInput.classes = InputBase.classes;\nJsonInput.displayName = \"@mantine/core/JsonInput\";\nexport { JsonInput };","map":{"version":3,"names":["defaultProps","serialize","JSON","stringify","deserialize","parse","JsonInput","factory","props","ref","value","defaultValue","onChange","formatOnBlur","validationError","onFocus","onBlur","readOnly","error","others","useProps","_value","setValue","useUncontrolled","finalValue","valid","setValid","useState","validateJson","handleFocus","event","handleBlur","isValid","currentTarget","trim","React","createElement","Textarea","autoComplete","__staticSelector","classes","InputBase","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/JsonInput/JsonInput.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { factory, Factory, useProps } from '../../core';\nimport { __InputStylesNames } from '../Input';\nimport { InputBase } from '../InputBase';\nimport { Textarea, TextareaProps } from '../Textarea';\nimport { validateJson } from './validate-json/validate-json';\n\nexport interface JsonInputProps extends Omit<TextareaProps, 'onChange'> {\n  /** Value for controlled component */\n  value?: string;\n\n  /** Default value for uncontrolled component */\n  defaultValue?: string;\n\n  /** Called when value changes */\n  onChange?: (value: string) => void;\n\n  /** Determines whether the value should be formatted on blur, `false` by default */\n  formatOnBlur?: boolean;\n\n  /** Error message displayed when value is not valid JSON */\n  validationError?: React.ReactNode;\n\n  /** Function to serialize value into a string, used for value formatting, `JSON.stringify` by default */\n  serialize?: typeof JSON.stringify;\n\n  /** Function to deserialize string value, used for value formatting and input JSON validation, must throw error if string cannot be processed, `JSON.parse` by default */\n  deserialize?: typeof JSON.parse;\n}\n\nexport type JsonInputFactory = Factory<{\n  props: JsonInputProps;\n  ref: HTMLTextAreaElement;\n  stylesNames: __InputStylesNames;\n}>;\n\nconst defaultProps: Partial<JsonInputProps> = {\n  serialize: JSON.stringify,\n  deserialize: JSON.parse,\n};\n\nexport const JsonInput = factory<JsonInputFactory>((props, ref) => {\n  const {\n    value,\n    defaultValue,\n    onChange,\n    formatOnBlur,\n    validationError,\n    serialize,\n    deserialize,\n    onFocus,\n    onBlur,\n    readOnly,\n    error,\n    ...others\n  } = useProps('JsonInput', defaultProps, props);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: '',\n    onChange,\n  });\n\n  const [valid, setValid] = useState(validateJson(_value, deserialize!));\n\n  const handleFocus = (event: React.FocusEvent<HTMLTextAreaElement>) => {\n    onFocus?.(event);\n    setValid(true);\n  };\n\n  const handleBlur = (event: React.FocusEvent<HTMLTextAreaElement>) => {\n    typeof onBlur === 'function' && onBlur(event);\n    const isValid = validateJson(event.currentTarget.value, deserialize!);\n    formatOnBlur &&\n      !readOnly &&\n      isValid &&\n      event.currentTarget.value.trim() !== '' &&\n      setValue(serialize!(deserialize!(event.currentTarget.value), null, 2));\n    setValid(isValid);\n  };\n\n  return (\n    <Textarea\n      value={_value}\n      onChange={(event) => setValue(event.currentTarget.value)}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      ref={ref}\n      readOnly={readOnly}\n      {...others}\n      autoComplete=\"off\"\n      __staticSelector=\"JsonInput\"\n      error={valid ? error : validationError || true}\n      data-monospace\n    />\n  );\n});\n\nJsonInput.classes = InputBase.classes;\nJsonInput.displayName = '@mantine/core/JsonInput';\n"],"mappings":";;;;;;;;;;;;;;;;AAOA,MAAMA,YAAY,GAAG;EACnBC,SAAS,EAAEC,IAAI,CAACC,SAAS;EACzBC,WAAW,EAAEF,IAAI,CAACG;AACpB,CAAC;AACW,MAACC,SAAS,GAAGC,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;EAC/C,MAAM;IACJC,KAAK;IACLC,YAAY;IACZC,QAAQ;IACRC,YAAY;IACZC,eAAe;IACfb,SAAS;IACTG,WAAW;IACXW,OAAO;IACPC,MAAM;IACNC,QAAQ;IACRC,KAAK;IACL,GAAGC;EACJ,IAAGC,QAAQ,CAAC,WAAW,EAAEpB,YAAY,EAAEQ,KAAK,CAAC;EAC9C,MAAM,CAACa,MAAM,EAAEC,QAAQ,CAAC,GAAGC,eAAe,CAAC;IACzCb,KAAK;IACLC,YAAY;IACZa,UAAU,EAAE,EAAE;IACdZ;EACJ,CAAG,CAAC;EACF,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAACC,YAAY,CAACP,MAAM,EAAEjB,WAAW,CAAC,CAAC;EACrE,MAAMyB,WAAW,GAAIC,KAAK,IAAK;IAC7Bf,OAAO,GAAGe,KAAK,CAAC;IAChBJ,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAG;EACD,MAAMK,UAAU,GAAID,KAAK,IAAK;IAC5B,OAAOd,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACc,KAAK,CAAC;IAC7C,MAAME,OAAO,GAAGJ,YAAY,CAACE,KAAK,CAACG,aAAa,CAACvB,KAAK,EAAEN,WAAW,CAAC;IACpES,YAAY,IAAI,CAACI,QAAQ,IAAIe,OAAO,IAAIF,KAAK,CAACG,aAAa,CAACvB,KAAK,CAACwB,IAAI,EAAE,KAAK,EAAE,IAAIZ,QAAQ,CAACrB,SAAS,CAACG,WAAW,CAAC0B,KAAK,CAACG,aAAa,CAACvB,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACvJgB,QAAQ,CAACM,OAAO,CAAC;EACrB,CAAG;EACD,sBAAuBG,KAAK,CAACC,aAAa,CACxCC,QAAQ,EACR;IACE3B,KAAK,EAAEW,MAAM;IACbT,QAAQ,EAAGkB,KAAK,IAAKR,QAAQ,CAACQ,KAAK,CAACG,aAAa,CAACvB,KAAK,CAAC;IACxDK,OAAO,EAAEc,WAAW;IACpBb,MAAM,EAAEe,UAAU;IAClBtB,GAAG;IACHQ,QAAQ;IACR,GAAGE,MAAM;IACTmB,YAAY,EAAE,KAAK;IACnBC,gBAAgB,EAAE,WAAW;IAC7BrB,KAAK,EAAEO,KAAK,GAAGP,KAAK,GAAGJ,eAAe,IAAI,IAAI;IAC9C,gBAAgB,EAAE;EACnB,CACL,CAAG;AACH,CAAC,CAAE;AACHR,SAAS,CAACkC,OAAO,GAAGC,SAAS,CAACD,OAAO;AACrClC,SAAS,CAACoC,WAAW,GAAG,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}