{"ast":null,"code":"'use client';\n\nfunction reorderErrors(path, {\n  from,\n  to\n}, errors) {\n  const oldKeyStart = `${path}.${from}`;\n  const newKeyStart = `${path}.${to}`;\n  const clone = {\n    ...errors\n  };\n  Object.keys(errors).every(key => {\n    let oldKey;\n    let newKey;\n    if (key.startsWith(oldKeyStart)) {\n      oldKey = key;\n      newKey = key.replace(oldKeyStart, newKeyStart);\n    }\n    if (key.startsWith(newKeyStart)) {\n      oldKey = key.replace(newKeyStart, oldKeyStart);\n      newKey = key;\n    }\n    if (oldKey && newKey) {\n      const value1 = clone[oldKey];\n      const value2 = clone[newKey];\n      value2 === void 0 ? delete clone[oldKey] : clone[oldKey] = value2;\n      value1 === void 0 ? delete clone[newKey] : clone[newKey] = value1;\n      return false;\n    }\n    return true;\n  });\n  return clone;\n}\nexport { reorderErrors };","map":{"version":3,"names":["reorderErrors","path","from","to","errors","oldKeyStart","newKeyStart","clone","Object","keys","every","key","oldKey","newKey","startsWith","replace","value1","value2"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/form/src/lists/reorder-errors.ts"],"sourcesContent":["import { ReorderPayload } from '../types';\n\nexport function reorderErrors<T>(path: unknown, { from, to }: ReorderPayload, errors: T): T {\n  const oldKeyStart = `${path}.${from}`;\n  const newKeyStart = `${path}.${to}`;\n\n  const clone: any = { ...errors };\n  Object.keys(errors as any).every((key) => {\n    let oldKey;\n    let newKey;\n    if (key.startsWith(oldKeyStart)) {\n      oldKey = key;\n      newKey = key.replace(oldKeyStart, newKeyStart);\n    }\n    if (key.startsWith(newKeyStart)) {\n      oldKey = key.replace(newKeyStart, oldKeyStart);\n      newKey = key;\n    }\n    if (oldKey && newKey) {\n      const value1 = clone[oldKey];\n      const value2 = clone[newKey];\n      value2 === undefined ? delete clone[oldKey] : (clone[oldKey] = value2);\n      value1 === undefined ? delete clone[newKey] : (clone[newKey] = value1);\n      return false;\n    }\n    return true;\n  });\n\n  return clone;\n}\n"],"mappings":";;AACO,SAASA,aAAaA,CAACC,IAAI,EAAE;EAAEC,IAAI;EAAEC;AAAE,CAAE,EAAEC,MAAM,EAAE;EACxD,MAAMC,WAAW,GAAI,GAAEJ,IAAK,IAAGC,IAAK,EAAC;EACrC,MAAMI,WAAW,GAAI,GAAEL,IAAK,IAAGE,EAAG,EAAC;EACnC,MAAMI,KAAK,GAAG;IAAE,GAAGH;EAAM,CAAE;EAC3BI,MAAM,CAACC,IAAI,CAACL,MAAM,CAAC,CAACM,KAAK,CAAEC,GAAG,IAAK;IACjC,IAAIC,MAAM;IACV,IAAIC,MAAM;IACV,IAAIF,GAAG,CAACG,UAAU,CAACT,WAAW,CAAC,EAAE;MAC/BO,MAAM,GAAGD,GAAG;MACZE,MAAM,GAAGF,GAAG,CAACI,OAAO,CAACV,WAAW,EAAEC,WAAW,CAAC;IAC/C;IACD,IAAIK,GAAG,CAACG,UAAU,CAACR,WAAW,CAAC,EAAE;MAC/BM,MAAM,GAAGD,GAAG,CAACI,OAAO,CAACT,WAAW,EAAED,WAAW,CAAC;MAC9CQ,MAAM,GAAGF,GAAG;IACb;IACD,IAAIC,MAAM,IAAIC,MAAM,EAAE;MACpB,MAAMG,MAAM,GAAGT,KAAK,CAACK,MAAM,CAAC;MAC5B,MAAMK,MAAM,GAAGV,KAAK,CAACM,MAAM,CAAC;MAC5BI,MAAM,KAAK,KAAK,CAAC,GAAG,OAAOV,KAAK,CAACK,MAAM,CAAC,GAAGL,KAAK,CAACK,MAAM,CAAC,GAAGK,MAAM;MACjED,MAAM,KAAK,KAAK,CAAC,GAAG,OAAOT,KAAK,CAACM,MAAM,CAAC,GAAGN,KAAK,CAACM,MAAM,CAAC,GAAGG,MAAM;MACjE,OAAO,KAAK;IACb;IACD,OAAO,IAAI;EACf,CAAG,CAAC;EACF,OAAOT,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}