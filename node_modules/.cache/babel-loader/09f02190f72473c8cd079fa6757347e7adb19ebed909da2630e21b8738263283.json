{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { keys } from '../../core/utils/keys/keys.mjs';\nimport { filterProps } from '../../core/utils/filter-props/filter-props.mjs';\nimport { getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport { getSortedBreakpoints } from '../../core/utils/get-sorted-breakpoints/get-sorted-breakpoints.mjs';\nimport { getBaseValue } from '../../core/utils/get-base-value/get-base-value.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { InlineStyles } from '../../core/InlineStyles/InlineStyles.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nfunction GridVariables({\n  gutter,\n  selector\n}) {\n  const theme = useMantineTheme();\n  const baseStyles = filterProps({\n    \"--grid-gutter\": getSpacing(getBaseValue(gutter))\n  });\n  const queries = keys(theme.breakpoints).reduce((acc, breakpoint) => {\n    if (!acc[breakpoint]) {\n      acc[breakpoint] = {};\n    }\n    if (typeof gutter === \"object\" && gutter[breakpoint] !== void 0) {\n      acc[breakpoint][\"--grid-gutter\"] = getSpacing(gutter[breakpoint]);\n    }\n    return acc;\n  }, {});\n  const sortedBreakpoints = getSortedBreakpoints(keys(queries), theme).filter(breakpoint => keys(queries[breakpoint.value]).length > 0);\n  const media = sortedBreakpoints.map(breakpoint => ({\n    query: `(min-width: ${theme.breakpoints[breakpoint.value]})`,\n    styles: queries[breakpoint.value]\n  }));\n  return /* @__PURE__ */React.createElement(InlineStyles, {\n    styles: baseStyles,\n    media,\n    selector\n  });\n}\nexport { GridVariables };","map":{"version":3,"names":["GridVariables","gutter","selector","theme","useMantineTheme","baseStyles","filterProps","getSpacing","getBaseValue","queries","keys","breakpoints","reduce","acc","breakpoint","sortedBreakpoints","getSortedBreakpoints","filter","value","length","media","map","query","styles","React","createElement","InlineStyles"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Grid/GridVariables.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  filterProps,\n  getBaseValue,\n  getSortedBreakpoints,\n  getSpacing,\n  InlineStyles,\n  keys,\n  MantineBreakpoint,\n  useMantineTheme,\n} from '../../core';\nimport type { GridProps } from './Grid';\n\ninterface GridVariablesProps extends GridProps {\n  selector: string;\n}\n\nexport function GridVariables({ gutter, selector }: GridVariablesProps) {\n  const theme = useMantineTheme();\n\n  const baseStyles: Record<string, string | undefined> = filterProps({\n    '--grid-gutter': getSpacing(getBaseValue(gutter)),\n  });\n\n  const queries = keys(theme.breakpoints).reduce<Record<string, Record<string, any>>>(\n    (acc, breakpoint) => {\n      if (!acc[breakpoint]) {\n        acc[breakpoint] = {};\n      }\n\n      if (typeof gutter === 'object' && gutter[breakpoint] !== undefined) {\n        acc[breakpoint]['--grid-gutter'] = getSpacing(gutter[breakpoint]);\n      }\n\n      return acc;\n    },\n    {}\n  );\n\n  const sortedBreakpoints = getSortedBreakpoints(keys(queries), theme).filter(\n    (breakpoint) => keys(queries[breakpoint.value]).length > 0\n  );\n\n  const media = sortedBreakpoints.map((breakpoint) => ({\n    query: `(min-width: ${theme.breakpoints[breakpoint.value as MantineBreakpoint]})`,\n    styles: queries[breakpoint.value],\n  }));\n\n  return <InlineStyles styles={baseStyles} media={media} selector={selector} />;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAWO,SAASA,aAAaA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAE,EAAE;EAClD,MAAMC,KAAK,GAAGC,eAAe,EAAE;EAC/B,MAAMC,UAAU,GAAGC,WAAW,CAAC;IAC7B,eAAe,EAAEC,UAAU,CAACC,YAAY,CAACP,MAAM,CAAC;EACpD,CAAG,CAAC;EACF,MAAMQ,OAAO,GAAGC,IAAI,CAACP,KAAK,CAACQ,WAAW,CAAC,CAACC,MAAM,CAC5C,CAACC,GAAG,EAAEC,UAAU,KAAK;IACnB,IAAI,CAACD,GAAG,CAACC,UAAU,CAAC,EAAE;MACpBD,GAAG,CAACC,UAAU,CAAC,GAAG,EAAE;IACrB;IACD,IAAI,OAAOb,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACa,UAAU,CAAC,KAAK,KAAK,CAAC,EAAE;MAC/DD,GAAG,CAACC,UAAU,CAAC,CAAC,eAAe,CAAC,GAAGP,UAAU,CAACN,MAAM,CAACa,UAAU,CAAC,CAAC;IAClE;IACD,OAAOD,GAAG;EACX,GACD,CAAE,CACN,CAAG;EACD,MAAME,iBAAiB,GAAGC,oBAAoB,CAACN,IAAI,CAACD,OAAO,CAAC,EAAEN,KAAK,CAAC,CAACc,MAAM,CACxEH,UAAU,IAAKJ,IAAI,CAACD,OAAO,CAACK,UAAU,CAACI,KAAK,CAAC,CAAC,CAACC,MAAM,GAAG,CAC7D,CAAG;EACD,MAAMC,KAAK,GAAGL,iBAAiB,CAACM,GAAG,CAAEP,UAAU,KAAM;IACnDQ,KAAK,EAAG,eAAcnB,KAAK,CAACQ,WAAW,CAACG,UAAU,CAACI,KAAK,CAAE,GAAE;IAC5DK,MAAM,EAAEd,OAAO,CAACK,UAAU,CAACI,KAAK;EACjC,EAAC,CAAC;EACH,sBAAuBM,KAAK,CAACC,aAAa,CAACC,YAAY,EAAE;IAAEH,MAAM,EAAElB,UAAU;IAAEe,KAAK;IAAElB;EAAQ,CAAE,CAAC;AACnG"},"metadata":{},"sourceType":"module","externalDependencies":[]}