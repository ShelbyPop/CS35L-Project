{"ast":null,"code":"'use client';\n\nimport { useLayoutEffect, useEffect } from 'react';\nfunction dispatchEvent(type, detail) {\n  window.dispatchEvent(new CustomEvent(type, {\n    detail\n  }));\n}\nfunction validateFormName(name) {\n  if (!/^[0-9a-zA-Z-]+$/.test(name)) {\n    throw new Error(`[@mantine/use-form] Form name \"${name}\" is invalid, it should contain only letters, numbers and dashes`);\n  }\n}\nconst useIsomorphicEffect = typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\nfunction createFormActions(name) {\n  validateFormName(name);\n  const setFieldValue = (path, value) => dispatchEvent(`mantine-form:${name}:set-field-value`, {\n    path,\n    value\n  });\n  const setValues = values => dispatchEvent(`mantine-form:${name}:set-values`, values);\n  const setInitialValues = values => dispatchEvent(`mantine-form:${name}:set-initial-values`, values);\n  const setErrors = errors => dispatchEvent(`mantine-form:${name}:set-errors`, errors);\n  const setFieldError = (path, error) => dispatchEvent(`mantine-form:${name}:set-field-error`, {\n    path,\n    error\n  });\n  const clearFieldError = path => dispatchEvent(`mantine-form:${name}:clear-field-error`, path);\n  const clearErrors = () => dispatchEvent(`mantine-form:${name}:clear-errors`);\n  const reset = () => dispatchEvent(`mantine-form:${name}:reset`);\n  const validate = () => dispatchEvent(`mantine-form:${name}:validate`);\n  const validateField = path => dispatchEvent(`mantine-form:${name}:validate-field`, path);\n  const reorderListItem = (path, payload) => dispatchEvent(`mantine-form:${name}:reorder-list-item`, {\n    path,\n    payload\n  });\n  const removeListItem = (path, index) => dispatchEvent(`mantine-form:${name}:remove-list-item`, {\n    path,\n    index\n  });\n  const insertListItem = (path, item, index) => dispatchEvent(`mantine-form:${name}:insert-list-item`, {\n    path,\n    index,\n    item\n  });\n  const setDirty = value => dispatchEvent(`mantine-form:${name}:set-dirty`, value);\n  const setTouched = value => dispatchEvent(`mantine-form:${name}:set-touched`, value);\n  const resetDirty = values => dispatchEvent(`mantine-form:${name}:reset-dirty`, values);\n  const resetTouched = () => dispatchEvent(`mantine-form:${name}:reset-touched`);\n  return {\n    setFieldValue,\n    setValues,\n    setInitialValues,\n    setErrors,\n    setFieldError,\n    clearFieldError,\n    clearErrors,\n    reset,\n    validate,\n    validateField,\n    reorderListItem,\n    removeListItem,\n    insertListItem,\n    setDirty,\n    setTouched,\n    resetDirty,\n    resetTouched\n  };\n}\nfunction useFormEvent(eventKey, handler) {\n  useIsomorphicEffect(() => {\n    if (eventKey) {\n      window.addEventListener(eventKey, handler);\n      return () => window.removeEventListener(eventKey, handler);\n    }\n    return void 0;\n  }, [eventKey]);\n}\nfunction useFormActions(name, form) {\n  if (name) {\n    validateFormName(name);\n  }\n  useFormEvent(`mantine-form:${name}:set-field-value`, event => form.setFieldValue(event.detail.path, event.detail.value));\n  useFormEvent(`mantine-form:${name}:set-values`, event => form.setValues(event.detail));\n  useFormEvent(`mantine-form:${name}:set-initial-values`, event => form.setInitialValues(event.detail));\n  useFormEvent(`mantine-form:${name}:set-errors`, event => form.setErrors(event.detail));\n  useFormEvent(`mantine-form:${name}:set-field-error`, event => form.setFieldError(event.detail.path, event.detail.error));\n  useFormEvent(`mantine-form:${name}:clear-field-error`, event => form.clearFieldError(event.detail));\n  useFormEvent(`mantine-form:${name}:clear-errors`, form.clearErrors);\n  useFormEvent(`mantine-form:${name}:reset`, form.reset);\n  useFormEvent(`mantine-form:${name}:validate`, form.validate);\n  useFormEvent(`mantine-form:${name}:validate-field`, event => form.validateField(event.detail));\n  useFormEvent(`mantine-form:${name}:reorder-list-item`, event => form.reorderListItem(event.detail.path, event.detail.payload));\n  useFormEvent(`mantine-form:${name}:remove-list-item`, event => form.removeListItem(event.detail.path, event.detail.index));\n  useFormEvent(`mantine-form:${name}:insert-list-item`, event => form.insertListItem(event.detail.path, event.detail.item, event.detail.index));\n  useFormEvent(`mantine-form:${name}:set-dirty`, event => form.setDirty(event.detail));\n  useFormEvent(`mantine-form:${name}:set-touched`, event => form.setTouched(event.detail));\n  useFormEvent(`mantine-form:${name}:reset-dirty`, event => form.resetDirty(event.detail));\n  useFormEvent(`mantine-form:${name}:reset-touched`, form.resetTouched);\n}\nexport { createFormActions, useFormActions, useIsomorphicEffect };","map":{"version":3,"names":["dispatchEvent","type","detail","window","CustomEvent","validateFormName","name","test","Error","useIsomorphicEffect","useLayoutEffect","useEffect","createFormActions","setFieldValue","path","value","setValues","values","setInitialValues","setErrors","errors","setFieldError","error","clearFieldError","clearErrors","reset","validate","validateField","reorderListItem","payload","removeListItem","index","insertListItem","item","setDirty","setTouched","resetDirty","resetTouched","useFormEvent","eventKey","handler","addEventListener","removeEventListener","useFormActions","form","event"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/form/src/actions/actions.ts"],"sourcesContent":["import { useEffect, useLayoutEffect } from 'react';\nimport type {\n  _TransformValues,\n  ClearErrors,\n  ClearFieldError,\n  InsertListItem,\n  RemoveListItem,\n  ReorderListItem,\n  Reset,\n  ResetDirty,\n  ResetStatus,\n  SetErrors,\n  SetFieldError,\n  SetFieldValue,\n  SetFormStatus,\n  SetInitialValues,\n  SetValues,\n  UseFormReturnType,\n  ValidateField,\n} from '../types';\n\nfunction dispatchEvent(type: string, detail?: any): any {\n  window.dispatchEvent(new CustomEvent(type, { detail }));\n}\n\nfunction validateFormName(name: string) {\n  if (!/^[0-9a-zA-Z-]+$/.test(name)) {\n    throw new Error(\n      `[@mantine/use-form] Form name \"${name}\" is invalid, it should contain only letters, numbers and dashes`\n    );\n  }\n}\n\nexport const useIsomorphicEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nexport function createFormActions<FormValues extends Record<string, any> = Record<string, any>>(\n  name: string\n) {\n  validateFormName(name);\n\n  const setFieldValue: SetFieldValue<FormValues> = (path, value) =>\n    dispatchEvent(`mantine-form:${name}:set-field-value`, { path, value });\n\n  const setValues: SetValues<FormValues> = (values) =>\n    dispatchEvent(`mantine-form:${name}:set-values`, values);\n\n  const setInitialValues: SetInitialValues<FormValues> = (values) =>\n    dispatchEvent(`mantine-form:${name}:set-initial-values`, values);\n\n  const setErrors: SetErrors = (errors) => dispatchEvent(`mantine-form:${name}:set-errors`, errors);\n\n  const setFieldError: SetFieldError<FormValues> = (path, error) =>\n    dispatchEvent(`mantine-form:${name}:set-field-error`, { path, error });\n\n  const clearFieldError: ClearFieldError = (path) =>\n    dispatchEvent(`mantine-form:${name}:clear-field-error`, path);\n\n  const clearErrors: ClearErrors = () => dispatchEvent(`mantine-form:${name}:clear-errors`);\n\n  const reset: Reset = () => dispatchEvent(`mantine-form:${name}:reset`);\n\n  const validate: () => void = () => dispatchEvent(`mantine-form:${name}:validate`);\n\n  const validateField: ValidateField<FormValues> = (path) =>\n    dispatchEvent(`mantine-form:${name}:validate-field`, path);\n\n  const reorderListItem: ReorderListItem<FormValues> = (path, payload) =>\n    dispatchEvent(`mantine-form:${name}:reorder-list-item`, { path, payload });\n\n  const removeListItem: RemoveListItem<FormValues> = (path, index) =>\n    dispatchEvent(`mantine-form:${name}:remove-list-item`, { path, index });\n\n  const insertListItem: InsertListItem<FormValues> = (path, item, index) =>\n    dispatchEvent(`mantine-form:${name}:insert-list-item`, { path, index, item });\n\n  const setDirty: SetFormStatus = (value) => dispatchEvent(`mantine-form:${name}:set-dirty`, value);\n\n  const setTouched: SetFormStatus = (value) =>\n    dispatchEvent(`mantine-form:${name}:set-touched`, value);\n\n  const resetDirty: ResetDirty<FormValues> = (values) =>\n    dispatchEvent(`mantine-form:${name}:reset-dirty`, values);\n\n  const resetTouched: ResetStatus = () => dispatchEvent(`mantine-form:${name}:reset-touched`);\n\n  return {\n    setFieldValue,\n    setValues,\n    setInitialValues,\n    setErrors,\n    setFieldError,\n    clearFieldError,\n    clearErrors,\n    reset,\n    validate,\n    validateField,\n    reorderListItem,\n    removeListItem,\n    insertListItem,\n    setDirty,\n    setTouched,\n    resetDirty,\n    resetTouched,\n  };\n}\n\nfunction useFormEvent(eventKey: string | undefined, handler: Function) {\n  useIsomorphicEffect(() => {\n    if (eventKey) {\n      window.addEventListener(eventKey, handler as any);\n      return () => window.removeEventListener(eventKey, handler as any);\n    }\n    return undefined;\n  }, [eventKey]);\n}\n\nexport function useFormActions<\n  Values = Record<string, unknown>,\n  TransformValues extends _TransformValues<Values> = (values: Values) => Values,\n>(name: string | undefined, form: UseFormReturnType<Values, TransformValues>) {\n  if (name) {\n    validateFormName(name);\n  }\n\n  useFormEvent(`mantine-form:${name}:set-field-value`, (event: CustomEvent) =>\n    form.setFieldValue(event.detail.path, event.detail.value)\n  );\n\n  useFormEvent(`mantine-form:${name}:set-values`, (event: CustomEvent) =>\n    form.setValues(event.detail)\n  );\n\n  useFormEvent(`mantine-form:${name}:set-initial-values`, (event: CustomEvent) =>\n    form.setInitialValues(event.detail)\n  );\n\n  useFormEvent(`mantine-form:${name}:set-errors`, (event: CustomEvent) =>\n    form.setErrors(event.detail)\n  );\n\n  useFormEvent(`mantine-form:${name}:set-field-error`, (event: CustomEvent) =>\n    form.setFieldError(event.detail.path, event.detail.error)\n  );\n\n  useFormEvent(`mantine-form:${name}:clear-field-error`, (event: CustomEvent) =>\n    form.clearFieldError(event.detail)\n  );\n\n  useFormEvent(`mantine-form:${name}:clear-errors`, form.clearErrors);\n  useFormEvent(`mantine-form:${name}:reset`, form.reset);\n  useFormEvent(`mantine-form:${name}:validate`, form.validate);\n\n  useFormEvent(`mantine-form:${name}:validate-field`, (event: CustomEvent) =>\n    form.validateField(event.detail)\n  );\n\n  useFormEvent(`mantine-form:${name}:reorder-list-item`, (event: CustomEvent) =>\n    form.reorderListItem(event.detail.path, event.detail.payload)\n  );\n\n  useFormEvent(`mantine-form:${name}:remove-list-item`, (event: CustomEvent) =>\n    form.removeListItem(event.detail.path, event.detail.index)\n  );\n\n  useFormEvent(`mantine-form:${name}:insert-list-item`, (event: CustomEvent) =>\n    form.insertListItem(event.detail.path, event.detail.item, event.detail.index)\n  );\n\n  useFormEvent(`mantine-form:${name}:set-dirty`, (event: CustomEvent) =>\n    form.setDirty(event.detail)\n  );\n\n  useFormEvent(`mantine-form:${name}:set-touched`, (event: CustomEvent) =>\n    form.setTouched(event.detail)\n  );\n\n  useFormEvent(`mantine-form:${name}:reset-dirty`, (event: CustomEvent) =>\n    form.resetDirty(event.detail)\n  );\n\n  useFormEvent(`mantine-form:${name}:reset-touched`, form.resetTouched);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}