{"ast":null,"code":"'use client';\n\nimport { useRef, useState } from 'react';\nimport { flushSync } from 'react-dom';\nimport { useDidUpdate, mergeRefs } from '@mantine/hooks';\nfunction getAutoHeightDuration(height) {\n  if (!height || typeof height === \"string\") {\n    return 0;\n  }\n  const constant = height / 36;\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}\nfunction getElementHeight(el) {\n  return el?.current ? el.current.scrollHeight : \"auto\";\n}\nconst raf = typeof window !== \"undefined\" && window.requestAnimationFrame;\nfunction useCollapse({\n  transitionDuration,\n  transitionTimingFunction = \"ease\",\n  onTransitionEnd = () => {},\n  opened\n}) {\n  const el = useRef(null);\n  const collapsedHeight = 0;\n  const collapsedStyles = {\n    display: \"none\",\n    height: 0,\n    overflow: \"hidden\"\n  };\n  const [styles, setStylesRaw] = useState(opened ? {} : collapsedStyles);\n  const setStyles = newStyles => {\n    flushSync(() => setStylesRaw(newStyles));\n  };\n  const mergeStyles = newStyles => {\n    setStyles(oldStyles => ({\n      ...oldStyles,\n      ...newStyles\n    }));\n  };\n  function getTransitionStyles(height) {\n    const _duration = transitionDuration || getAutoHeightDuration(height);\n    return {\n      transition: `height ${_duration}ms ${transitionTimingFunction}, opacity ${_duration}ms ${transitionTimingFunction}`\n    };\n  }\n  useDidUpdate(() => {\n    if (typeof raf === \"function\") {\n      if (opened) {\n        raf(() => {\n          mergeStyles({\n            willChange: \"height\",\n            display: \"block\",\n            overflow: \"hidden\"\n          });\n          raf(() => {\n            const height = getElementHeight(el);\n            mergeStyles({\n              ...getTransitionStyles(height),\n              height\n            });\n          });\n        });\n      } else {\n        raf(() => {\n          const height = getElementHeight(el);\n          mergeStyles({\n            ...getTransitionStyles(height),\n            willChange: \"height\",\n            height\n          });\n          raf(() => mergeStyles({\n            height: collapsedHeight,\n            overflow: \"hidden\"\n          }));\n        });\n      }\n    }\n  }, [opened]);\n  const handleTransitionEnd = e => {\n    if (e.target !== el.current || e.propertyName !== \"height\") {\n      return;\n    }\n    if (opened) {\n      const height = getElementHeight(el);\n      if (height === styles.height) {\n        setStyles({});\n      } else {\n        mergeStyles({\n          height\n        });\n      }\n      onTransitionEnd();\n    } else if (styles.height === collapsedHeight) {\n      setStyles(collapsedStyles);\n      onTransitionEnd();\n    }\n  };\n  function getCollapseProps({\n    style = {},\n    refKey = \"ref\",\n    ...rest\n  } = {}) {\n    const theirRef = rest[refKey];\n    return {\n      \"aria-hidden\": !opened,\n      ...rest,\n      [refKey]: mergeRefs(el, theirRef),\n      onTransitionEnd: handleTransitionEnd,\n      style: {\n        boxSizing: \"border-box\",\n        ...style,\n        ...styles\n      }\n    };\n  }\n  return getCollapseProps;\n}\nexport { getElementHeight, useCollapse };","map":{"version":3,"names":["getAutoHeightDuration","height","constant","Math","round","getElementHeight","el","current","scrollHeight","raf","window","requestAnimationFrame","useCollapse","transitionDuration","transitionTimingFunction","onTransitionEnd","opened","useRef","collapsedHeight","collapsedStyles","display","overflow","styles","setStylesRaw","useState","setStyles","newStyles","flushSync","mergeStyles","oldStyles","getTransitionStyles","_duration","transition","useDidUpdate","willChange","handleTransitionEnd","e","target","propertyName","getCollapseProps","style","refKey","rest","theirRef","mergeRefs","boxSizing"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Collapse/use-collapse.ts"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { flushSync } from 'react-dom';\nimport { mergeRefs, useDidUpdate } from '@mantine/hooks';\nimport { CSSProperties } from '../../core';\n\nfunction getAutoHeightDuration(height: number | string) {\n  if (!height || typeof height === 'string') {\n    return 0;\n  }\n  const constant = height / 36;\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}\n\nexport function getElementHeight(\n  el: React.RefObject<HTMLElement> | { current?: { scrollHeight: number } }\n) {\n  return el?.current ? el.current.scrollHeight : 'auto';\n}\n\nconst raf = typeof window !== 'undefined' && window.requestAnimationFrame;\n\ninterface UseCollapse {\n  opened: boolean;\n  transitionDuration?: number;\n  transitionTimingFunction?: string;\n  onTransitionEnd?: () => void;\n}\n\ninterface GetCollapseProps {\n  [key: string]: unknown;\n  style?: CSSProperties;\n  onTransitionEnd?: (e: TransitionEvent) => void;\n  refKey?: string;\n  ref?: React.ForwardedRef<HTMLDivElement>;\n}\n\nexport function useCollapse({\n  transitionDuration,\n  transitionTimingFunction = 'ease',\n  onTransitionEnd = () => {},\n  opened,\n}: UseCollapse): (props: GetCollapseProps) => Record<string, any> {\n  const el = useRef<HTMLElement | null>(null);\n  const collapsedHeight = 0;\n  const collapsedStyles = {\n    display: 'none',\n    height: 0,\n    overflow: 'hidden',\n  };\n  const [styles, setStylesRaw] = useState<CSSProperties>(opened ? {} : collapsedStyles);\n  const setStyles = (newStyles: {} | ((oldStyles: {}) => {})): void => {\n    flushSync(() => setStylesRaw(newStyles));\n  };\n\n  const mergeStyles = (newStyles: {}): void => {\n    setStyles((oldStyles) => ({ ...oldStyles, ...newStyles }));\n  };\n\n  function getTransitionStyles(height: number | string): {\n    transition: string;\n  } {\n    const _duration = transitionDuration || getAutoHeightDuration(height);\n    return {\n      transition: `height ${_duration}ms ${transitionTimingFunction}, opacity ${_duration}ms ${transitionTimingFunction}`,\n    };\n  }\n\n  useDidUpdate(() => {\n    if (typeof raf === 'function') {\n      if (opened) {\n        raf(() => {\n          mergeStyles({ willChange: 'height', display: 'block', overflow: 'hidden' });\n          raf(() => {\n            const height = getElementHeight(el);\n            mergeStyles({ ...getTransitionStyles(height), height });\n          });\n        });\n      } else {\n        raf(() => {\n          const height = getElementHeight(el);\n          mergeStyles({ ...getTransitionStyles(height), willChange: 'height', height });\n          raf(() => mergeStyles({ height: collapsedHeight, overflow: 'hidden' }));\n        });\n      }\n    }\n  }, [opened]);\n\n  const handleTransitionEnd = (e: React.TransitionEvent): void => {\n    if (e.target !== el.current || e.propertyName !== 'height') {\n      return;\n    }\n\n    if (opened) {\n      const height = getElementHeight(el);\n\n      if (height === styles.height) {\n        setStyles({});\n      } else {\n        mergeStyles({ height });\n      }\n\n      onTransitionEnd();\n    } else if (styles.height === collapsedHeight) {\n      setStyles(collapsedStyles);\n      onTransitionEnd();\n    }\n  };\n\n  function getCollapseProps({ style = {}, refKey = 'ref', ...rest }: GetCollapseProps = {}) {\n    const theirRef: any = rest[refKey];\n    return {\n      'aria-hidden': !opened,\n      ...rest,\n      [refKey]: mergeRefs(el, theirRef),\n      onTransitionEnd: handleTransitionEnd,\n      style: { boxSizing: 'border-box', ...style, ...styles },\n    };\n  }\n\n  return getCollapseProps;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}