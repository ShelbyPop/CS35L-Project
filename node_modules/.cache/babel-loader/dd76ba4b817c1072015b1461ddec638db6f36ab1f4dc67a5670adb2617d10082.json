{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport 'clsx';\nimport { useResolvedStylesApi } from '../../core/styles-api/use-resolved-styles-api/use-resolved-styles-api.mjs';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { ProgressLabel } from './ProgressLabel/ProgressLabel.mjs';\nimport { ProgressRoot } from './ProgressRoot/ProgressRoot.mjs';\nimport { ProgressSection } from './ProgressSection/ProgressSection.mjs';\nimport classes from './Progress.module.css.mjs';\nconst defaultProps = {};\nconst Progress = factory((_props, ref) => {\n  const props = useProps(\"Progress\", defaultProps, _props);\n  const {\n    value,\n    classNames,\n    styles,\n    vars,\n    color,\n    striped,\n    animated,\n    \"aria-label\": label,\n    ...others\n  } = props;\n  const {\n    resolvedClassNames,\n    resolvedStyles\n  } = useResolvedStylesApi({\n    classNames,\n    styles,\n    props\n  });\n  return /* @__PURE__ */React.createElement(ProgressRoot, {\n    ref,\n    classNames: resolvedClassNames,\n    styles: resolvedStyles,\n    vars,\n    ...others\n  }, /* @__PURE__ */React.createElement(ProgressSection, {\n    value,\n    color,\n    striped,\n    animated,\n    \"aria-label\": label\n  }));\n});\nProgress.classes = classes;\nProgress.displayName = \"@mantine/core/Progress\";\nProgress.Section = ProgressSection;\nProgress.Root = ProgressRoot;\nProgress.Label = ProgressLabel;\nexport { Progress };","map":{"version":3,"names":["defaultProps","Progress","factory","_props","ref","props","useProps","value","classNames","styles","vars","color","striped","animated","label","others","resolvedClassNames","resolvedStyles","useResolvedStylesApi","React","createElement","ProgressRoot","ProgressSection","classes","displayName","Section","Root","Label","ProgressLabel"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Progress/Progress.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  factory,\n  Factory,\n  MantineColor,\n  StylesApiProps,\n  useProps,\n  useResolvedStylesApi,\n} from '../../core';\nimport { ProgressLabel } from './ProgressLabel/ProgressLabel';\nimport {\n  __ProgressRootProps,\n  ProgressRoot,\n  ProgressRootCssVariables,\n  ProgressRootStylesNames,\n} from './ProgressRoot/ProgressRoot';\nimport { ProgressSection } from './ProgressSection/ProgressSection';\nimport classes from './Progress.module.css';\n\nexport type ProgressStylesNames = ProgressRootStylesNames;\n\nexport interface ProgressProps extends __ProgressRootProps, StylesApiProps<ProgressFactory> {\n  /** Value of the progress */\n  value: number;\n\n  /** Key of `theme.colors` or any valid CSS value, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Determines whether the section should have stipes, `false` by default */\n  striped?: boolean;\n\n  /** Determines whether the sections stripes should be animated, if set, `striped` prop is ignored, `false` by default */\n  animated?: boolean;\n}\n\nexport type ProgressFactory = Factory<{\n  props: ProgressProps;\n  ref: HTMLDivElement;\n  stylesNames: ProgressStylesNames;\n  vars: ProgressRootCssVariables;\n  staticComponents: {\n    Section: typeof ProgressSection;\n    Root: typeof ProgressRoot;\n    Label: typeof ProgressLabel;\n  };\n}>;\n\nconst defaultProps: Partial<ProgressProps> = {};\n\nexport const Progress = factory<ProgressFactory>((_props, ref) => {\n  const props = useProps('Progress', defaultProps, _props);\n  const {\n    value,\n    classNames,\n    styles,\n    vars,\n    color,\n    striped,\n    animated,\n    'aria-label': label,\n    ...others\n  } = props;\n\n  const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi<ProgressFactory>({\n    classNames,\n    styles,\n    props,\n  });\n\n  return (\n    <ProgressRoot\n      ref={ref}\n      classNames={resolvedClassNames}\n      styles={resolvedStyles}\n      vars={vars as any}\n      {...others}\n    >\n      <ProgressSection\n        value={value}\n        color={color}\n        striped={striped}\n        animated={animated}\n        aria-label={label}\n      />\n    </ProgressRoot>\n  );\n});\n\nProgress.classes = classes;\nProgress.displayName = '@mantine/core/Progress';\nProgress.Section = ProgressSection;\nProgress.Root = ProgressRoot;\nProgress.Label = ProgressLabel;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAaA,MAAMA,YAAY,GAAG,EAAE;AACX,MAACC,QAAQ,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EAC/C,MAAMC,KAAK,GAAGC,QAAQ,CAAC,UAAU,EAAEN,YAAY,EAAEG,MAAM,CAAC;EACxD,MAAM;IACJI,KAAK;IACLC,UAAU;IACVC,MAAM;IACNC,IAAI;IACJC,KAAK;IACLC,OAAO;IACPC,QAAQ;IACR,YAAY,EAAEC,KAAK;IACnB,GAAGC;EACJ,IAAGV,KAAK;EACT,MAAM;IAAEW,kBAAkB;IAAEC;EAAgB,IAAGC,oBAAoB,CAAC;IAClEV,UAAU;IACVC,MAAM;IACNJ;EACJ,CAAG,CAAC;EACF,sBAAuBc,KAAK,CAACC,aAAa,CACxCC,YAAY,EACZ;IACEjB,GAAG;IACHI,UAAU,EAAEQ,kBAAkB;IAC9BP,MAAM,EAAEQ,cAAc;IACtBP,IAAI;IACJ,GAAGK;EACJ,GACe,eAAAI,KAAK,CAACC,aAAa,CACjCE,eAAe,EACf;IACEf,KAAK;IACLI,KAAK;IACLC,OAAO;IACPC,QAAQ;IACR,YAAY,EAAEC;EACf,CACF,CACL,CAAG;AACH,CAAC,CAAE;AACHb,QAAQ,CAACsB,OAAO,GAAGA,OAAO;AAC1BtB,QAAQ,CAACuB,WAAW,GAAG,wBAAwB;AAC/CvB,QAAQ,CAACwB,OAAO,GAAGH,eAAe;AAClCrB,QAAQ,CAACyB,IAAI,GAAGL,YAAY;AAC5BpB,QAAQ,CAAC0B,KAAK,GAAGC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}