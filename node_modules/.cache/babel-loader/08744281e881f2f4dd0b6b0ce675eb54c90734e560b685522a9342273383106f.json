{"ast":null,"code":"'use client';\n\nimport { toRgba } from '../to-rgba/to-rgba.mjs';\nfunction gammaCorrect(c) {\n  return c <= 0.03928 ? c / 12.92 : ((c + 0.055) / 1.055) ** 2.4;\n}\nfunction getLightnessFromOklch(oklchColor) {\n  const match = oklchColor.match(/oklch\\((.*?)%\\s/);\n  return match ? parseFloat(match[1]) : null;\n}\nfunction luminance(color) {\n  if (color.startsWith(\"oklch(\")) {\n    return (getLightnessFromOklch(color) || 0) / 100;\n  }\n  const {\n    r,\n    g,\n    b\n  } = toRgba(color);\n  const sR = r / 255;\n  const sG = g / 255;\n  const sB = b / 255;\n  const rLinear = gammaCorrect(sR);\n  const gLinear = gammaCorrect(sG);\n  const bLinear = gammaCorrect(sB);\n  return 0.2126 * rLinear + 0.7152 * gLinear + 0.0722 * bLinear;\n}\nfunction isLightColor(color, luminanceThreshold = 0.179) {\n  if (color.startsWith(\"var(\")) {\n    return false;\n  }\n  return luminance(color) > luminanceThreshold;\n}\nexport { isLightColor, luminance };","map":{"version":3,"names":["gammaCorrect","c","getLightnessFromOklch","oklchColor","match","parseFloat","luminance","color","startsWith","r","g","b","toRgba","sR","sG","sB","rLinear","gLinear","bLinear","isLightColor","luminanceThreshold"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/core/MantineProvider/color-functions/luminance/luminance.ts"],"sourcesContent":["import { toRgba } from '../to-rgba/to-rgba';\n\nfunction gammaCorrect(c: number) {\n  return c <= 0.03928 ? c / 12.92 : ((c + 0.055) / 1.055) ** 2.4;\n}\n\nfunction getLightnessFromOklch(oklchColor: string) {\n  const match = oklchColor.match(/oklch\\((.*?)%\\s/);\n  return match ? parseFloat(match[1]) : null;\n}\n\nexport function luminance(color: string): number {\n  if (color.startsWith('oklch(')) {\n    return (getLightnessFromOklch(color) || 0) / 100;\n  }\n\n  const { r, g, b } = toRgba(color);\n\n  const sR = r / 255;\n  const sG = g / 255;\n  const sB = b / 255;\n\n  const rLinear = gammaCorrect(sR);\n  const gLinear = gammaCorrect(sG);\n  const bLinear = gammaCorrect(sB);\n\n  return 0.2126 * rLinear + 0.7152 * gLinear + 0.0722 * bLinear;\n}\n\nexport function isLightColor(color: string, luminanceThreshold = 0.179) {\n  if (color.startsWith('var(')) {\n    return false;\n  }\n\n  return luminance(color) > luminanceThreshold;\n}\n"],"mappings":";;;AAEA,SAASA,YAAYA,CAACC,CAAC,EAAE;EACvB,OAAOA,CAAC,IAAI,OAAO,GAAGA,CAAC,GAAG,KAAK,GAAG,CAAC,CAACA,CAAC,GAAG,KAAK,IAAI,KAAK,KAAK,GAAG;AAChE;AACA,SAASC,qBAAqBA,CAACC,UAAU,EAAE;EACzC,MAAMC,KAAK,GAAGD,UAAU,CAACC,KAAK,CAAC,iBAAiB,CAAC;EACjD,OAAOA,KAAK,GAAGC,UAAU,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;AAC5C;AACO,SAASE,SAASA,CAACC,KAAK,EAAE;EAC/B,IAAIA,KAAK,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;IAC9B,OAAO,CAACN,qBAAqB,CAACK,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG;EACjD;EACD,MAAM;IAAEE,CAAC;IAAEC,CAAC;IAAEC;EAAC,CAAE,GAAGC,MAAM,CAACL,KAAK,CAAC;EACjC,MAAMM,EAAE,GAAGJ,CAAC,GAAG,GAAG;EAClB,MAAMK,EAAE,GAAGJ,CAAC,GAAG,GAAG;EAClB,MAAMK,EAAE,GAAGJ,CAAC,GAAG,GAAG;EAClB,MAAMK,OAAO,GAAGhB,YAAY,CAACa,EAAE,CAAC;EAChC,MAAMI,OAAO,GAAGjB,YAAY,CAACc,EAAE,CAAC;EAChC,MAAMI,OAAO,GAAGlB,YAAY,CAACe,EAAE,CAAC;EAChC,OAAO,MAAM,GAAGC,OAAO,GAAG,MAAM,GAAGC,OAAO,GAAG,MAAM,GAAGC,OAAO;AAC/D;AACO,SAASC,YAAYA,CAACZ,KAAK,EAAEa,kBAAkB,GAAG,KAAK,EAAE;EAC9D,IAAIb,KAAK,CAACC,UAAU,CAAC,MAAM,CAAC,EAAE;IAC5B,OAAO,KAAK;EACb;EACD,OAAOF,SAAS,CAACC,KAAK,CAAC,GAAGa,kBAAkB;AAC9C"},"metadata":{},"sourceType":"module","externalDependencies":[]}