{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../../Input/Input.mjs';\nimport '../../Input/InputWrapper/InputWrapper.mjs';\nimport '../../Input/InputDescription/InputDescription.mjs';\nimport '../../Input/InputError/InputError.mjs';\nimport '../../Input/InputLabel/InputLabel.mjs';\nimport '../../Input/InputPlaceholder/InputPlaceholder.mjs';\nimport { useInputWrapperContext } from '../../Input/InputWrapper.context.mjs';\nimport { usePillsInputContext } from '../PillsInput.context.mjs';\nimport classes from '../PillsInput.module.css.mjs';\nconst defaultProps = {\n  type: \"visible\"\n};\nconst PillsInputField = factory((_props, ref) => {\n  const props = useProps(\"PillsInputField\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    type,\n    disabled,\n    id,\n    pointer,\n    mod,\n    ...others\n  } = props;\n  const ctx = usePillsInputContext();\n  const inputWrapperCtx = useInputWrapperContext();\n  const getStyles = useStyles({\n    name: \"PillsInputField\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: \"field\"\n  });\n  const _disabled = disabled || ctx?.disabled;\n  return /* @__PURE__ */React.createElement(Box, {\n    component: \"input\",\n    ref: useMergedRef(ref, ctx?.fieldRef),\n    \"data-type\": type,\n    disabled: _disabled,\n    mod: [{\n      disabled: _disabled,\n      pointer\n    }, mod],\n    ...getStyles(\"field\"),\n    ...others,\n    id: inputWrapperCtx?.inputId || id,\n    \"aria-invalid\": ctx?.hasError,\n    \"aria-describedby\": inputWrapperCtx?.describedBy,\n    type: \"text\",\n    onMouseDown: event => !pointer && event.stopPropagation()\n  });\n});\nPillsInputField.classes = classes;\nPillsInputField.displayName = \"@mantine/core/PillsInputField\";\nexport { PillsInputField };","map":{"version":3,"names":["defaultProps","type","PillsInputField","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","disabled","id","pointer","mod","others","ctx","usePillsInputContext","inputWrapperCtx","useInputWrapperContext","getStyles","useStyles","name","classes","rootSelector","_disabled","React","createElement","Box","component","useMergedRef","fieldRef","inputId","hasError","describedBy","onMouseDown","event","stopPropagation","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/PillsInput/PillsInputField/PillsInputField.tsx"],"sourcesContent":["import React from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { useInputWrapperContext } from '../../Input';\nimport { usePillsInputContext } from '../PillsInput.context';\nimport classes from '../PillsInput.module.css';\n\nexport type PillsInputFieldStylesNames = 'field';\n\nexport interface PillsInputFieldProps\n  extends BoxProps,\n    StylesApiProps<PillsInputFieldFactory>,\n    ElementProps<'input', 'type'> {\n  /** Controls input styles when focused. If `auto` the input is hidden when not focused. If `visible` the input will always remain visible. `'visible'` by default  */\n  type?: 'auto' | 'visible' | 'hidden';\n\n  /** If set, cursor is changed to pointer */\n  pointer?: boolean;\n}\n\nexport type PillsInputFieldFactory = Factory<{\n  props: PillsInputFieldProps;\n  ref: HTMLInputElement;\n  stylesNames: PillsInputFieldStylesNames;\n}>;\n\nconst defaultProps: Partial<PillsInputFieldProps> = {\n  type: 'visible',\n};\n\nexport const PillsInputField = factory<PillsInputFieldFactory>((_props, ref) => {\n  const props = useProps('PillsInputField', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    type,\n    disabled,\n    id,\n    pointer,\n    mod,\n    ...others\n  } = props;\n  const ctx = usePillsInputContext();\n  const inputWrapperCtx = useInputWrapperContext();\n\n  const getStyles = useStyles<PillsInputFieldFactory>({\n    name: 'PillsInputField',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'field',\n  });\n\n  const _disabled = disabled || ctx?.disabled;\n\n  return (\n    <Box\n      component=\"input\"\n      ref={useMergedRef(ref, ctx?.fieldRef)}\n      data-type={type}\n      disabled={_disabled}\n      mod={[{ disabled: _disabled, pointer }, mod]}\n      {...getStyles('field')}\n      {...others}\n      id={inputWrapperCtx?.inputId || id}\n      aria-invalid={ctx?.hasError}\n      aria-describedby={inputWrapperCtx?.describedBy}\n      type=\"text\"\n      onMouseDown={(event) => !pointer && event.stopPropagation()}\n    />\n  );\n});\n\nPillsInputField.classes = classes;\nPillsInputField.displayName = '@mantine/core/PillsInputField';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAYA,MAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE;AACR,CAAC;AACW,MAACC,eAAe,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EACtD,MAAMC,KAAK,GAAGC,QAAQ,CAAC,iBAAiB,EAAEP,YAAY,EAAEI,MAAM,CAAC;EAC/D,MAAM;IACJI,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJZ,IAAI;IACJa,QAAQ;IACRC,EAAE;IACFC,OAAO;IACPC,GAAG;IACH,GAAGC;EACJ,IAAGZ,KAAK;EACT,MAAMa,GAAG,GAAGC,oBAAoB,EAAE;EAClC,MAAMC,eAAe,GAAGC,sBAAsB,EAAE;EAChD,MAAMC,SAAS,GAAGC,SAAS,CAAC;IAC1BC,IAAI,EAAE,iBAAiB;IACvBC,OAAO;IACPpB,KAAK;IACLG,SAAS;IACTC,KAAK;IACLF,UAAU;IACVG,MAAM;IACNC,QAAQ;IACRe,YAAY,EAAE;EAClB,CAAG,CAAC;EACF,MAAMC,SAAS,GAAGd,QAAQ,IAAIK,GAAG,EAAEL,QAAQ;EAC3C,sBAAuBe,KAAK,CAACC,aAAa,CACxCC,GAAG,EACH;IACEC,SAAS,EAAE,OAAO;IAClB3B,GAAG,EAAE4B,YAAY,CAAC5B,GAAG,EAAEc,GAAG,EAAEe,QAAQ,CAAC;IACrC,WAAW,EAAEjC,IAAI;IACjBa,QAAQ,EAAEc,SAAS;IACnBX,GAAG,EAAE,CAAC;MAAEH,QAAQ,EAAEc,SAAS;MAAEZ;IAAO,CAAE,EAAEC,GAAG,CAAC;IAC5C,GAAGM,SAAS,CAAC,OAAO,CAAC;IACrB,GAAGL,MAAM;IACTH,EAAE,EAAEM,eAAe,EAAEc,OAAO,IAAIpB,EAAE;IAClC,cAAc,EAAEI,GAAG,EAAEiB,QAAQ;IAC7B,kBAAkB,EAAEf,eAAe,EAAEgB,WAAW;IAChDpC,IAAI,EAAE,MAAM;IACZqC,WAAW,EAAGC,KAAK,IAAK,CAACvB,OAAO,IAAIuB,KAAK,CAACC,eAAe,CAAE;EAC5D,CACL,CAAG;AACH,CAAC,CAAE;AACHtC,eAAe,CAACwB,OAAO,GAAGA,OAAO;AACjCxB,eAAe,CAACuC,WAAW,GAAG,+BAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}