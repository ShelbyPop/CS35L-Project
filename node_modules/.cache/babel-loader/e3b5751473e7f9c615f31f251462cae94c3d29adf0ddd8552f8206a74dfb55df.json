{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { getSize } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Divider.module.css.mjs';\nconst defaultProps = {\n  orientation: \"horizontal\"\n};\nconst varsResolver = createVarsResolver((theme, {\n  color,\n  variant,\n  size\n}) => ({\n  root: {\n    \"--divider-color\": color ? getThemeColor(color, theme) : void 0,\n    \"--divider-border-style\": variant,\n    \"--divider-size\": getSize(size, \"divider-size\")\n  }\n}));\nconst Divider = factory((_props, ref) => {\n  const props = useProps(\"Divider\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    orientation,\n    label,\n    labelPosition,\n    mod,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Divider\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */React.createElement(Box, {\n    ref,\n    mod: [{\n      orientation,\n      \"with-label\": !!label\n    }, mod],\n    ...getStyles(\"root\"),\n    ...others,\n    role: \"separator\"\n  }, label && /* @__PURE__ */React.createElement(Box, {\n    component: \"span\",\n    mod: {\n      position: labelPosition\n    },\n    ...getStyles(\"label\")\n  }, label));\n});\nDivider.classes = classes;\nDivider.displayName = \"@mantine/core/Divider\";\nexport { Divider };","map":{"version":3,"names":["defaultProps","orientation","varsResolver","createVarsResolver","theme","color","variant","size","root","getThemeColor","getSize","Divider","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","label","labelPosition","mod","others","getStyles","useStyles","name","classes","React","createElement","Box","role","component","position","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Divider/Divider.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Divider.module.css';\n\nexport type DividerStylesNames = 'root' | 'label';\nexport type DividerVariant = 'solid' | 'dashed' | 'dotted';\nexport type DividerCssVariables = {\n  root: '--divider-color' | '--divider-border-style' | '--divider-size';\n};\n\nexport interface DividerProps\n  extends BoxProps,\n    StylesApiProps<DividerFactory>,\n    ElementProps<'div'> {\n  /** Key of `theme.colors` or any valid CSS color value, by default value depends on color scheme */\n  color?: MantineColor;\n\n  /** Controls width/height (depends on orientation), `'xs'` by default */\n  size?: MantineSize | number | (string & {});\n\n  /** Divider label, visible only when `orientation` is `horizontal` */\n  label?: React.ReactNode;\n\n  /** Controls label position, `'left'` by default */\n  labelPosition?: 'left' | 'center' | 'right';\n\n  /** Controls orientation, `'horizontal'` by default */\n  orientation?: 'horizontal' | 'vertical';\n}\n\nexport type DividerFactory = Factory<{\n  props: DividerProps;\n  ref: HTMLDivElement;\n  stylesNames: DividerStylesNames;\n  vars: DividerCssVariables;\n  variant: DividerVariant;\n}>;\n\nconst defaultProps: Partial<DividerProps> = {\n  orientation: 'horizontal',\n};\n\nconst varsResolver = createVarsResolver<DividerFactory>((theme, { color, variant, size }) => ({\n  root: {\n    '--divider-color': color ? getThemeColor(color, theme) : undefined,\n    '--divider-border-style': variant,\n    '--divider-size': getSize(size, 'divider-size'),\n  },\n}));\n\nexport const Divider = factory<DividerFactory>((_props, ref) => {\n  const props = useProps('Divider', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    orientation,\n    label,\n    labelPosition,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<DividerFactory>({\n    name: 'Divider',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      ref={ref}\n      mod={[{ orientation, 'with-label': !!label }, mod]}\n      {...getStyles('root')}\n      {...others}\n      role=\"separator\"\n    >\n      {label && (\n        <Box component=\"span\" mod={{ position: labelPosition }} {...getStyles('label')}>\n          {label}\n        </Box>\n      )}\n    </Box>\n  );\n});\n\nDivider.classes = classes;\nDivider.displayName = '@mantine/core/Divider';\n"],"mappings":";;;;;;;;;;;;;;;;;;AAYA,MAAMA,YAAY,GAAG;EACnBC,WAAW,EAAE;AACf,CAAC;AACD,MAAMC,YAAY,GAAGC,kBAAkB,CAAC,CAACC,KAAK,EAAE;EAAEC,KAAK;EAAEC,OAAO;EAAEC;AAAI,CAAE,MAAM;EAC5EC,IAAI,EAAE;IACJ,iBAAiB,EAAEH,KAAK,GAAGI,aAAa,CAACJ,KAAK,EAAED,KAAK,CAAC,GAAG,KAAK,CAAC;IAC/D,wBAAwB,EAAEE,OAAO;IACjC,gBAAgB,EAAEI,OAAO,CAACH,IAAI,EAAE,cAAc;EAC/C;AACH,CAAC,CAAC,CAAC;AACS,MAACI,OAAO,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EAC9C,MAAMC,KAAK,GAAGC,QAAQ,CAAC,SAAS,EAAEhB,YAAY,EAAEa,MAAM,CAAC;EACvD,MAAM;IACJI,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJjB,KAAK;IACLJ,WAAW;IACXsB,KAAK;IACLC,aAAa;IACbC,GAAG;IACH,GAAGC;EACJ,IAAGX,KAAK;EACT,MAAMY,SAAS,GAAGC,SAAS,CAAC;IAC1BC,IAAI,EAAE,SAAS;IACfC,OAAO;IACPf,KAAK;IACLG,SAAS;IACTC,KAAK;IACLF,UAAU;IACVG,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJpB;EACJ,CAAG,CAAC;EACF,sBAAuB6B,KAAK,CAACC,aAAa,CACxCC,GAAG,EACH;IACEnB,GAAG;IACHW,GAAG,EAAE,CAAC;MAAExB,WAAW;MAAE,YAAY,EAAE,CAAC,CAACsB;IAAO,GAAEE,GAAG,CAAC;IAClD,GAAGE,SAAS,CAAC,MAAM,CAAC;IACpB,GAAGD,MAAM;IACTQ,IAAI,EAAE;EACP,GACDX,KAAK,mBAAoBQ,KAAK,CAACC,aAAa,CAACC,GAAG,EAAE;IAAEE,SAAS,EAAE,MAAM;IAAEV,GAAG,EAAE;MAAEW,QAAQ,EAAEZ;IAAa,CAAE;IAAE,GAAGG,SAAS,CAAC,OAAO;EAAG,GAAEJ,KAAK,CAC3I,CAAG;AACH,CAAC,CAAE;AACHZ,OAAO,CAACmB,OAAO,GAAGA,OAAO;AACzBnB,OAAO,CAAC0B,WAAW,GAAG,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}