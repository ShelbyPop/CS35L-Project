{"ast":null,"code":"'use client';\n\nimport { useState } from 'react';\nfunction useClipboard({\n  timeout = 2e3\n} = {}) {\n  const [error, setError] = useState(null);\n  const [copied, setCopied] = useState(false);\n  const [copyTimeout, setCopyTimeout] = useState(null);\n  const handleCopyResult = value => {\n    window.clearTimeout(copyTimeout);\n    setCopyTimeout(window.setTimeout(() => setCopied(false), timeout));\n    setCopied(value);\n  };\n  const copy = valueToCopy => {\n    if (\"clipboard\" in navigator) {\n      navigator.clipboard.writeText(valueToCopy).then(() => handleCopyResult(true)).catch(err => setError(err));\n    } else {\n      setError(new Error(\"useClipboard: navigator.clipboard is not supported\"));\n    }\n  };\n  const reset = () => {\n    setCopied(false);\n    setError(null);\n    window.clearTimeout(copyTimeout);\n  };\n  return {\n    copy,\n    reset,\n    error,\n    copied\n  };\n}\nexport { useClipboard };","map":{"version":3,"names":["useClipboard","timeout","error","setError","useState","copied","setCopied","copyTimeout","setCopyTimeout","handleCopyResult","value","window","clearTimeout","setTimeout","copy","valueToCopy","navigator","clipboard","writeText","then","catch","err","Error","reset"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/hooks/src/use-clipboard/use-clipboard.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport function useClipboard({ timeout = 2000 } = {}) {\n  const [error, setError] = useState<Error | null>(null);\n  const [copied, setCopied] = useState(false);\n  const [copyTimeout, setCopyTimeout] = useState<number | null>(null);\n\n  const handleCopyResult = (value: boolean) => {\n    window.clearTimeout(copyTimeout!);\n    setCopyTimeout(window.setTimeout(() => setCopied(false), timeout));\n    setCopied(value);\n  };\n\n  const copy = (valueToCopy: any) => {\n    if ('clipboard' in navigator) {\n      navigator.clipboard\n        .writeText(valueToCopy)\n        .then(() => handleCopyResult(true))\n        .catch((err) => setError(err));\n    } else {\n      setError(new Error('useClipboard: navigator.clipboard is not supported'));\n    }\n  };\n\n  const reset = () => {\n    setCopied(false);\n    setError(null);\n    window.clearTimeout(copyTimeout!);\n  };\n\n  return { copy, reset, error, copied };\n}\n"],"mappings":";;;AAEO,SAASA,YAAYA,CAAC;EAAEC,OAAO,GAAG;AAAG,CAAE,GAAG,EAAE,EAAE;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMK,gBAAgB,GAAIC,KAAK,IAAK;IAClCC,MAAM,CAACC,YAAY,CAACL,WAAW,CAAC;IAChCC,cAAc,CAACG,MAAM,CAACE,UAAU,CAAC,MAAMP,SAAS,CAAC,KAAK,CAAC,EAAEL,OAAO,CAAC,CAAC;IAClEK,SAAS,CAACI,KAAK,CAAC;EACpB,CAAG;EACD,MAAMI,IAAI,GAAIC,WAAW,IAAK;IAC5B,IAAI,WAAW,IAAIC,SAAS,EAAE;MAC5BA,SAAS,CAACC,SAAS,CAACC,SAAS,CAACH,WAAW,CAAC,CAACI,IAAI,CAAC,MAAMV,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAACW,KAAK,CAAEC,GAAG,IAAKlB,QAAQ,CAACkB,GAAG,CAAC,CAAC;IACjH,CAAK,MAAM;MACLlB,QAAQ,CAAC,IAAImB,KAAK,CAAC,oDAAoD,CAAC,CAAC;IAC1E;EACL,CAAG;EACD,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAClBjB,SAAS,CAAC,KAAK,CAAC;IAChBH,QAAQ,CAAC,IAAI,CAAC;IACdQ,MAAM,CAACC,YAAY,CAACL,WAAW,CAAC;EACpC,CAAG;EACD,OAAO;IAAEO,IAAI;IAAES,KAAK;IAAErB,KAAK;IAAEG;EAAM,CAAE;AACvC"},"metadata":{},"sourceType":"module","externalDependencies":[]}