{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Curve } from './Curve/Curve.mjs';\nimport { getCurves } from './get-curves/get-curves.mjs';\nimport classes from './RingProgress.module.css.mjs';\nfunction getClampedThickness(thickness, size) {\n  return Math.min(thickness || 12, (size || 120) / 4);\n}\nconst defaultProps = {\n  size: 120,\n  thickness: 12\n};\nconst varsResolver = createVarsResolver((_, {\n  size,\n  thickness\n}) => ({\n  root: {\n    \"--rp-size\": rem(size),\n    \"--rp-label-offset\": rem(thickness * 2)\n  }\n}));\nconst RingProgress = factory((_props, ref) => {\n  const props = useProps(\"RingProgress\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    label,\n    sections,\n    size,\n    thickness,\n    roundCaps,\n    rootColor,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"RingProgress\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const clampedThickness = getClampedThickness(thickness, size);\n  const curves = getCurves({\n    size,\n    thickness: clampedThickness,\n    sections,\n    renderRoundedLineCaps: roundCaps,\n    rootColor\n  }).map(({\n    data,\n    sum,\n    root,\n    lineRoundCaps,\n    offset\n  }, index) => /* @__PURE__ */React.createElement(Curve, {\n    ...data,\n    key: index,\n    size,\n    thickness: clampedThickness,\n    sum,\n    offset,\n    color: data?.color,\n    root,\n    lineRoundCaps,\n    getStyles\n  }));\n  return /* @__PURE__ */React.createElement(Box, {\n    ...getStyles(\"root\"),\n    size,\n    ref,\n    ...others\n  }, /* @__PURE__ */React.createElement(\"svg\", {\n    ...getStyles(\"svg\")\n  }, curves), label && /* @__PURE__ */React.createElement(\"div\", {\n    ...getStyles(\"label\")\n  }, label));\n});\nRingProgress.classes = classes;\nRingProgress.displayName = \"@mantine/core/RingProgress\";\nexport { RingProgress };","map":{"version":3,"names":["getClampedThickness","thickness","size","Math","min","defaultProps","varsResolver","createVarsResolver","_","root","rem","RingProgress","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","label","sections","roundCaps","rootColor","others","getStyles","useStyles","name","classes","clampedThickness","curves","getCurves","renderRoundedLineCaps","map","data","sum","lineRoundCaps","offset","index","React","createElement","Curve","key","color","Box","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/RingProgress/RingProgress.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  MantineColor,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { Curve } from './Curve/Curve';\nimport { getCurves } from './get-curves/get-curves';\nimport classes from './RingProgress.module.css';\n\nfunction getClampedThickness(thickness: number, size: number) {\n  return Math.min(thickness || 12, (size || 120) / 4);\n}\n\ninterface RingProgressSection extends React.ComponentPropsWithRef<'circle'> {\n  value: number;\n  color: MantineColor;\n  tooltip?: React.ReactNode;\n}\n\nexport type RingProgressStylesNames = 'root' | 'svg' | 'label' | 'curve';\nexport type RingProgressCssVariables = {\n  root: '--rp-size' | '--rp-label-offset';\n};\n\nexport interface RingProgressProps\n  extends BoxProps,\n    StylesApiProps<RingProgressFactory>,\n    ElementProps<'div'> {\n  /** Label displayed in the center of the ring */\n  label?: React.ReactNode;\n\n  /** Ring thickness */\n  thickness?: number;\n\n  /** Width and height of the progress ring */\n  size?: number;\n\n  /** Sets whether the edges of the progress circle are rounded */\n  roundCaps?: boolean;\n\n  /** Ring sections */\n  sections: RingProgressSection[];\n\n  /** Color of the root section, key of theme.colors or CSS color value */\n  rootColor?: MantineColor;\n}\n\nexport type RingProgressFactory = Factory<{\n  props: RingProgressProps;\n  ref: HTMLDivElement;\n  stylesNames: RingProgressStylesNames;\n  vars: RingProgressCssVariables;\n}>;\n\nconst defaultProps: Partial<RingProgressProps> = {\n  size: 120,\n  thickness: 12,\n};\n\nconst varsResolver = createVarsResolver<RingProgressFactory>((_, { size, thickness }) => ({\n  root: {\n    '--rp-size': rem(size),\n    '--rp-label-offset': rem(thickness! * 2),\n  },\n}));\n\nexport const RingProgress = factory<RingProgressFactory>((_props, ref) => {\n  const props = useProps('RingProgress', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    label,\n    sections,\n    size,\n    thickness,\n    roundCaps,\n    rootColor,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<RingProgressFactory>({\n    name: 'RingProgress',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const clampedThickness = getClampedThickness(thickness!, size!);\n\n  const curves = getCurves({\n    size: size!,\n    thickness: clampedThickness,\n    sections,\n    renderRoundedLineCaps: roundCaps,\n    rootColor,\n  }).map(({ data, sum, root, lineRoundCaps, offset }, index) => (\n    <Curve\n      {...data}\n      key={index}\n      size={size!}\n      thickness={clampedThickness}\n      sum={sum}\n      offset={offset}\n      color={data?.color}\n      root={root}\n      lineRoundCaps={lineRoundCaps}\n      getStyles={getStyles}\n    />\n  ));\n\n  return (\n    <Box {...getStyles('root')} size={size} ref={ref} {...others}>\n      <svg {...getStyles('svg')}>{curves}</svg>\n      {label && <div {...getStyles('label')}>{label}</div>}\n    </Box>\n  );\n});\n\nRingProgress.classes = classes;\nRingProgress.displayName = '@mantine/core/RingProgress';\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAaA,SAASA,mBAAmBA,CAACC,SAAS,EAAEC,IAAI,EAAE;EAC5C,OAAOC,IAAI,CAACC,GAAG,CAACH,SAAS,IAAI,EAAE,EAAE,CAACC,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC;AACrD;AACA,MAAMG,YAAY,GAAG;EACnBH,IAAI,EAAE,GAAG;EACTD,SAAS,EAAE;AACb,CAAC;AACD,MAAMK,YAAY,GAAGC,kBAAkB,CAAC,CAACC,CAAC,EAAE;EAAEN,IAAI;EAAED;AAAS,CAAE,MAAM;EACnEQ,IAAI,EAAE;IACJ,WAAW,EAAEC,GAAG,CAACR,IAAI,CAAC;IACtB,mBAAmB,EAAEQ,GAAG,CAACT,SAAS,GAAG,CAAC;EACvC;AACH,CAAC,CAAC,CAAC;AACS,MAACU,YAAY,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EACnD,MAAMC,KAAK,GAAGC,QAAQ,CAAC,cAAc,EAAEX,YAAY,EAAEQ,MAAM,CAAC;EAC5D,MAAM;IACJI,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJC,KAAK;IACLC,QAAQ;IACRtB,IAAI;IACJD,SAAS;IACTwB,SAAS;IACTC,SAAS;IACT,GAAGC;EACJ,IAAGZ,KAAK;EACT,MAAMa,SAAS,GAAGC,SAAS,CAAC;IAC1BC,IAAI,EAAE,cAAc;IACpBC,OAAO;IACPhB,KAAK;IACLG,SAAS;IACTC,KAAK;IACLF,UAAU;IACVG,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJhB;EACJ,CAAG,CAAC;EACF,MAAM0B,gBAAgB,GAAGhC,mBAAmB,CAACC,SAAS,EAAEC,IAAI,CAAC;EAC7D,MAAM+B,MAAM,GAAGC,SAAS,CAAC;IACvBhC,IAAI;IACJD,SAAS,EAAE+B,gBAAgB;IAC3BR,QAAQ;IACRW,qBAAqB,EAAEV,SAAS;IAChCC;EACD,EAAC,CAACU,GAAG,CAAC,CAAC;IAAEC,IAAI;IAAEC,GAAG;IAAE7B,IAAI;IAAE8B,aAAa;IAAEC;EAAM,CAAE,EAAEC,KAAK,oBAAqBC,KAAK,CAACC,aAAa,CAC/FC,KAAK,EACL;IACE,GAAGP,IAAI;IACPQ,GAAG,EAAEJ,KAAK;IACVvC,IAAI;IACJD,SAAS,EAAE+B,gBAAgB;IAC3BM,GAAG;IACHE,MAAM;IACNM,KAAK,EAAET,IAAI,EAAES,KAAK;IAClBrC,IAAI;IACJ8B,aAAa;IACbX;EACD,CACL,CAAG,CAAC;EACF,sBAAuBc,KAAK,CAACC,aAAa,CAACI,GAAG,EAAE;IAAE,GAAGnB,SAAS,CAAC,MAAM,CAAC;IAAE1B,IAAI;IAAEY,GAAG;IAAE,GAAGa;EAAM,CAAE,EAAkB,eAAAe,KAAK,CAACC,aAAa,CAAC,KAAK,EAAE;IAAE,GAAGf,SAAS,CAAC,KAAK;EAAG,GAAEK,MAAM,CAAC,EAAEV,KAAK,IAAoB,eAAAmB,KAAK,CAACC,aAAa,CAAC,KAAK,EAAE;IAAE,GAAGf,SAAS,CAAC,OAAO;EAAC,CAAE,EAAEL,KAAK,CAAC,CAAC;AACrQ,CAAC,CAAE;AACHZ,YAAY,CAACoB,OAAO,GAAGA,OAAO;AAC9BpB,YAAY,CAACqC,WAAW,GAAG,4BAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}