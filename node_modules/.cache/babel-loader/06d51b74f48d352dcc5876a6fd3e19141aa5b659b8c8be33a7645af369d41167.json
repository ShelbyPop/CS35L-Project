{"ast":null,"code":"'use client';\n\nimport { keys } from '../../../utils/keys/keys.mjs';\nimport 'react';\nimport { resolvers } from '../resolvers/index.mjs';\nimport { sortMediaQueries } from './sort-media-queries.mjs';\nfunction hasResponsiveStyles(styleProp) {\n  if (typeof styleProp !== \"object\" || styleProp === null) {\n    return false;\n  }\n  const breakpoints = Object.keys(styleProp);\n  if (breakpoints.length === 1 && breakpoints[0] === \"base\") {\n    return false;\n  }\n  return true;\n}\nfunction getBaseValue(value) {\n  if (typeof value === \"object\" && value !== null) {\n    if (\"base\" in value) {\n      return value.base;\n    }\n    return void 0;\n  }\n  return value;\n}\nfunction getBreakpointKeys(value) {\n  if (typeof value === \"object\" && value !== null) {\n    return keys(value).filter(key => key !== \"base\");\n  }\n  return [];\n}\nfunction getBreakpointValue(value, breakpoint) {\n  if (typeof value === \"object\" && value !== null && breakpoint in value) {\n    return value[breakpoint];\n  }\n  return value;\n}\nfunction parseStyleProps({\n  styleProps,\n  data,\n  theme\n}) {\n  return sortMediaQueries(keys(styleProps).reduce((acc, styleProp) => {\n    if (styleProp === \"hiddenFrom\" || styleProp === \"visibleFrom\") {\n      return acc;\n    }\n    const propertyData = data[styleProp];\n    const properties = Array.isArray(propertyData.property) ? propertyData.property : [propertyData.property];\n    const baseValue = getBaseValue(styleProps[styleProp]);\n    if (!hasResponsiveStyles(styleProps[styleProp])) {\n      properties.forEach(property => {\n        acc.inlineStyles[property] = resolvers[propertyData.type](baseValue, theme);\n      });\n      return acc;\n    }\n    acc.hasResponsiveStyles = true;\n    const breakpoints = getBreakpointKeys(styleProps[styleProp]);\n    properties.forEach(property => {\n      if (baseValue) {\n        acc.styles[property] = resolvers[propertyData.type](baseValue, theme);\n      }\n      breakpoints.forEach(breakpoint => {\n        const bp = `(min-width: ${theme.breakpoints[breakpoint]})`;\n        acc.media[bp] = {\n          ...acc.media[bp],\n          [property]: resolvers[propertyData.type](getBreakpointValue(styleProps[styleProp], breakpoint), theme)\n        };\n      });\n    });\n    return acc;\n  }, {\n    hasResponsiveStyles: false,\n    styles: {},\n    inlineStyles: {},\n    media: {}\n  }));\n}\nexport { parseStyleProps };","map":{"version":3,"names":["hasResponsiveStyles","styleProp","breakpoints","Object","keys","length","getBaseValue","value","base","getBreakpointKeys","filter","key","getBreakpointValue","breakpoint","parseStyleProps","styleProps","data","theme","sortMediaQueries","reduce","acc","propertyData","properties","Array","isArray","property","baseValue","forEach","inlineStyles","resolvers","type","styles","bp","media"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/core/Box/style-props/parse-style-props/parse-style-props.ts"],"sourcesContent":["import { MantineTheme } from '../../../MantineProvider';\nimport { keys } from '../../../utils';\nimport { resolvers } from '../resolvers';\nimport type { SystemPropData } from '../style-props-data';\nimport type { StyleProp } from '../style-props.types';\nimport type { SortMediaQueriesResult } from './sort-media-queries';\nimport { sortMediaQueries } from './sort-media-queries';\n\nfunction hasResponsiveStyles(styleProp: StyleProp<unknown>) {\n  if (typeof styleProp !== 'object' || styleProp === null) {\n    return false;\n  }\n\n  const breakpoints = Object.keys(styleProp);\n\n  if (breakpoints.length === 1 && breakpoints[0] === 'base') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction getBaseValue(value: StyleProp<unknown>) {\n  if (typeof value === 'object' && value !== null) {\n    if ('base' in value) {\n      return value.base;\n    }\n\n    return undefined;\n  }\n\n  return value;\n}\n\nfunction getBreakpointKeys(value: StyleProp<unknown>) {\n  if (typeof value === 'object' && value !== null) {\n    return keys(value).filter((key) => key !== 'base');\n  }\n\n  return [];\n}\n\nfunction getBreakpointValue(value: StyleProp<unknown>, breakpoint: string) {\n  if (typeof value === 'object' && value !== null && breakpoint in value) {\n    return value[breakpoint as keyof typeof value];\n  }\n\n  return value;\n}\n\ninterface ParseStylePropsOptions {\n  styleProps: Record<string, StyleProp<any>>;\n  theme: MantineTheme;\n  data: Record<string, SystemPropData>;\n}\n\nexport interface ParseStylePropsResult {\n  hasResponsiveStyles: boolean;\n  inlineStyles: React.CSSProperties;\n  styles: React.CSSProperties;\n  media: Record<string, React.CSSProperties>;\n}\n\nexport function parseStyleProps({\n  styleProps,\n  data,\n  theme,\n}: ParseStylePropsOptions): SortMediaQueriesResult {\n  return sortMediaQueries(\n    keys(styleProps).reduce<{\n      hasResponsiveStyles: boolean;\n      inlineStyles: Record<string, unknown>;\n      styles: Record<string, unknown>;\n      media: Record<string, Record<string, unknown>>;\n    }>(\n      (acc, styleProp) => {\n        if ((styleProp as string) === 'hiddenFrom' || (styleProp as string) === 'visibleFrom') {\n          return acc;\n        }\n\n        const propertyData = data[styleProp];\n        const properties = Array.isArray(propertyData.property)\n          ? propertyData.property\n          : [propertyData.property];\n        const baseValue = getBaseValue(styleProps[styleProp]);\n\n        if (!hasResponsiveStyles(styleProps[styleProp])) {\n          properties.forEach((property) => {\n            acc.inlineStyles[property] = resolvers[propertyData.type](baseValue, theme);\n          });\n\n          return acc;\n        }\n\n        acc.hasResponsiveStyles = true;\n\n        const breakpoints = getBreakpointKeys(styleProps[styleProp]);\n\n        properties.forEach((property) => {\n          if (baseValue) {\n            acc.styles[property] = resolvers[propertyData.type](baseValue, theme);\n          }\n\n          breakpoints.forEach((breakpoint) => {\n            const bp = `(min-width: ${theme.breakpoints[breakpoint]})`;\n            acc.media[bp] = {\n              ...acc.media[bp],\n              [property]: resolvers[propertyData.type](\n                getBreakpointValue(styleProps[styleProp], breakpoint),\n                theme\n              ),\n            };\n          });\n        });\n\n        return acc;\n      },\n      {\n        hasResponsiveStyles: false,\n        styles: {},\n        inlineStyles: {},\n        media: {},\n      }\n    )\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}