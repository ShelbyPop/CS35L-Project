{"ast":null,"code":"'use client';\n\nimport { getPath } from './get-path.mjs';\nimport { setPath } from './set-path.mjs';\nfunction reorderPath(path, {\n  from,\n  to\n}, values) {\n  const currentValue = getPath(path, values);\n  if (!Array.isArray(currentValue)) {\n    return values;\n  }\n  const cloned = [...currentValue];\n  const item = currentValue[from];\n  cloned.splice(from, 1);\n  cloned.splice(to, 0, item);\n  return setPath(path, cloned, values);\n}\nexport { reorderPath };","map":{"version":3,"names":["reorderPath","path","from","to","values","currentValue","getPath","Array","isArray","cloned","item","splice","setPath"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/form/src/paths/reorder-path.ts"],"sourcesContent":["import { ReorderPayload } from '../types';\nimport { getPath } from './get-path';\nimport { setPath } from './set-path';\n\nexport function reorderPath<T>(path: unknown, { from, to }: ReorderPayload, values: T) {\n  const currentValue = getPath(path, values);\n\n  if (!Array.isArray(currentValue)) {\n    return values;\n  }\n\n  const cloned = [...currentValue];\n  const item = currentValue[from];\n  cloned.splice(from, 1);\n  cloned.splice(to, 0, item);\n\n  return setPath(path, cloned, values);\n}\n"],"mappings":";;;;AAGO,SAASA,WAAWA,CAACC,IAAI,EAAE;EAAEC,IAAI;EAAEC;AAAE,CAAE,EAAEC,MAAM,EAAE;EACtD,MAAMC,YAAY,GAAGC,OAAO,CAACL,IAAI,EAAEG,MAAM,CAAC;EAC1C,IAAI,CAACG,KAAK,CAACC,OAAO,CAACH,YAAY,CAAC,EAAE;IAChC,OAAOD,MAAM;EACd;EACD,MAAMK,MAAM,GAAG,CAAC,GAAGJ,YAAY,CAAC;EAChC,MAAMK,IAAI,GAAGL,YAAY,CAACH,IAAI,CAAC;EAC/BO,MAAM,CAACE,MAAM,CAACT,IAAI,EAAE,CAAC,CAAC;EACtBO,MAAM,CAACE,MAAM,CAACR,EAAE,EAAE,CAAC,EAAEO,IAAI,CAAC;EAC1B,OAAOE,OAAO,CAACX,IAAI,EAAEQ,MAAM,EAAEL,MAAM,CAAC;AACtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}