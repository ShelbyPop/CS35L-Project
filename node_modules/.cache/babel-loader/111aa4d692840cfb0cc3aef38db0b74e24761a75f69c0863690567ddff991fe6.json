{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { useScrollAreaContext } from '../ScrollArea.context.mjs';\nimport { ScrollAreaScrollbarAuto } from './ScrollAreaScrollbarAuto.mjs';\nimport { ScrollAreaScrollbarHover } from './ScrollAreaScrollbarHover.mjs';\nimport { ScrollAreaScrollbarScroll } from './ScrollAreaScrollbarScroll.mjs';\nimport { ScrollAreaScrollbarVisible } from './ScrollAreaScrollbarVisible.mjs';\nconst ScrollAreaScrollbar = React.forwardRef((props, forwardedRef) => {\n  const {\n    forceMount,\n    ...scrollbarProps\n  } = props;\n  const context = useScrollAreaContext();\n  const {\n    onScrollbarXEnabledChange,\n    onScrollbarYEnabledChange\n  } = context;\n  const isHorizontal = props.orientation === \"horizontal\";\n  React.useEffect(() => {\n    isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);\n    return () => {\n      isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);\n    };\n  }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);\n  return context.type === \"hover\" ? /* @__PURE__ */React.createElement(ScrollAreaScrollbarHover, {\n    ...scrollbarProps,\n    ref: forwardedRef,\n    forceMount\n  }) : context.type === \"scroll\" ? /* @__PURE__ */React.createElement(ScrollAreaScrollbarScroll, {\n    ...scrollbarProps,\n    ref: forwardedRef,\n    forceMount\n  }) : context.type === \"auto\" ? /* @__PURE__ */React.createElement(ScrollAreaScrollbarAuto, {\n    ...scrollbarProps,\n    ref: forwardedRef,\n    forceMount\n  }) : context.type === \"always\" ? /* @__PURE__ */React.createElement(ScrollAreaScrollbarVisible, {\n    ...scrollbarProps,\n    ref: forwardedRef\n  }) : null;\n});\nexport { ScrollAreaScrollbar };","map":{"version":3,"names":["ScrollAreaScrollbar","React","forwardRef","props","forwardedRef","forceMount","scrollbarProps","context","useScrollAreaContext","onScrollbarXEnabledChange","onScrollbarYEnabledChange","isHorizontal","orientation","useEffect","type","createElement","ScrollAreaScrollbarHover","ref","ScrollAreaScrollbarScroll","ScrollAreaScrollbarAuto","ScrollAreaScrollbarVisible"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/ScrollArea/ScrollAreaScrollbar/ScrollAreaScrollbar.tsx"],"sourcesContent":["import React from 'react';\nimport { useScrollAreaContext } from '../ScrollArea.context';\nimport { ScrollAreaScrollbarAuto } from './ScrollAreaScrollbarAuto';\nimport { ScrollAreaScrollbarHover } from './ScrollAreaScrollbarHover';\nimport { ScrollAreaScrollbarScroll } from './ScrollAreaScrollbarScroll';\nimport {\n  ScrollAreaScrollbarVisible,\n  ScrollAreaScrollbarVisibleProps,\n} from './ScrollAreaScrollbarVisible';\n\ninterface ScrollAreaScrollbarProps extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nexport const ScrollAreaScrollbar = React.forwardRef<HTMLDivElement, ScrollAreaScrollbarProps>(\n  (props, forwardedRef) => {\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext();\n    const { onScrollbarXEnabledChange, onScrollbarYEnabledChange } = context;\n    const isHorizontal = props.orientation === 'horizontal';\n\n    React.useEffect(() => {\n      isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);\n      return () => {\n        isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);\n      };\n    }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);\n\n    return context.type === 'hover' ? (\n      <ScrollAreaScrollbarHover {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'scroll' ? (\n      <ScrollAreaScrollbarScroll {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'auto' ? (\n      <ScrollAreaScrollbarAuto {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'always' ? (\n      <ScrollAreaScrollbarVisible {...scrollbarProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n"],"mappings":";;;;;;;;AASY,MAACA,mBAAmB,GAAGC,KAAK,CAACC,UAAU,CACjD,CAACC,KAAK,EAAEC,YAAY,KAAK;EACvB,MAAM;IAAEC,UAAU;IAAE,GAAGC;EAAc,CAAE,GAAGH,KAAK;EAC/C,MAAMI,OAAO,GAAGC,oBAAoB,EAAE;EACtC,MAAM;IAAEC,yBAAyB;IAAEC;EAA2B,IAAGH,OAAO;EACxE,MAAMI,YAAY,GAAGR,KAAK,CAACS,WAAW,KAAK,YAAY;EACvDX,KAAK,CAACY,SAAS,CAAC,MAAM;IACpBF,YAAY,GAAGF,yBAAyB,CAAC,IAAI,CAAC,GAAGC,yBAAyB,CAAC,IAAI,CAAC;IAChF,OAAO,MAAM;MACXC,YAAY,GAAGF,yBAAyB,CAAC,KAAK,CAAC,GAAGC,yBAAyB,CAAC,KAAK,CAAC;IAC1F,CAAO;EACF,GAAE,CAACC,YAAY,EAAEF,yBAAyB,EAAEC,yBAAyB,CAAC,CAAC;EACxE,OAAOH,OAAO,CAACO,IAAI,KAAK,OAAO,kBAAmBb,KAAK,CAACc,aAAa,CAACC,wBAAwB,EAAE;IAAE,GAAGV,cAAc;IAAEW,GAAG,EAAEb,YAAY;IAAEC;EAAU,CAAE,CAAC,GAAGE,OAAO,CAACO,IAAI,KAAK,QAAQ,GAAmB,eAAAb,KAAK,CAACc,aAAa,CAACG,yBAAyB,EAAE;IAAE,GAAGZ,cAAc;IAAEW,GAAG,EAAEb,YAAY;IAAEC;EAAY,EAAC,GAAGE,OAAO,CAACO,IAAI,KAAK,MAAM,kBAAmBb,KAAK,CAACc,aAAa,CAACI,uBAAuB,EAAE;IAAE,GAAGb,cAAc;IAAEW,GAAG,EAAEb,YAAY;IAAEC;EAAU,CAAE,CAAC,GAAGE,OAAO,CAACO,IAAI,KAAK,QAAQ,kBAAmBb,KAAK,CAACc,aAAa,CAACK,0BAA0B,EAAE;IAAE,GAAGd,cAAc;IAAEW,GAAG,EAAEb;EAAc,EAAC,GAAG,IAAI;AACvkB,CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}