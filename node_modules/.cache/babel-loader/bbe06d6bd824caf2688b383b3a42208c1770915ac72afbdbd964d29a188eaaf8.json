{"ast":null,"code":"'use client';\n\nimport React, { useEffect } from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport 'clsx';\nimport { useResolvedStylesApi } from '../../core/styles-api/use-resolved-styles-api/use-resolved-styles-api.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { getParsedComboboxData } from '../Combobox/get-parsed-combobox-data/get-parsed-combobox-data.mjs';\nimport { getOptionsLockup } from '../Combobox/get-options-lockup/get-options-lockup.mjs';\nimport '../Combobox/ComboboxChevron/ComboboxChevron.mjs';\nimport { Combobox } from '../Combobox/Combobox.mjs';\nimport '../Combobox/ComboboxDropdown/ComboboxDropdown.mjs';\nimport '../Combobox/ComboboxOptions/ComboboxOptions.mjs';\nimport '../Combobox/ComboboxOption/ComboboxOption.mjs';\nimport '../Combobox/ComboboxTarget/ComboboxTarget.mjs';\nimport '../Combobox/ComboboxSearch/ComboboxSearch.mjs';\nimport '../Combobox/ComboboxEmpty/ComboboxEmpty.mjs';\nimport '../Combobox/ComboboxFooter/ComboboxFooter.mjs';\nimport '../Combobox/ComboboxHeader/ComboboxHeader.mjs';\nimport '../Combobox/ComboboxEventsTarget/ComboboxEventsTarget.mjs';\nimport '../Combobox/ComboboxDropdownTarget/ComboboxDropdownTarget.mjs';\nimport '../Combobox/ComboboxGroup/ComboboxGroup.mjs';\nimport '../Combobox/ComboboxClearButton/ComboboxClearButton.mjs';\nimport { OptionsDropdown } from '../Combobox/OptionsDropdown/OptionsDropdown.mjs';\nimport { useCombobox } from '../Combobox/use-combobox/use-combobox.mjs';\nimport '../Combobox/Combobox.context.mjs';\nimport { InputBase } from '../InputBase/InputBase.mjs';\nconst defaultProps = {};\nconst Autocomplete = factory((_props, ref) => {\n  const props = useProps(\"Autocomplete\", defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    dropdownOpened,\n    defaultDropdownOpened,\n    onDropdownClose,\n    onDropdownOpen,\n    onFocus,\n    onBlur,\n    onClick,\n    onChange,\n    data,\n    value,\n    defaultValue,\n    selectFirstOptionOnChange,\n    onOptionSubmit,\n    comboboxProps,\n    readOnly,\n    disabled,\n    filter,\n    limit,\n    withScrollArea,\n    maxDropdownHeight,\n    size,\n    id,\n    ...others\n  } = props;\n  const _id = useId(id);\n  const parsedData = getParsedComboboxData(data);\n  const optionsLockup = getOptionsLockup(parsedData);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: \"\",\n    onChange\n  });\n  const combobox = useCombobox({\n    opened: dropdownOpened,\n    defaultOpened: defaultDropdownOpened,\n    onDropdownOpen,\n    onDropdownClose: () => {\n      onDropdownClose?.();\n      combobox.resetSelectedOption();\n    }\n  });\n  const {\n    resolvedClassNames,\n    resolvedStyles\n  } = useResolvedStylesApi({\n    props,\n    styles,\n    classNames\n  });\n  useEffect(() => {\n    if (selectFirstOptionOnChange) {\n      combobox.selectFirstOption();\n    }\n  }, [selectFirstOptionOnChange, _value]);\n  return /* @__PURE__ */React.createElement(Combobox, {\n    store: combobox,\n    __staticSelector: \"Autocomplete\",\n    classNames: resolvedClassNames,\n    styles: resolvedStyles,\n    unstyled,\n    readOnly,\n    onOptionSubmit: val => {\n      onOptionSubmit?.(val);\n      setValue(optionsLockup[val].label);\n      combobox.closeDropdown();\n    },\n    size,\n    ...comboboxProps\n  }, /* @__PURE__ */React.createElement(Combobox.Target, null, /* @__PURE__ */React.createElement(InputBase, {\n    ref,\n    ...others,\n    size,\n    __staticSelector: \"Autocomplete\",\n    disabled,\n    readOnly,\n    value: _value,\n    onChange: event => {\n      setValue(event.currentTarget.value);\n      combobox.openDropdown();\n      selectFirstOptionOnChange && combobox.selectFirstOption();\n    },\n    onFocus: event => {\n      combobox.openDropdown();\n      onFocus?.(event);\n    },\n    onBlur: event => {\n      combobox.closeDropdown();\n      onBlur?.(event);\n    },\n    onClick: event => {\n      combobox.openDropdown();\n      onClick?.(event);\n    },\n    classNames: resolvedClassNames,\n    styles: resolvedStyles,\n    unstyled,\n    id: _id\n  })), /* @__PURE__ */React.createElement(OptionsDropdown, {\n    data: parsedData,\n    hidden: readOnly || disabled,\n    filter,\n    search: _value,\n    limit,\n    hiddenWhenEmpty: true,\n    withScrollArea,\n    maxDropdownHeight,\n    unstyled,\n    labelId: `${_id}-label`\n  }));\n});\nAutocomplete.classes = {\n  ...InputBase.classes,\n  ...Combobox.classes\n};\nAutocomplete.displayName = \"@mantine/core/Autocomplete\";\nexport { Autocomplete };","map":{"version":3,"names":["defaultProps","Autocomplete","factory","_props","ref","props","useProps","classNames","styles","unstyled","vars","dropdownOpened","defaultDropdownOpened","onDropdownClose","onDropdownOpen","onFocus","onBlur","onClick","onChange","data","value","defaultValue","selectFirstOptionOnChange","onOptionSubmit","comboboxProps","readOnly","disabled","filter","limit","withScrollArea","maxDropdownHeight","size","id","others","_id","useId","parsedData","getParsedComboboxData","optionsLockup","getOptionsLockup","_value","setValue","useUncontrolled","finalValue","combobox","useCombobox","opened","defaultOpened","resetSelectedOption","resolvedClassNames","resolvedStyles","useResolvedStylesApi","useEffect","selectFirstOption","React","createElement","Combobox","store","__staticSelector","val","label","closeDropdown","Target","InputBase","event","currentTarget","openDropdown","OptionsDropdown","hidden","search","hiddenWhenEmpty","labelId","classes","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Autocomplete/Autocomplete.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n  useResolvedStylesApi,\n} from '../../core';\nimport {\n  Combobox,\n  ComboboxLikeProps,\n  ComboboxLikeStylesNames,\n  ComboboxStringData,\n  getOptionsLockup,\n  getParsedComboboxData,\n  OptionsDropdown,\n  useCombobox,\n} from '../Combobox';\nimport { __BaseInputProps, __InputStylesNames, InputVariant } from '../Input';\nimport { InputBase } from '../InputBase';\n\nexport type AutocompleteStylesNames = __InputStylesNames | ComboboxLikeStylesNames;\n\nexport interface AutocompleteProps\n  extends BoxProps,\n    __BaseInputProps,\n    Omit<ComboboxLikeProps, 'data'>,\n    StylesApiProps<AutocompleteFactory>,\n    ElementProps<'input', 'onChange' | 'size'> {\n  /** Data displayed in the dropdown */\n  data?: ComboboxStringData;\n\n  /** Controlled component value */\n  value?: string;\n\n  /** Uncontrolled component default value */\n  defaultValue?: string;\n\n  /** Called when value changes */\n  onChange?: (value: string) => void;\n}\n\nexport type AutocompleteFactory = Factory<{\n  props: AutocompleteProps;\n  ref: HTMLInputElement;\n  stylesNames: AutocompleteStylesNames;\n  variant: InputVariant;\n}>;\n\nconst defaultProps: Partial<AutocompleteProps> = {};\n\nexport const Autocomplete = factory<AutocompleteFactory>((_props, ref) => {\n  const props = useProps('Autocomplete', defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    dropdownOpened,\n    defaultDropdownOpened,\n    onDropdownClose,\n    onDropdownOpen,\n    onFocus,\n    onBlur,\n    onClick,\n    onChange,\n    data,\n    value,\n    defaultValue,\n    selectFirstOptionOnChange,\n    onOptionSubmit,\n    comboboxProps,\n    readOnly,\n    disabled,\n    filter,\n    limit,\n    withScrollArea,\n    maxDropdownHeight,\n    size,\n    id,\n    ...others\n  } = props;\n\n  const _id = useId(id);\n  const parsedData = getParsedComboboxData(data);\n  const optionsLockup = getOptionsLockup(parsedData);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: '',\n    onChange,\n  });\n\n  const combobox = useCombobox({\n    opened: dropdownOpened,\n    defaultOpened: defaultDropdownOpened,\n    onDropdownOpen,\n    onDropdownClose: () => {\n      onDropdownClose?.();\n      combobox.resetSelectedOption();\n    },\n  });\n\n  const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi<AutocompleteFactory>({\n    props,\n    styles,\n    classNames,\n  });\n\n  useEffect(() => {\n    if (selectFirstOptionOnChange) {\n      combobox.selectFirstOption();\n    }\n  }, [selectFirstOptionOnChange, _value]);\n\n  return (\n    <Combobox\n      store={combobox}\n      __staticSelector=\"Autocomplete\"\n      classNames={resolvedClassNames}\n      styles={resolvedStyles}\n      unstyled={unstyled}\n      readOnly={readOnly}\n      onOptionSubmit={(val) => {\n        onOptionSubmit?.(val);\n        setValue(optionsLockup[val].label);\n        combobox.closeDropdown();\n      }}\n      size={size}\n      {...comboboxProps}\n    >\n      <Combobox.Target>\n        <InputBase\n          ref={ref}\n          {...others}\n          size={size}\n          __staticSelector=\"Autocomplete\"\n          disabled={disabled}\n          readOnly={readOnly}\n          value={_value}\n          onChange={(event) => {\n            setValue(event.currentTarget.value);\n            combobox.openDropdown();\n            selectFirstOptionOnChange && combobox.selectFirstOption();\n          }}\n          onFocus={(event) => {\n            combobox.openDropdown();\n            onFocus?.(event);\n          }}\n          onBlur={(event) => {\n            combobox.closeDropdown();\n            onBlur?.(event);\n          }}\n          onClick={(event) => {\n            combobox.openDropdown();\n            onClick?.(event);\n          }}\n          classNames={resolvedClassNames}\n          styles={resolvedStyles}\n          unstyled={unstyled}\n          id={_id}\n        />\n      </Combobox.Target>\n      <OptionsDropdown\n        data={parsedData}\n        hidden={readOnly || disabled}\n        filter={filter}\n        search={_value}\n        limit={limit}\n        hiddenWhenEmpty\n        withScrollArea={withScrollArea}\n        maxDropdownHeight={maxDropdownHeight}\n        unstyled={unstyled}\n        labelId={`${_id}-label`}\n      />\n    </Combobox>\n  );\n});\n\nAutocomplete.classes = { ...InputBase.classes, ...Combobox.classes };\nAutocomplete.displayName = '@mantine/core/Autocomplete';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}