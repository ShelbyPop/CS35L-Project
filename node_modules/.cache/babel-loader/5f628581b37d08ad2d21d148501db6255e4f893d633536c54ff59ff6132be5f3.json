{"ast":null,"code":"'use client';\n\nimport React, { forwardRef, useRef, useEffect } from 'react';\nimport { useMergedRef, useDebounceCallback } from '@mantine/hooks';\nimport { useScrollAreaContext } from '../ScrollArea.context.mjs';\nimport { useScrollbarContext } from '../ScrollAreaScrollbar/Scrollbar.context.mjs';\nimport { composeEventHandlers } from '../utils/compose-event-handlers.mjs';\nimport { addUnlinkedScrollListener } from '../utils/add-unlinked-scroll-listener.mjs';\nconst Thumb = forwardRef((props, forwardedRef) => {\n  const {\n    style,\n    ...others\n  } = props;\n  const scrollAreaContext = useScrollAreaContext();\n  const scrollbarContext = useScrollbarContext();\n  const {\n    onThumbPositionChange\n  } = scrollbarContext;\n  const composedRef = useMergedRef(forwardedRef, node => scrollbarContext.onThumbChange(node));\n  const removeUnlinkedScrollListenerRef = useRef();\n  const debounceScrollEnd = useDebounceCallback(() => {\n    if (removeUnlinkedScrollListenerRef.current) {\n      removeUnlinkedScrollListenerRef.current();\n      removeUnlinkedScrollListenerRef.current = void 0;\n    }\n  }, 100);\n  useEffect(() => {\n    const {\n      viewport\n    } = scrollAreaContext;\n    if (viewport) {\n      const handleScroll = () => {\n        debounceScrollEnd();\n        if (!removeUnlinkedScrollListenerRef.current) {\n          const listener = addUnlinkedScrollListener(viewport, onThumbPositionChange);\n          removeUnlinkedScrollListenerRef.current = listener;\n          onThumbPositionChange();\n        }\n      };\n      onThumbPositionChange();\n      viewport.addEventListener(\"scroll\", handleScroll);\n      return () => viewport.removeEventListener(\"scroll\", handleScroll);\n    }\n    return void 0;\n  }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);\n  return /* @__PURE__ */React.createElement(\"div\", {\n    \"data-state\": scrollbarContext.hasThumb ? \"visible\" : \"hidden\",\n    ...others,\n    ref: composedRef,\n    style: {\n      width: \"var(--sa-thumb-width)\",\n      height: \"var(--sa-thumb-height)\",\n      ...style\n    },\n    onPointerDownCapture: composeEventHandlers(props.onPointerDownCapture, event => {\n      const thumb = event.target;\n      const thumbRect = thumb.getBoundingClientRect();\n      const x = event.clientX - thumbRect.left;\n      const y = event.clientY - thumbRect.top;\n      scrollbarContext.onThumbPointerDown({\n        x,\n        y\n      });\n    }),\n    onPointerUp: composeEventHandlers(props.onPointerUp, scrollbarContext.onThumbPointerUp)\n  });\n});\nconst ScrollAreaThumb = React.forwardRef((props, forwardedRef) => {\n  const {\n    forceMount,\n    ...thumbProps\n  } = props;\n  const scrollbarContext = useScrollbarContext();\n  if (forceMount || scrollbarContext.hasThumb) {\n    return /* @__PURE__ */React.createElement(Thumb, {\n      ref: forwardedRef,\n      ...thumbProps\n    });\n  }\n  return null;\n});\nexport { ScrollAreaThumb, Thumb };","map":{"version":3,"names":["Thumb","forwardRef","props","forwardedRef","style","others","scrollAreaContext","useScrollAreaContext","scrollbarContext","useScrollbarContext","onThumbPositionChange","composedRef","useMergedRef","node","onThumbChange","removeUnlinkedScrollListenerRef","useRef","debounceScrollEnd","useDebounceCallback","current","useEffect","viewport","handleScroll","listener","addUnlinkedScrollListener","addEventListener","removeEventListener","React","createElement","hasThumb","ref","width","height","onPointerDownCapture","composeEventHandlers","event","thumb","target","thumbRect","getBoundingClientRect","x","clientX","left","y","clientY","top","onThumbPointerDown","onPointerUp","onThumbPointerUp","ScrollAreaThumb","forceMount","thumbProps"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/ScrollArea/ScrollAreaThumb/ScrollAreaThumb.tsx"],"sourcesContent":["import React, { forwardRef, useEffect, useRef } from 'react';\nimport { useDebounceCallback, useMergedRef } from '@mantine/hooks';\nimport { useScrollAreaContext } from '../ScrollArea.context';\nimport { useScrollbarContext } from '../ScrollAreaScrollbar/Scrollbar.context';\nimport { addUnlinkedScrollListener, composeEventHandlers } from '../utils';\n\ninterface ThumbProps extends React.ComponentPropsWithoutRef<'div'> {}\n\nexport const Thumb = forwardRef<HTMLDivElement, ThumbProps>((props, forwardedRef) => {\n  const { style, ...others } = props;\n  const scrollAreaContext = useScrollAreaContext();\n  const scrollbarContext = useScrollbarContext();\n  const { onThumbPositionChange } = scrollbarContext;\n  const composedRef = useMergedRef(forwardedRef, (node) => scrollbarContext.onThumbChange(node));\n  const removeUnlinkedScrollListenerRef = useRef<() => void>();\n  const debounceScrollEnd = useDebounceCallback(() => {\n    if (removeUnlinkedScrollListenerRef.current) {\n      removeUnlinkedScrollListenerRef.current();\n      removeUnlinkedScrollListenerRef.current = undefined;\n    }\n  }, 100);\n\n  useEffect(() => {\n    const { viewport } = scrollAreaContext;\n    if (viewport) {\n      const handleScroll = () => {\n        debounceScrollEnd();\n        if (!removeUnlinkedScrollListenerRef.current) {\n          const listener = addUnlinkedScrollListener(viewport, onThumbPositionChange);\n          removeUnlinkedScrollListenerRef.current = listener;\n          onThumbPositionChange();\n        }\n      };\n      onThumbPositionChange();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n\n    return undefined;\n  }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);\n\n  return (\n    <div\n      data-state={scrollbarContext.hasThumb ? 'visible' : 'hidden'}\n      {...others}\n      ref={composedRef}\n      style={{\n        width: 'var(--sa-thumb-width)',\n        height: 'var(--sa-thumb-height)',\n        ...style,\n      }}\n      onPointerDownCapture={composeEventHandlers(props.onPointerDownCapture, (event) => {\n        const thumb = event.target as HTMLElement;\n        const thumbRect = thumb.getBoundingClientRect();\n        const x = event.clientX - thumbRect.left;\n        const y = event.clientY - thumbRect.top;\n        scrollbarContext.onThumbPointerDown({ x, y });\n      })}\n      onPointerUp={composeEventHandlers(props.onPointerUp, scrollbarContext.onThumbPointerUp)}\n    />\n  );\n});\n\ninterface ScrollAreaThumbProps extends ThumbProps {\n  forceMount?: true;\n}\n\nexport const ScrollAreaThumb = React.forwardRef<HTMLDivElement, ScrollAreaThumbProps>(\n  (props, forwardedRef) => {\n    const { forceMount, ...thumbProps } = props;\n    const scrollbarContext = useScrollbarContext();\n\n    if (forceMount || scrollbarContext.hasThumb) {\n      return <Thumb ref={forwardedRef} {...thumbProps} />;\n    }\n\n    return null;\n  }\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}