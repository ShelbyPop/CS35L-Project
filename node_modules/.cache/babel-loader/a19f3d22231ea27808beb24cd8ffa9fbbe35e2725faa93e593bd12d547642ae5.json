{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { useClipboard } from '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nconst defaultProps = {\n  timeout: 1e3\n};\nfunction CopyButton(props) {\n  const {\n    children,\n    timeout,\n    value,\n    ...others\n  } = useProps(\"CopyButton\", defaultProps, props);\n  const clipboard = useClipboard({\n    timeout\n  });\n  const copy = () => clipboard.copy(value);\n  return /* @__PURE__ */React.createElement(React.Fragment, null, children({\n    copy,\n    copied: clipboard.copied,\n    ...others\n  }));\n}\nCopyButton.displayName = \"@mantine/core/CopyButton\";\nexport { CopyButton };","map":{"version":3,"names":["defaultProps","timeout","CopyButton","props","children","value","others","useProps","clipboard","useClipboard","copy","React","createElement","Fragment","copied","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/CopyButton/CopyButton.tsx"],"sourcesContent":["import React from 'react';\nimport { useClipboard } from '@mantine/hooks';\nimport { useProps } from '../../core';\n\nexport interface CopyButtonProps {\n  /** Children callback, provides current status and copy function as an argument */\n  children: (payload: { copied: boolean; copy: () => void }) => React.ReactNode;\n\n  /** Value that will be copied to the clipboard when the button is clicked */\n  value: string;\n\n  /** Copied status timeout in ms, `1000` by default */\n  timeout?: number;\n}\n\nconst defaultProps: Partial<CopyButtonProps> = {\n  timeout: 1000,\n};\n\nexport function CopyButton(props: CopyButtonProps) {\n  const { children, timeout, value, ...others } = useProps('CopyButton', defaultProps, props);\n  const clipboard = useClipboard({ timeout });\n  const copy = () => clipboard.copy(value);\n  return <>{children({ copy, copied: clipboard.copied, ...others })}</>;\n}\n\nCopyButton.displayName = '@mantine/core/CopyButton';\n"],"mappings":";;;;;;;;;;;;AAIA,MAAMA,YAAY,GAAG;EACnBC,OAAO,EAAE;AACX,CAAC;AACM,SAASC,UAAUA,CAACC,KAAK,EAAE;EAChC,MAAM;IAAEC,QAAQ;IAAEH,OAAO;IAAEI,KAAK;IAAE,GAAGC;EAAM,CAAE,GAAGC,QAAQ,CAAC,YAAY,EAAEP,YAAY,EAAEG,KAAK,CAAC;EAC3F,MAAMK,SAAS,GAAGC,YAAY,CAAC;IAAER;EAAS,EAAC;EAC3C,MAAMS,IAAI,GAAGA,CAAA,KAAMF,SAAS,CAACE,IAAI,CAACL,KAAK,CAAC;EACxC,sBAAuBM,KAAK,CAACC,aAAa,CAACD,KAAK,CAACE,QAAQ,EAAE,IAAI,EAAET,QAAQ,CAAC;IAAEM,IAAI;IAAEI,MAAM,EAAEN,SAAS,CAACM,MAAM;IAAE,GAAGR;EAAM,CAAE,CAAC,CAAC;AAC3H;AACAJ,UAAU,CAACa,WAAW,GAAG,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}