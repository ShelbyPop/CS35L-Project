{"ast":null,"code":"'use client';\n\nimport 'react';\nimport { createOptionalContext } from '../../core/utils/create-optional-context/create-optional-context.mjs';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nconst [ChipGroupProvider, useChipGroupContext] = createOptionalContext();\nexport { ChipGroupProvider, useChipGroupContext };","map":{"version":3,"names":["ChipGroupProvider","useChipGroupContext","createOptionalContext"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Chip/ChipGroup.context.ts"],"sourcesContent":["import { createOptionalContext } from '../../core';\n\ninterface ChipGroupContextValue {\n  isChipSelected: (value: string) => boolean;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  multiple: boolean;\n}\n\nexport const [ChipGroupProvider, useChipGroupContext] =\n  createOptionalContext<ChipGroupContextValue>();\n"],"mappings":";;;;;;;;;;;;AAEY,MAAC,CAACA,iBAAiB,EAAEC,mBAAmB,CAAC,GAAGC,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}