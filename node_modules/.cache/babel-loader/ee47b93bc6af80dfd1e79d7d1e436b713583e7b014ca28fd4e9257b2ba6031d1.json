{"ast":null,"code":"var _jsxFileName = \"/Users/virounikamina/pompom/src/LoginInput.js\",\n  _s = $RefreshSig$();\n// src/Register.js\nimport { TextInput, Button, Group, Box } from '@mantine/core';\nimport { useForm } from '@mantine/form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const form = useForm({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    // Validate input fields using regex\n    validate: {\n      username: value => /^\\S+$/.test(value) ? null : 'Invalid username (has whitespace or is empty)',\n      password: value => /^\\S{6}\\S*$/.test(value) ? null : 'Invalid password (has whitespace or less than 6 characters)'\n    }\n  });\n  const handleRegister = async () => {\n    try {\n      const response = await fetch('http://api/pompom/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: form.values.username,\n          password: form.values.password\n        })\n      });\n      if (response.ok) {\n        console.log('Registration successful');\n      } else {\n        const errorData = await response.json();\n        console.error('Registration failed', errorData.message);\n      }\n    } catch (error) {\n      console.error('Unexpected error:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    maw: 340,\n    mx: \"auto\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: form.onSubmit(handleRegister),\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        label: \"Username\",\n        placeholder: \"Your username\",\n        ...form.getInputProps('username')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        label: \"Password\",\n        placeholder: \"Your password\",\n        type: \"password\",\n        ...form.getInputProps('password')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Group, {\n        justify: \"flex-end\",\n        mt: \"md\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"woqMTX6igxsX6/9vX4dQZlxR7yY=\", false, function () {\n  return [useForm];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["TextInput","Button","Group","Box","useForm","jsxDEV","_jsxDEV","Register","_s","form","initialValues","username","password","validate","value","test","handleRegister","response","fetch","method","headers","body","JSON","stringify","values","ok","console","log","errorData","json","error","message","maw","mx","children","onSubmit","label","placeholder","getInputProps","fileName","_jsxFileName","lineNumber","columnNumber","type","justify","mt","_c","$RefreshReg$"],"sources":["/Users/virounikamina/pompom/src/LoginInput.js"],"sourcesContent":["// src/Register.js\nimport { TextInput, Button, Group, Box } from '@mantine/core';\nimport { useForm } from '@mantine/form';\n\nexport default function Register() {\n  const form = useForm({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n\n    // Validate input fields using regex\n    validate: {\n      username: (value) => (/^\\S+$/.test(value) ? null : 'Invalid username (has whitespace or is empty)'),\n      password: (value) => (/^\\S{6}\\S*$/.test(value) ? null : 'Invalid password (has whitespace or less than 6 characters)')\n    },\n  });\n\n  const handleRegister = async () => {\n    try {\n      const response = await fetch('http://api/pompom/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username: form.values.username,\n          password: form.values.password,\n        }),\n      });\n  \n      if (response.ok) {\n        console.log('Registration successful');\n      } else {\n        const errorData = await response.json();\n        console.error('Registration failed', errorData.message);\n      }\n    } catch (error) {\n      console.error('Unexpected error:', error.message);\n    }\n  };\n\n  return (\n    <Box maw={340} mx=\"auto\">\n      <form onSubmit={form.onSubmit(handleRegister)}>\n        <TextInput\n          label=\"Username\"\n          placeholder=\"Your username\"\n          {...form.getInputProps('username')}\n        />\n\n        <TextInput\n          label=\"Password\"\n          placeholder=\"Your password\"\n          type=\"password\"\n          {...form.getInputProps('password')}\n        />\n\n        <Group justify=\"flex-end\" mt=\"md\">\n          <Button type=\"submit\">Register</Button>\n        </Group>\n      </form>\n    </Box>\n  );\n}"],"mappings":";;AAAA;AACA,SAASA,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,GAAG,QAAQ,eAAe;AAC7D,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAMC,IAAI,GAAGL,OAAO,CAAC;IACnBM,aAAa,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;IAED;IACAC,QAAQ,EAAE;MACRF,QAAQ,EAAGG,KAAK,IAAM,OAAO,CAACC,IAAI,CAACD,KAAK,CAAC,GAAG,IAAI,GAAG,+CAAgD;MACnGF,QAAQ,EAAGE,KAAK,IAAM,YAAY,CAACC,IAAI,CAACD,KAAK,CAAC,GAAG,IAAI,GAAG;IAC1D;EACF,CAAC,CAAC;EAEF,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;QACzDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBZ,QAAQ,EAAEF,IAAI,CAACe,MAAM,CAACb,QAAQ;UAC9BC,QAAQ,EAAEH,IAAI,CAACe,MAAM,CAACZ;QACxB,CAAC;MACH,CAAC,CAAC;MAEF,IAAIK,QAAQ,CAACQ,EAAE,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACxC,CAAC,MAAM;QACL,MAAMC,SAAS,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QACvCH,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAEF,SAAS,CAACG,OAAO,CAAC;MACzD;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAACC,OAAO,CAAC;IACnD;EACF,CAAC;EAED,oBACEzB,OAAA,CAACH,GAAG;IAAC6B,GAAG,EAAE,GAAI;IAACC,EAAE,EAAC,MAAM;IAAAC,QAAA,eACtB5B,OAAA;MAAM6B,QAAQ,EAAE1B,IAAI,CAAC0B,QAAQ,CAACnB,cAAc,CAAE;MAAAkB,QAAA,gBAC5C5B,OAAA,CAACN,SAAS;QACRoC,KAAK,EAAC,UAAU;QAChBC,WAAW,EAAC,eAAe;QAAA,GACvB5B,IAAI,CAAC6B,aAAa,CAAC,UAAU;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eAEFpC,OAAA,CAACN,SAAS;QACRoC,KAAK,EAAC,UAAU;QAChBC,WAAW,EAAC,eAAe;QAC3BM,IAAI,EAAC,UAAU;QAAA,GACXlC,IAAI,CAAC6B,aAAa,CAAC,UAAU;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eAEFpC,OAAA,CAACJ,KAAK;QAAC0C,OAAO,EAAC,UAAU;QAACC,EAAE,EAAC,IAAI;QAAAX,QAAA,eAC/B5B,OAAA,CAACL,MAAM;UAAC0C,IAAI,EAAC,QAAQ;UAAAT,QAAA,EAAC;QAAQ;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAClC,EAAA,CA5DuBD,QAAQ;EAAA,QACjBH,OAAO;AAAA;AAAA0C,EAAA,GADEvC,QAAQ;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}