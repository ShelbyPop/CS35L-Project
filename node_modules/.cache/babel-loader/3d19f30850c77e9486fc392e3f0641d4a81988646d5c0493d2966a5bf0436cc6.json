{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport 'clsx';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Center.module.css.mjs';\nconst defaultProps = {};\nconst Center = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Center\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    inline,\n    mod,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Center\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars\n  });\n  return /* @__PURE__ */React.createElement(Box, {\n    ref,\n    mod: [{\n      inline\n    }, mod],\n    ...getStyles(\"root\"),\n    ...others\n  });\n});\nCenter.classes = classes;\nCenter.displayName = \"@mantine/core/Center\";\nexport { Center };","map":{"version":3,"names":["defaultProps","Center","polymorphicFactory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","inline","mod","others","getStyles","useStyles","name","classes","React","createElement","Box","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Center/Center.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Center.module.css';\n\nexport type CenterStylesNames = 'root';\n\nexport interface CenterProps extends BoxProps, StylesApiProps<CenterFactory> {\n  /** Content that should be centered vertically and horizontally */\n  children?: React.ReactNode;\n\n  /** Determines whether `inline-flex` should be used instead of `flex`, `false` by default */\n  inline?: boolean;\n}\n\nexport type CenterFactory = PolymorphicFactory<{\n  props: CenterProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: CenterStylesNames;\n}>;\n\nconst defaultProps: Partial<CenterProps> = {};\n\nexport const Center = polymorphicFactory<CenterFactory>((_props, ref) => {\n  const props = useProps('Center', defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, inline, mod, ...others } = props;\n\n  const getStyles = useStyles<CenterFactory>({\n    name: 'Center',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n  });\n\n  return <Box ref={ref} mod={[{ inline }, mod]} {...getStyles('root')} {...others} />;\n});\n\nCenter.classes = classes;\nCenter.displayName = '@mantine/core/Center';\n"],"mappings":";;;;;;;;;;;;;;;AASA,MAAMA,YAAY,GAAG,EAAE;AACX,MAACC,MAAM,GAAGC,kBAAkB,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EACxD,MAAMC,KAAK,GAAGC,QAAQ,CAAC,QAAQ,EAAEN,YAAY,EAAEG,MAAM,CAAC;EACtD,MAAM;IAAEI,UAAU;IAAEC,SAAS;IAAEC,KAAK;IAAEC,MAAM;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,MAAM;IAAEC,GAAG;IAAE,GAAGC;EAAM,CAAE,GAAGV,KAAK;EAC9F,MAAMW,SAAS,GAAGC,SAAS,CAAC;IAC1BC,IAAI,EAAE,QAAQ;IACdb,KAAK;IACLc,OAAO;IACPX,SAAS;IACTC,KAAK;IACLF,UAAU;IACVG,MAAM;IACNC,QAAQ;IACRC;EACJ,CAAG,CAAC;EACF,OAAuB,eAAAQ,KAAK,CAACC,aAAa,CAACC,GAAG,EAAE;IAAElB,GAAG;IAAEU,GAAG,EAAE,CAAC;MAAED;IAAQ,GAAEC,GAAG,CAAC;IAAE,GAAGE,SAAS,CAAC,MAAM,CAAC;IAAE,GAAGD;EAAM,CAAE,CAAC;AACnH,CAAC,CAAE;AACHd,MAAM,CAACkB,OAAO,GAAGA,OAAO;AACxBlB,MAAM,CAACsB,WAAW,GAAG,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}