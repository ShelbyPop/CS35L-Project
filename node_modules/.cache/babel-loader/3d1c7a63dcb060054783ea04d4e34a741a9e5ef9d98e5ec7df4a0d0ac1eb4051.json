{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Input } from '../../Input/Input.mjs';\nimport { useComboboxContext } from '../Combobox.context.mjs';\nimport { useComboboxTargetProps } from '../use-combobox-target-props/use-combobox-target-props.mjs';\nimport classes from '../Combobox.module.css.mjs';\nconst defaultProps = {\n  withAriaAttributes: true,\n  withKeyboardNavigation: true\n};\nconst ComboboxSearch = factory((_props, ref) => {\n  const props = useProps(\"ComboboxSearch\", defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    withAriaAttributes,\n    onKeyDown,\n    withKeyboardNavigation,\n    size,\n    ...others\n  } = props;\n  const ctx = useComboboxContext();\n  const _styles = ctx.getStyles(\"search\");\n  const targetProps = useComboboxTargetProps({\n    targetType: \"input\",\n    withAriaAttributes,\n    withKeyboardNavigation,\n    withExpandedAttribute: false,\n    onKeyDown\n  });\n  return /* @__PURE__ */React.createElement(Input, {\n    ref: useMergedRef(ref, ctx.store.searchRef),\n    classNames: [{\n      input: _styles.className\n    }, classNames],\n    styles: [{\n      input: _styles.style\n    }, styles],\n    size: size || ctx.size,\n    ...targetProps,\n    ...others,\n    __staticSelector: \"Combobox\"\n  });\n});\nComboboxSearch.classes = classes;\nComboboxSearch.displayName = \"@mantine/core/ComboboxSearch\";\nexport { ComboboxSearch };","map":{"version":3,"names":["defaultProps","withAriaAttributes","withKeyboardNavigation","ComboboxSearch","factory","_props","ref","props","useProps","classNames","styles","unstyled","vars","onKeyDown","size","others","ctx","useComboboxContext","_styles","getStyles","targetProps","useComboboxTargetProps","targetType","withExpandedAttribute","React","createElement","Input","useMergedRef","store","searchRef","input","className","style","__staticSelector","classes","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Combobox/ComboboxSearch/ComboboxSearch.tsx"],"sourcesContent":["import React from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { ElementProps, factory, Factory, useProps } from '../../../core';\nimport { Input, InputProps, InputStylesNames } from '../../Input/Input';\nimport { useComboboxContext } from '../Combobox.context';\nimport { useComboboxTargetProps } from '../use-combobox-target-props/use-combobox-target-props';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxSearchStylesNames = InputStylesNames;\n\nexport interface ComboboxSearchProps extends InputProps, ElementProps<'input', 'size'> {\n  /** Determines whether the search input should have `aria-` attribute, `true` by default */\n  withAriaAttributes?: boolean;\n\n  /** Determines whether the search input should handle keyboard navigation, `true` by default */\n  withKeyboardNavigation?: boolean;\n}\n\nexport type ComboboxSearchFactory = Factory<{\n  props: ComboboxSearchProps;\n  ref: HTMLInputElement;\n  stylesNames: ComboboxSearchStylesNames;\n}>;\n\nconst defaultProps: Partial<ComboboxSearchProps> = {\n  withAriaAttributes: true,\n  withKeyboardNavigation: true,\n};\n\nexport const ComboboxSearch = factory<ComboboxSearchFactory>((_props, ref) => {\n  const props = useProps('ComboboxSearch', defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    withAriaAttributes,\n    onKeyDown,\n    withKeyboardNavigation,\n    size,\n    ...others\n  } = props;\n\n  const ctx = useComboboxContext();\n  const _styles = ctx.getStyles('search');\n\n  const targetProps = useComboboxTargetProps({\n    targetType: 'input',\n    withAriaAttributes,\n    withKeyboardNavigation,\n    withExpandedAttribute: false,\n    onKeyDown,\n  });\n\n  return (\n    <Input\n      ref={useMergedRef(ref, ctx.store.searchRef)}\n      classNames={[{ input: _styles.className }, classNames] as any}\n      styles={[{ input: _styles.style }, styles] as any}\n      size={size || ctx.size}\n      {...targetProps}\n      {...others}\n      __staticSelector=\"Combobox\"\n    />\n  );\n});\n\nComboboxSearch.classes = classes;\nComboboxSearch.displayName = '@mantine/core/ComboboxSearch';\n"],"mappings":";;;;;;;;;;;;;;;;;AAQA,MAAMA,YAAY,GAAG;EACnBC,kBAAkB,EAAE,IAAI;EACxBC,sBAAsB,EAAE;AAC1B,CAAC;AACW,MAACC,cAAc,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EACrD,MAAMC,KAAK,GAAGC,QAAQ,CAAC,gBAAgB,EAAER,YAAY,EAAEK,MAAM,CAAC;EAC9D,MAAM;IACJI,UAAU;IACVC,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJX,kBAAkB;IAClBY,SAAS;IACTX,sBAAsB;IACtBY,IAAI;IACJ,GAAGC;EACJ,IAAGR,KAAK;EACT,MAAMS,GAAG,GAAGC,kBAAkB,EAAE;EAChC,MAAMC,OAAO,GAAGF,GAAG,CAACG,SAAS,CAAC,QAAQ,CAAC;EACvC,MAAMC,WAAW,GAAGC,sBAAsB,CAAC;IACzCC,UAAU,EAAE,OAAO;IACnBrB,kBAAkB;IAClBC,sBAAsB;IACtBqB,qBAAqB,EAAE,KAAK;IAC5BV;EACJ,CAAG,CAAC;EACF,sBAAuBW,KAAK,CAACC,aAAa,CACxCC,KAAK,EACL;IACEpB,GAAG,EAAEqB,YAAY,CAACrB,GAAG,EAAEU,GAAG,CAACY,KAAK,CAACC,SAAS,CAAC;IAC3CpB,UAAU,EAAE,CAAC;MAAEqB,KAAK,EAAEZ,OAAO,CAACa;IAAS,CAAE,EAAEtB,UAAU,CAAC;IACtDC,MAAM,EAAE,CAAC;MAAEoB,KAAK,EAAEZ,OAAO,CAACc;IAAK,CAAE,EAAEtB,MAAM,CAAC;IAC1CI,IAAI,EAAEA,IAAI,IAAIE,GAAG,CAACF,IAAI;IACtB,GAAGM,WAAW;IACd,GAAGL,MAAM;IACTkB,gBAAgB,EAAE;EACnB,CACL,CAAG;AACH,CAAC,CAAE;AACH9B,cAAc,CAAC+B,OAAO,GAAGA,OAAO;AAChC/B,cAAc,CAACgC,WAAW,GAAG,8BAA8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}