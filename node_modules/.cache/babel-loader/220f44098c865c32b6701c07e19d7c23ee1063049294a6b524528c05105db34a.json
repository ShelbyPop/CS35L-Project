{"ast":null,"code":"'use client';\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useUncontrolled, useMove } from '@mantine/hooks';\nimport { rem } from '../../../core/utils/units-converters/rem.mjs';\nimport { getSize, getRadius } from '../../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../../core/styles-api/use-styles/use-styles.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport { useDirection } from '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { SliderProvider } from '../Slider.context.mjs';\nimport { SliderRoot } from '../SliderRoot/SliderRoot.mjs';\nimport { Thumb } from '../Thumb/Thumb.mjs';\nimport { Track } from '../Track/Track.mjs';\nimport { getChangeValue } from '../utils/get-change-value/get-change-value.mjs';\nimport { getClientPosition } from '../utils/get-client-position/get-client-position.mjs';\nimport { getFloatingValue } from '../utils/get-floating-value/get-gloating-value.mjs';\nimport { getPosition } from '../utils/get-position/get-position.mjs';\nimport { getPrecision } from '../utils/get-precision/get-precision.mjs';\nimport classes from '../Slider.module.css.mjs';\nconst varsResolver = createVarsResolver((theme, {\n  size,\n  color,\n  thumbSize,\n  radius\n}) => ({\n  root: {\n    \"--slider-size\": getSize(size, \"slider-size\"),\n    \"--slider-color\": color ? getThemeColor(color, theme) : void 0,\n    \"--slider-radius\": radius === void 0 ? void 0 : getRadius(radius),\n    \"--slider-thumb-size\": thumbSize !== void 0 ? rem(thumbSize) : \"calc(var(--slider-size) * 2)\"\n  }\n}));\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  minRange: 10,\n  step: 1,\n  marks: [],\n  label: f => f,\n  labelTransitionProps: {\n    transition: \"fade\",\n    duration: 0\n  },\n  labelAlwaysOn: false,\n  showLabelOnHover: true,\n  disabled: false,\n  scale: v => v\n};\nconst RangeSlider = factory((_props, ref) => {\n  const props = useProps(\"RangeSlider\", defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    value,\n    onChange,\n    onChangeEnd,\n    size,\n    min,\n    max,\n    minRange,\n    maxRange,\n    step,\n    precision: _precision,\n    defaultValue,\n    name,\n    marks,\n    label,\n    labelTransitionProps,\n    labelAlwaysOn,\n    thumbFromLabel,\n    thumbToLabel,\n    showLabelOnHover,\n    thumbChildren,\n    disabled,\n    unstyled,\n    scale,\n    inverted,\n    className,\n    style,\n    vars,\n    hiddenInputProps,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Slider\",\n    props,\n    classes,\n    classNames,\n    className,\n    styles,\n    style,\n    vars,\n    varsResolver,\n    unstyled\n  });\n  const {\n    dir\n  } = useDirection();\n  const [focused, setFocused] = useState(-1);\n  const [hovered, setHovered] = useState(false);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: [min, max],\n    onChange\n  });\n  const valueRef = useRef(_value);\n  const thumbs = useRef([]);\n  const thumbIndex = useRef(void 0);\n  const positions = [getPosition({\n    value: _value[0],\n    min,\n    max\n  }), getPosition({\n    value: _value[1],\n    min,\n    max\n  })];\n  const precision = _precision ?? getPrecision(step);\n  const _setValue = val => {\n    setValue(val);\n    valueRef.current = val;\n  };\n  useEffect(() => {\n    if (Array.isArray(value)) {\n      valueRef.current = value;\n    }\n  }, Array.isArray(value) ? [value[0], value[1]] : [null, null]);\n  const setRangedValue = (val, index, triggerChangeEnd) => {\n    const clone = [...valueRef.current];\n    clone[index] = val;\n    if (index === 0) {\n      if (val > clone[1] - (minRange - 1e-9)) {\n        clone[1] = Math.min(val + minRange, max);\n      }\n      if (val > (max - (minRange - 1e-9) || min)) {\n        clone[index] = valueRef.current[index];\n      }\n      if (clone[1] - val > maxRange) {\n        clone[1] = val + maxRange;\n      }\n    }\n    if (index === 1) {\n      if (val < clone[0] + minRange) {\n        clone[0] = Math.max(val - minRange, min);\n      }\n      if (val < clone[0] + minRange) {\n        clone[index] = valueRef.current[index];\n      }\n      if (val - clone[0] > maxRange) {\n        clone[0] = val - maxRange;\n      }\n    }\n    clone[0] = getFloatingValue(clone[0], precision);\n    clone[1] = getFloatingValue(clone[1], precision);\n    _setValue(clone);\n    if (triggerChangeEnd) {\n      onChangeEnd?.(valueRef.current);\n    }\n  };\n  const handleChange = val => {\n    if (!disabled) {\n      const nextValue = getChangeValue({\n        value: val,\n        min,\n        max,\n        step,\n        precision\n      });\n      setRangedValue(nextValue, thumbIndex.current, false);\n    }\n  };\n  const {\n    ref: container,\n    active\n  } = useMove(({\n    x\n  }) => handleChange(x), {\n    onScrubEnd: () => onChangeEnd?.(valueRef.current)\n  }, dir);\n  function handleThumbMouseDown(index) {\n    thumbIndex.current = index;\n  }\n  const handleTrackMouseDownCapture = event => {\n    container.current.focus();\n    const rect = container.current.getBoundingClientRect();\n    const changePosition = getClientPosition(event.nativeEvent);\n    const changeValue = getChangeValue({\n      value: changePosition - rect.left,\n      max,\n      min,\n      step,\n      containerWidth: rect.width\n    });\n    const nearestHandle = Math.abs(_value[0] - changeValue) > Math.abs(_value[1] - changeValue) ? 1 : 0;\n    const _nearestHandle = dir === \"ltr\" ? nearestHandle : nearestHandle === 1 ? 0 : 1;\n    thumbIndex.current = _nearestHandle;\n  };\n  const getFocusedThumbIndex = () => {\n    if (focused !== 1 && focused !== 0) {\n      setFocused(0);\n      return 0;\n    }\n    return focused;\n  };\n  const handleTrackKeydownCapture = event => {\n    if (!disabled) {\n      switch (event.key) {\n        case \"ArrowUp\":\n          {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(getFloatingValue(Math.min(Math.max(valueRef.current[focusedIndex] + step, min), max), precision), focusedIndex, true);\n            break;\n          }\n        case \"ArrowRight\":\n          {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(getFloatingValue(Math.min(Math.max(dir === \"rtl\" ? valueRef.current[focusedIndex] - step : valueRef.current[focusedIndex] + step, min), max), precision), focusedIndex, true);\n            break;\n          }\n        case \"ArrowDown\":\n          {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(getFloatingValue(Math.min(Math.max(valueRef.current[focusedIndex] - step, min), max), precision), focusedIndex, true);\n            break;\n          }\n        case \"ArrowLeft\":\n          {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(getFloatingValue(Math.min(Math.max(dir === \"rtl\" ? valueRef.current[focusedIndex] + step : valueRef.current[focusedIndex] - step, min), max), precision), focusedIndex, true);\n            break;\n          }\n      }\n    }\n  };\n  const sharedThumbProps = {\n    max,\n    min,\n    size,\n    labelTransitionProps,\n    labelAlwaysOn,\n    onBlur: () => setFocused(-1)\n  };\n  const hasArrayThumbChildren = Array.isArray(thumbChildren);\n  return /* @__PURE__ */React.createElement(SliderProvider, {\n    value: {\n      getStyles\n    }\n  }, /* @__PURE__ */React.createElement(SliderRoot, {\n    ...others,\n    size,\n    ref,\n    disabled\n  }, /* @__PURE__ */React.createElement(Track, {\n    offset: positions[0],\n    marksOffset: _value[0],\n    filled: positions[1] - positions[0],\n    marks,\n    inverted,\n    min,\n    max,\n    value: _value[1],\n    disabled,\n    containerProps: {\n      ref: container,\n      onMouseEnter: showLabelOnHover ? () => setHovered(true) : void 0,\n      onMouseLeave: showLabelOnHover ? () => setHovered(false) : void 0,\n      onTouchStartCapture: handleTrackMouseDownCapture,\n      onTouchEndCapture: () => {\n        thumbIndex.current = -1;\n      },\n      onMouseDownCapture: handleTrackMouseDownCapture,\n      onMouseUpCapture: () => {\n        thumbIndex.current = -1;\n      },\n      onKeyDownCapture: handleTrackKeydownCapture\n    }\n  }, /* @__PURE__ */React.createElement(Thumb, {\n    ...sharedThumbProps,\n    value: scale(_value[0]),\n    position: positions[0],\n    dragging: active,\n    label: typeof label === \"function\" ? label(getFloatingValue(scale(_value[0]), precision)) : label,\n    ref: node => {\n      thumbs.current[0] = node;\n    },\n    thumbLabel: thumbFromLabel,\n    onMouseDown: () => handleThumbMouseDown(0),\n    onFocus: () => setFocused(0),\n    showLabelOnHover,\n    isHovered: hovered,\n    disabled\n  }, hasArrayThumbChildren ? thumbChildren[0] : thumbChildren), /* @__PURE__ */React.createElement(Thumb, {\n    ...sharedThumbProps,\n    thumbLabel: thumbToLabel,\n    value: scale(_value[1]),\n    position: positions[1],\n    dragging: active,\n    label: typeof label === \"function\" ? label(getFloatingValue(scale(_value[1]), precision)) : label,\n    ref: node => {\n      thumbs.current[1] = node;\n    },\n    onMouseDown: () => handleThumbMouseDown(1),\n    onFocus: () => setFocused(1),\n    showLabelOnHover,\n    isHovered: hovered,\n    disabled\n  }, hasArrayThumbChildren ? thumbChildren[1] : thumbChildren)), /* @__PURE__ */React.createElement(\"input\", {\n    type: \"hidden\",\n    name: `${name}_from`,\n    value: _value[0],\n    ...hiddenInputProps\n  }), /* @__PURE__ */React.createElement(\"input\", {\n    type: \"hidden\",\n    name: `${name}_to`,\n    value: _value[1],\n    ...hiddenInputProps\n  })));\n});\nRangeSlider.classes = classes;\nRangeSlider.displayName = \"@mantine/core/RangeSlider\";\nexport { RangeSlider };","map":{"version":3,"names":["varsResolver","createVarsResolver","theme","size","color","thumbSize","radius","root","getSize","getThemeColor","getRadius","rem","defaultProps","min","max","minRange","step","marks","label","f","labelTransitionProps","transition","duration","labelAlwaysOn","showLabelOnHover","disabled","scale","v","RangeSlider","factory","_props","ref","props","useProps","classNames","styles","value","onChange","onChangeEnd","maxRange","precision","_precision","defaultValue","name","thumbFromLabel","thumbToLabel","thumbChildren","unstyled","inverted","className","style","vars","hiddenInputProps","others","getStyles","useStyles","classes","dir","useDirection","focused","setFocused","useState","hovered","setHovered","_value","setValue","useUncontrolled","finalValue","valueRef","useRef","thumbs","thumbIndex","positions","getPosition","getPrecision","_setValue","val","current","useEffect","Array","isArray","setRangedValue","index","triggerChangeEnd","clone","Math","getFloatingValue","handleChange","nextValue","getChangeValue","container","active","useMove","x","onScrubEnd","handleThumbMouseDown","handleTrackMouseDownCapture","event","focus","rect","getBoundingClientRect","changePosition","getClientPosition","nativeEvent","changeValue","left","containerWidth","width","nearestHandle","abs","_nearestHandle","getFocusedThumbIndex","handleTrackKeydownCapture","key","preventDefault","focusedIndex","sharedThumbProps","onBlur","hasArrayThumbChildren","React","createElement","SliderProvider","SliderRoot","Track","offset","marksOffset","filled","containerProps","onMouseEnter","onMouseLeave","onTouchStartCapture","onTouchEndCapture","onMouseDownCapture","onMouseUpCapture","onKeyDownCapture","Thumb","position","dragging","node","thumbLabel","onMouseDown","onFocus","isHovered","type","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Slider/RangeSlider/RangeSlider.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useMove, useUncontrolled } from '@mantine/hooks';\nimport {\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  rem,\n  StylesApiProps,\n  useDirection,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { TransitionOverride } from '../../Transition';\nimport { SliderCssVariables, SliderProvider, SliderStylesNames } from '../Slider.context';\nimport { SliderRoot } from '../SliderRoot/SliderRoot';\nimport { Thumb } from '../Thumb/Thumb';\nimport { Track } from '../Track/Track';\nimport { getChangeValue } from '../utils/get-change-value/get-change-value';\nimport { getClientPosition } from '../utils/get-client-position/get-client-position';\nimport { getFloatingValue } from '../utils/get-floating-value/get-gloating-value';\nimport { getPosition } from '../utils/get-position/get-position';\nimport { getPrecision } from '../utils/get-precision/get-precision';\nimport classes from '../Slider.module.css';\n\nexport type RangeSliderValue = [number, number];\n\nexport interface RangeSliderProps\n  extends BoxProps,\n    StylesApiProps<RangeSliderFactory>,\n    ElementProps<'div', 'onChange' | 'value' | 'defaultValue'> {\n  /** Key of `theme.colors` or any valid CSS color, controls color of track and thumb, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `'xl'` by default */\n  radius?: MantineRadius;\n\n  /** Controls size of the track, `'md'` by default */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Minimal possible value, `0` by default */\n  min?: number;\n\n  /** Maximum possible value, `100` by default */\n  max?: number;\n\n  /** Number by which value will be incremented/decremented with thumb drag and arrows, `1` by default */\n  step?: number;\n\n  /** Number of significant digits after the decimal point */\n  precision?: number;\n\n  /** Controlled component value */\n  value?: RangeSliderValue;\n\n  /** Uncontrolled component default value */\n  defaultValue?: RangeSliderValue;\n\n  /** Called when value changes */\n  onChange?: (value: RangeSliderValue) => void;\n\n  /** Called when user stops dragging slider or changes value with arrows */\n  onChangeEnd?: (value: RangeSliderValue) => void;\n\n  /** Hidden input name, use with uncontrolled component */\n  name?: string;\n\n  /** Marks displayed on the track */\n  marks?: { value: number; label?: React.ReactNode }[];\n\n  /** Function to generate label or any react node to render instead, set to null to disable label */\n  label?: React.ReactNode | ((value: number) => React.ReactNode);\n\n  /** Props passed down to the `Transition` component, `{ transition: 'fade', duration: 0 }` by default */\n  labelTransitionProps?: TransitionOverride;\n\n  /** Determines whether the label should be visible when the slider is not being dragged or hovered, `false` by default */\n  labelAlwaysOn?: boolean;\n\n  /** Determines whether the label should be displayed when the slider is hovered, `true` by default */\n  showLabelOnHover?: boolean;\n\n  /** Content rendered inside thumb */\n  thumbChildren?: React.ReactNode;\n\n  /** Disables slider */\n  disabled?: boolean;\n\n  /** Thumb `width` and `height`, by default value is computed based on `size` prop */\n  thumbSize?: number | string;\n\n  /** A transformation function to change the scale of the slider */\n  scale?: (value: number) => number;\n\n  /** Determines whether track values representation should be inverted, `false` by default */\n  inverted?: boolean;\n\n  /** Minimal range interval, `10` by default */\n  minRange?: number;\n\n  /** Maximum range interval, `Infinity` by default */\n  maxRange?: number;\n\n  /** First thumb `aria-label` */\n  thumbFromLabel?: string;\n\n  /** Second thumb `aria-label` */\n  thumbToLabel?: string;\n\n  /** Props passed down to the hidden input */\n  hiddenInputProps?: React.ComponentPropsWithoutRef<'input'>;\n}\n\nexport type RangeSliderFactory = Factory<{\n  props: RangeSliderProps;\n  ref: HTMLDivElement;\n  stylesNames: SliderStylesNames;\n  vars: SliderCssVariables;\n}>;\n\nconst varsResolver = createVarsResolver<RangeSliderFactory>(\n  (theme, { size, color, thumbSize, radius }) => ({\n    root: {\n      '--slider-size': getSize(size, 'slider-size'),\n      '--slider-color': color ? getThemeColor(color, theme) : undefined,\n      '--slider-radius': radius === undefined ? undefined : getRadius(radius),\n      '--slider-thumb-size':\n        thumbSize !== undefined ? rem(thumbSize) : 'calc(var(--slider-size) * 2)',\n    },\n  })\n);\n\nconst defaultProps: Partial<RangeSliderProps> = {\n  min: 0,\n  max: 100,\n  minRange: 10,\n  step: 1,\n  marks: [],\n  label: (f) => f,\n  labelTransitionProps: { transition: 'fade', duration: 0 },\n  labelAlwaysOn: false,\n  showLabelOnHover: true,\n  disabled: false,\n  scale: (v) => v,\n};\n\nexport const RangeSlider = factory<RangeSliderFactory>((_props, ref) => {\n  const props = useProps('RangeSlider', defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    value,\n    onChange,\n    onChangeEnd,\n    size,\n    min,\n    max,\n    minRange,\n    maxRange,\n    step,\n    precision: _precision,\n    defaultValue,\n    name,\n    marks,\n    label,\n    labelTransitionProps,\n    labelAlwaysOn,\n    thumbFromLabel,\n    thumbToLabel,\n    showLabelOnHover,\n    thumbChildren,\n    disabled,\n    unstyled,\n    scale,\n    inverted,\n    className,\n    style,\n    vars,\n    hiddenInputProps,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<RangeSliderFactory>({\n    name: 'Slider',\n    props,\n    classes,\n    classNames,\n    className,\n    styles,\n    style,\n    vars,\n    varsResolver,\n    unstyled,\n  });\n\n  const { dir } = useDirection();\n  const [focused, setFocused] = useState(-1);\n  const [hovered, setHovered] = useState(false);\n  const [_value, setValue] = useUncontrolled<RangeSliderValue>({\n    value,\n    defaultValue,\n    finalValue: [min!, max!],\n    onChange,\n  });\n  const valueRef = useRef(_value);\n  const thumbs = useRef<HTMLDivElement[]>([]);\n  const thumbIndex = useRef<number | undefined>(undefined);\n  const positions = [\n    getPosition({ value: _value[0], min: min!, max: max! }),\n    getPosition({ value: _value[1], min: min!, max: max! }),\n  ];\n\n  const precision = _precision ?? getPrecision(step!);\n\n  const _setValue = (val: RangeSliderValue) => {\n    setValue(val);\n    valueRef.current = val;\n  };\n\n  useEffect(\n    () => {\n      if (Array.isArray(value)) {\n        valueRef.current = value;\n      }\n    },\n    Array.isArray(value) ? [value[0], value[1]] : [null, null]\n  );\n\n  const setRangedValue = (val: number, index: number, triggerChangeEnd: boolean) => {\n    const clone: RangeSliderValue = [...valueRef.current];\n    clone[index] = val;\n\n    if (index === 0) {\n      if (val > clone[1] - (minRange! - 0.000000001)) {\n        clone[1] = Math.min(val + minRange!, max!);\n      }\n\n      if (val > (max! - (minRange! - 0.000000001) || min!)) {\n        clone[index] = valueRef.current[index];\n      }\n\n      if (clone[1] - val > maxRange!) {\n        clone[1] = val + maxRange!;\n      }\n    }\n\n    if (index === 1) {\n      if (val < clone[0] + minRange!) {\n        clone[0] = Math.max(val - minRange!, min!);\n      }\n\n      if (val < clone[0] + minRange!) {\n        clone[index] = valueRef.current[index];\n      }\n\n      if (val - clone[0] > maxRange!) {\n        clone[0] = val - maxRange!;\n      }\n    }\n\n    clone[0] = getFloatingValue(clone[0], precision);\n    clone[1] = getFloatingValue(clone[1], precision);\n\n    _setValue(clone);\n\n    if (triggerChangeEnd) {\n      onChangeEnd?.(valueRef.current);\n    }\n  };\n\n  const handleChange = (val: number) => {\n    if (!disabled) {\n      const nextValue = getChangeValue({\n        value: val,\n        min: min!,\n        max: max!,\n        step: step!,\n        precision,\n      });\n      setRangedValue(nextValue, thumbIndex.current!, false);\n    }\n  };\n\n  const { ref: container, active } = useMove(\n    ({ x }) => handleChange(x),\n    { onScrubEnd: () => onChangeEnd?.(valueRef.current) },\n    dir\n  );\n\n  function handleThumbMouseDown(index: number) {\n    thumbIndex.current = index;\n  }\n\n  const handleTrackMouseDownCapture = (\n    event: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>\n  ) => {\n    container.current!.focus();\n    const rect = container.current!.getBoundingClientRect();\n    const changePosition = getClientPosition(event.nativeEvent);\n    const changeValue = getChangeValue({\n      value: changePosition - rect.left,\n      max: max!,\n      min: min!,\n      step: step!,\n      containerWidth: rect.width,\n    });\n\n    const nearestHandle =\n      Math.abs(_value[0] - changeValue) > Math.abs(_value[1] - changeValue) ? 1 : 0;\n    const _nearestHandle = dir === 'ltr' ? nearestHandle : nearestHandle === 1 ? 0 : 1;\n\n    thumbIndex.current = _nearestHandle;\n  };\n\n  const getFocusedThumbIndex = () => {\n    if (focused !== 1 && focused !== 0) {\n      setFocused(0);\n      return 0;\n    }\n\n    return focused;\n  };\n\n  const handleTrackKeydownCapture = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (!disabled) {\n      switch (event.key) {\n        case 'ArrowUp': {\n          event.preventDefault();\n          const focusedIndex = getFocusedThumbIndex();\n          thumbs.current[focusedIndex].focus();\n          setRangedValue(\n            getFloatingValue(\n              Math.min(Math.max(valueRef.current[focusedIndex] + step!, min!), max!),\n              precision\n            ),\n            focusedIndex,\n            true\n          );\n          break;\n        }\n        case 'ArrowRight': {\n          event.preventDefault();\n          const focusedIndex = getFocusedThumbIndex();\n          thumbs.current[focusedIndex].focus();\n          setRangedValue(\n            getFloatingValue(\n              Math.min(\n                Math.max(\n                  dir === 'rtl'\n                    ? valueRef.current[focusedIndex] - step!\n                    : valueRef.current[focusedIndex] + step!,\n                  min!\n                ),\n                max!\n              ),\n              precision\n            ),\n            focusedIndex,\n            true\n          );\n          break;\n        }\n\n        case 'ArrowDown': {\n          event.preventDefault();\n          const focusedIndex = getFocusedThumbIndex();\n          thumbs.current[focusedIndex].focus();\n          setRangedValue(\n            getFloatingValue(\n              Math.min(Math.max(valueRef.current[focusedIndex] - step!, min!), max!),\n              precision\n            ),\n            focusedIndex,\n            true\n          );\n          break;\n        }\n        case 'ArrowLeft': {\n          event.preventDefault();\n          const focusedIndex = getFocusedThumbIndex();\n          thumbs.current[focusedIndex].focus();\n          setRangedValue(\n            getFloatingValue(\n              Math.min(\n                Math.max(\n                  dir === 'rtl'\n                    ? valueRef.current[focusedIndex] + step!\n                    : valueRef.current[focusedIndex] - step!,\n                  min!\n                ),\n                max!\n              ),\n              precision\n            ),\n            focusedIndex,\n            true\n          );\n          break;\n        }\n\n        default: {\n          break;\n        }\n      }\n    }\n  };\n\n  const sharedThumbProps = {\n    max: max!,\n    min: min!,\n    size,\n    labelTransitionProps,\n    labelAlwaysOn,\n    onBlur: () => setFocused(-1),\n  };\n\n  const hasArrayThumbChildren = Array.isArray(thumbChildren);\n\n  return (\n    <SliderProvider value={{ getStyles }}>\n      <SliderRoot {...others} size={size!} ref={ref} disabled={disabled}>\n        <Track\n          offset={positions[0]}\n          marksOffset={_value[0]}\n          filled={positions[1] - positions[0]}\n          marks={marks}\n          inverted={inverted}\n          min={min!}\n          max={max!}\n          value={_value[1]}\n          disabled={disabled}\n          containerProps={{\n            ref: container as any,\n            onMouseEnter: showLabelOnHover ? () => setHovered(true) : undefined,\n            onMouseLeave: showLabelOnHover ? () => setHovered(false) : undefined,\n            onTouchStartCapture: handleTrackMouseDownCapture,\n            onTouchEndCapture: () => {\n              thumbIndex.current = -1;\n            },\n            onMouseDownCapture: handleTrackMouseDownCapture,\n            onMouseUpCapture: () => {\n              thumbIndex.current = -1;\n            },\n            onKeyDownCapture: handleTrackKeydownCapture,\n          }}\n        >\n          <Thumb\n            {...sharedThumbProps}\n            value={scale!(_value[0])}\n            position={positions[0]}\n            dragging={active}\n            label={\n              typeof label === 'function'\n                ? label(getFloatingValue(scale!(_value[0]), precision))\n                : label\n            }\n            ref={(node) => {\n              thumbs.current[0] = node!;\n            }}\n            thumbLabel={thumbFromLabel}\n            onMouseDown={() => handleThumbMouseDown(0)}\n            onFocus={() => setFocused(0)}\n            showLabelOnHover={showLabelOnHover}\n            isHovered={hovered}\n            disabled={disabled}\n          >\n            {hasArrayThumbChildren ? thumbChildren[0] : thumbChildren}\n          </Thumb>\n\n          <Thumb\n            {...sharedThumbProps}\n            thumbLabel={thumbToLabel}\n            value={scale!(_value[1])}\n            position={positions[1]}\n            dragging={active}\n            label={\n              typeof label === 'function'\n                ? label(getFloatingValue(scale!(_value[1]), precision))\n                : label\n            }\n            ref={(node) => {\n              thumbs.current[1] = node!;\n            }}\n            onMouseDown={() => handleThumbMouseDown(1)}\n            onFocus={() => setFocused(1)}\n            showLabelOnHover={showLabelOnHover}\n            isHovered={hovered}\n            disabled={disabled}\n          >\n            {hasArrayThumbChildren ? thumbChildren[1] : thumbChildren}\n          </Thumb>\n        </Track>\n\n        <input type=\"hidden\" name={`${name}_from`} value={_value[0]} {...hiddenInputProps} />\n        <input type=\"hidden\" name={`${name}_to`} value={_value[1]} {...hiddenInputProps} />\n      </SliderRoot>\n    </SliderProvider>\n  );\n});\n\nRangeSlider.classes = classes;\nRangeSlider.displayName = '@mantine/core/RangeSlider';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}