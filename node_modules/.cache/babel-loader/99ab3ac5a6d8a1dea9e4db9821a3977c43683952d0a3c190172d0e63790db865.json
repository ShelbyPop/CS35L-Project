{"ast":null,"code":"'use client';\n\nimport { useMemo } from 'react';\nimport { useUncontrolled } from '../use-uncontrolled/use-uncontrolled.mjs';\nfunction range(start, end) {\n  const length = end - start + 1;\n  return Array.from({\n    length\n  }, (_, index) => index + start);\n}\nconst DOTS = \"dots\";\nfunction usePagination({\n  total,\n  siblings = 1,\n  boundaries = 1,\n  page,\n  initialPage = 1,\n  onChange\n}) {\n  const _total = Math.max(Math.trunc(total), 0);\n  const [activePage, setActivePage] = useUncontrolled({\n    value: page,\n    onChange,\n    defaultValue: initialPage,\n    finalValue: initialPage\n  });\n  const setPage = pageNumber => {\n    if (pageNumber <= 0) {\n      setActivePage(1);\n    } else if (pageNumber > _total) {\n      setActivePage(_total);\n    } else {\n      setActivePage(pageNumber);\n    }\n  };\n  const next = () => setPage(activePage + 1);\n  const previous = () => setPage(activePage - 1);\n  const first = () => setPage(1);\n  const last = () => setPage(_total);\n  const paginationRange = useMemo(() => {\n    const totalPageNumbers = siblings * 2 + 3 + boundaries * 2;\n    if (totalPageNumbers >= _total) {\n      return range(1, _total);\n    }\n    const leftSiblingIndex = Math.max(activePage - siblings, boundaries);\n    const rightSiblingIndex = Math.min(activePage + siblings, _total - boundaries);\n    const shouldShowLeftDots = leftSiblingIndex > boundaries + 2;\n    const shouldShowRightDots = rightSiblingIndex < _total - (boundaries + 1);\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = siblings * 2 + boundaries + 2;\n      return [...range(1, leftItemCount), DOTS, ...range(_total - (boundaries - 1), _total)];\n    }\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = boundaries + 1 + 2 * siblings;\n      return [...range(1, boundaries), DOTS, ...range(_total - rightItemCount, _total)];\n    }\n    return [...range(1, boundaries), DOTS, ...range(leftSiblingIndex, rightSiblingIndex), DOTS, ...range(_total - boundaries + 1, _total)];\n  }, [_total, siblings, activePage]);\n  return {\n    range: paginationRange,\n    active: activePage,\n    setPage,\n    next,\n    previous,\n    first,\n    last\n  };\n}\nexport { DOTS, usePagination };","map":{"version":3,"names":["range","start","end","length","Array","from","_","index","DOTS","usePagination","total","siblings","boundaries","page","initialPage","onChange","_total","Math","max","trunc","activePage","setActivePage","useUncontrolled","value","defaultValue","finalValue","setPage","pageNumber","next","previous","first","last","paginationRange","useMemo","totalPageNumbers","leftSiblingIndex","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","leftItemCount","rightItemCount","active"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/hooks/src/use-pagination/use-pagination.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport { useUncontrolled } from '../use-uncontrolled/use-uncontrolled';\n\nfunction range(start: number, end: number) {\n  const length = end - start + 1;\n  return Array.from({ length }, (_, index) => index + start);\n}\n\nexport const DOTS = 'dots';\n\nexport interface PaginationParams {\n  /** Page selected on initial render, defaults to 1 */\n  initialPage?: number;\n\n  /** Controlled active page number */\n  page?: number;\n\n  /** Total amount of pages */\n  total: number;\n\n  /** Siblings amount on left/right side of selected page, defaults to 1 */\n  siblings?: number;\n\n  /** Amount of elements visible on left/right edges, defaults to 1  */\n  boundaries?: number;\n\n  /** Callback fired after change of each page */\n  onChange?: (page: number) => void;\n}\n\nexport function usePagination({\n  total,\n  siblings = 1,\n  boundaries = 1,\n  page,\n  initialPage = 1,\n  onChange,\n}: PaginationParams) {\n  const _total = Math.max(Math.trunc(total), 0);\n  const [activePage, setActivePage] = useUncontrolled({\n    value: page,\n    onChange,\n    defaultValue: initialPage,\n    finalValue: initialPage,\n  });\n\n  const setPage = (pageNumber: number) => {\n    if (pageNumber <= 0) {\n      setActivePage(1);\n    } else if (pageNumber > _total) {\n      setActivePage(_total);\n    } else {\n      setActivePage(pageNumber);\n    }\n  };\n\n  const next = () => setPage(activePage + 1);\n  const previous = () => setPage(activePage - 1);\n  const first = () => setPage(1);\n  const last = () => setPage(_total);\n\n  const paginationRange = useMemo((): (number | 'dots')[] => {\n    const totalPageNumbers = siblings * 2 + 3 + boundaries * 2;\n    if (totalPageNumbers >= _total) {\n      return range(1, _total);\n    }\n\n    const leftSiblingIndex = Math.max(activePage - siblings, boundaries);\n    const rightSiblingIndex = Math.min(activePage + siblings, _total - boundaries);\n\n    const shouldShowLeftDots = leftSiblingIndex > boundaries + 2;\n    const shouldShowRightDots = rightSiblingIndex < _total - (boundaries + 1);\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = siblings * 2 + boundaries + 2;\n      return [...range(1, leftItemCount), DOTS, ...range(_total - (boundaries - 1), _total)];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = boundaries + 1 + 2 * siblings;\n      return [...range(1, boundaries), DOTS, ...range(_total - rightItemCount, _total)];\n    }\n\n    return [\n      ...range(1, boundaries),\n      DOTS,\n      ...range(leftSiblingIndex, rightSiblingIndex),\n      DOTS,\n      ...range(_total - boundaries + 1, _total),\n    ];\n  }, [_total, siblings, activePage]);\n\n  return {\n    range: paginationRange,\n    active: activePage,\n    setPage,\n    next,\n    previous,\n    first,\n    last,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}