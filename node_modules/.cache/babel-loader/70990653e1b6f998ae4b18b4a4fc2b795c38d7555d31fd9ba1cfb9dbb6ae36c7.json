{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { ChipGroupProvider } from '../ChipGroup.context.mjs';\nconst defaultProps = {};\nfunction ChipGroup(props) {\n  const {\n    value,\n    defaultValue,\n    onChange,\n    multiple,\n    children\n  } = useProps(\"ChipGroup\", defaultProps, props);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: multiple ? [] : null,\n    onChange\n  });\n  const isChipSelected = val => Array.isArray(_value) ? _value.includes(val) : val === _value;\n  const handleChange = event => {\n    const val = event.currentTarget.value;\n    if (Array.isArray(_value)) {\n      setValue(_value.includes(val) ? _value.filter(v => v !== val) : [..._value, val]);\n    } else {\n      setValue(val);\n    }\n  };\n  return /* @__PURE__ */React.createElement(ChipGroupProvider, {\n    value: {\n      isChipSelected,\n      onChange: handleChange,\n      multiple\n    }\n  }, children);\n}\nChipGroup.displayName = \"@mantine/core/ChipGroup\";\nexport { ChipGroup };","map":{"version":3,"names":["defaultProps","ChipGroup","props","value","defaultValue","onChange","multiple","children","useProps","_value","setValue","useUncontrolled","finalValue","isChipSelected","val","Array","isArray","includes","handleChange","event","currentTarget","filter","v","React","createElement","ChipGroupProvider","displayName"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/core/src/components/Chip/ChipGroup/ChipGroup.tsx"],"sourcesContent":["import React from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { useProps } from '../../../core';\nimport { ChipGroupProvider } from '../ChipGroup.context';\n\nexport interface ChipGroupProps<T extends boolean = false> {\n  /** Determines whether it is allowed to select multiple values, `false` by default */\n  multiple?: T;\n\n  /** Controlled component value */\n  value?: T extends true ? string[] : string | null;\n\n  /** Uncontrolled component initial value */\n  defaultValue?: T extends true ? string[] : string | null;\n\n  /** Called when value changes. If `multiple` prop is set, called with an array of selected values. If not, called with a string value of selected chip. */\n  onChange?: (value: T extends true ? string[] : string) => void;\n\n  /** `Chip` components and any other elements */\n  children?: React.ReactNode;\n}\n\nconst defaultProps: Partial<ChipGroupProps<false>> = {};\n\nexport function ChipGroup<T extends boolean>(props: ChipGroupProps<T>) {\n  const { value, defaultValue, onChange, multiple, children } = useProps(\n    'ChipGroup',\n    defaultProps as any,\n    props\n  );\n\n  const [_value, setValue] = useUncontrolled<string | null | string[]>({\n    value,\n    defaultValue,\n    finalValue: multiple ? ([] as string[]) : null,\n    onChange,\n  });\n\n  const isChipSelected = (val: string) =>\n    Array.isArray(_value) ? _value.includes(val) : val === _value;\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const val = event.currentTarget.value;\n    if (Array.isArray(_value)) {\n      setValue(_value.includes(val) ? _value.filter((v) => v !== val) : [..._value, val]);\n    } else {\n      setValue(val);\n    }\n  };\n\n  return (\n    <ChipGroupProvider value={{ isChipSelected, onChange: handleChange, multiple }}>\n      {children}\n    </ChipGroupProvider>\n  );\n}\n\nChipGroup.displayName = '@mantine/core/ChipGroup';\n"],"mappings":";;;;;;;;;;;;;AAKA,MAAMA,YAAY,GAAG,EAAE;AAChB,SAASC,SAASA,CAACC,KAAK,EAAE;EAC/B,MAAM;IAAEC,KAAK;IAAEC,YAAY;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAQ,CAAE,GAAGC,QAAQ,CACpE,WAAW,EACXR,YAAY,EACZE,KACJ,CAAG;EACD,MAAM,CAACO,MAAM,EAAEC,QAAQ,CAAC,GAAGC,eAAe,CAAC;IACzCR,KAAK;IACLC,YAAY;IACZQ,UAAU,EAAEN,QAAQ,GAAG,EAAE,GAAG,IAAI;IAChCD;EACJ,CAAG,CAAC;EACF,MAAMQ,cAAc,GAAIC,GAAG,IAAKC,KAAK,CAACC,OAAO,CAACP,MAAM,CAAC,GAAGA,MAAM,CAACQ,QAAQ,CAACH,GAAG,CAAC,GAAGA,GAAG,KAAKL,MAAM;EAC7F,MAAMS,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAML,GAAG,GAAGK,KAAK,CAACC,aAAa,CAACjB,KAAK;IACrC,IAAIY,KAAK,CAACC,OAAO,CAACP,MAAM,CAAC,EAAE;MACzBC,QAAQ,CAACD,MAAM,CAACQ,QAAQ,CAACH,GAAG,CAAC,GAAGL,MAAM,CAACY,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKR,GAAG,CAAC,GAAG,CAAC,GAAGL,MAAM,EAAEK,GAAG,CAAC,CAAC;IACzF,CAAK,MAAM;MACLJ,QAAQ,CAACI,GAAG,CAAC;IACd;EACL,CAAG;EACD,sBAAuBS,KAAK,CAACC,aAAa,CAACC,iBAAiB,EAAE;IAAEtB,KAAK,EAAE;MAAEU,cAAc;MAAER,QAAQ,EAAEa,YAAY;MAAEZ;IAAQ;EAAI,GAAEC,QAAQ,CAAC;AAC1I;AACAN,SAAS,CAACyB,WAAW,GAAG,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}