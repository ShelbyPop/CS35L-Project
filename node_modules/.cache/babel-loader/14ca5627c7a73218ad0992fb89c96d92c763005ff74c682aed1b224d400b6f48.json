{"ast":null,"code":"'use client';\n\nimport { useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect.mjs';\nimport { randomId } from '../utils/random-id/random-id.mjs';\nimport { useReactId } from './use-react-id.mjs';\nfunction useId(staticId) {\n  const reactId = useReactId();\n  const [uuid, setUuid] = useState(reactId);\n  useIsomorphicEffect(() => {\n    setUuid(randomId());\n  }, []);\n  if (typeof staticId === \"string\") {\n    return staticId;\n  }\n  if (typeof window === \"undefined\") {\n    return reactId;\n  }\n  return uuid;\n}\nexport { useId };","map":{"version":3,"names":["useId","staticId","reactId","useReactId","uuid","setUuid","useState","useIsomorphicEffect","randomId","window"],"sources":["/Users/virounikamina/pompom/node_modules/@mantine/hooks/src/use-id/use-id.ts"],"sourcesContent":["import { useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect';\nimport { randomId } from '../utils';\nimport { useReactId } from './use-react-id';\n\nexport function useId(staticId?: string) {\n  const reactId = useReactId();\n  const [uuid, setUuid] = useState(reactId);\n\n  useIsomorphicEffect(() => {\n    setUuid(randomId());\n  }, []);\n\n  if (typeof staticId === 'string') {\n    return staticId;\n  }\n\n  if (typeof window === 'undefined') {\n    return reactId;\n  }\n\n  return uuid;\n}\n"],"mappings":";;;;;;AAKO,SAASA,KAAKA,CAACC,QAAQ,EAAE;EAC9B,MAAMC,OAAO,GAAGC,UAAU,EAAE;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAACJ,OAAO,CAAC;EACzCK,mBAAmB,CAAC,MAAM;IACxBF,OAAO,CAACG,QAAQ,EAAE,CAAC;EACpB,GAAE,EAAE,CAAC;EACN,IAAI,OAAOP,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOA,QAAQ;EAChB;EACD,IAAI,OAAOQ,MAAM,KAAK,WAAW,EAAE;IACjC,OAAOP,OAAO;EACf;EACD,OAAOE,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}